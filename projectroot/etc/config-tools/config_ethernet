#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018 WAGO Kontakttechnik GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: config_ethernet
#
# Configure Ethernet
#
# Author: WAGO Kontakttechnik GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_defines" ]; then
  echo "config_tool_defines missing"
  exit 255
fi

. /etc/config-tools/config_tool_defines

status=$SUCCESS

set_interface_config () {
  local json_config="$1"
  out=$(dbus-send --system --print-reply --reply-timeout=15000 --type=method_call --dest=de.wago.netconfd /de/wago/netconfd/interface_config de.wago.netconfd1.interface_config.setinterfaceconfig string:"${json_config}")
  for token in $out; do 
      dbus_out=$token
  done  
  dbus_out=${dbus_out#\"}
  dbus_out=${dbus_out%\"}  
  echo "$dbus_out"
}

# show help-text if requested
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* Change the ethernet port settings *"
  echo
  echo "Usage: $0 < [interface=interface-value] port=port-value [state=state-value ] [ autoneg=autoneg-value ] [ speed=speed-value ] [duplex=duplex-value ]"
  echo "With autoneg=on, no speed or duplex values have to be provided."
  echo
# pfc200-specific settings
  echo "interface-value: eth0 [ignored]"
  echo "port-value: $(/etc/config-tools/get_eth_config --print-ports)"
  echo "state-value: enabled/disabled"
  echo "autoneg-value: enabled/disabled"
  echo "speed-value: 10M/100M"
  echo "duplex-value: full/half"
  echo
  exit $status
fi

declare -A params

while [[ $# -ne 0 ]]; do
    case "$1" in
        interface=*)
            ;; # value is ignored
        port=*)
            port=${1#port=}
            params[device]="\"$port\""
            ;;
        state=*)

            if [[ "${1#state=}" == "on" || "${1#state=}" == "enabled" ]]; then
                state="up"
            elif [[ "${1#state=}" == "off" || "${1#state=}" == "disabled" ]]; then
                state="down"
            else
                state="${1#state=}"
            fi
            params[state]="\"$state\""
            ;;
        autoneg=*)

            if [[ "${1#autoneg=}" == "on" || "${1#autoneg=}" == "enabled" ]]; then
                autoneg=true
            elif [[ "${1#autoneg=}" == "off" || "${1#autoneg=}" == "disabled" ]]; then
                autoneg=false
            else
                autoneg=${1#autoneg=}
            fi
            params[autonegotiation]="$autoneg"
            ;;
        speed=*)
            if [[ "${1#speed=}" == "10M" ]]; then
                speed=10
            elif [[ "${1#speed=}" == "100M" ]]; then
                speed=100
            else
                speed="${1#speed=}"
            fi
            params[speed]=$speed
            ;;
        duplex=*)
            params[duplex]="\"${1#duplex=}\""
            ;;
        *)
            status=$INVALID_PARAMETER
            break
            ;;
    esac
    shift 1

done

if [[ $status == $SUCCESS ]]; then
    add_separator=false
    json_content=""
    for i in "${!params[@]}" ; do
        if [[ $add_separator == false ]]; then
                json_content="\"$i\":${params[$i]}"
                add_separator=true
        else
                json_content="$json_content,\"$i\":${params[$i]}"
        fi
    done    
    set_interface_config "{${json_content}}"
    status=$?
fi

exit $status
