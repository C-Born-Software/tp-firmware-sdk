#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018 WAGO Kontakttechnik GmbH & Co. KG

#-----------------------------------------------------------------------------
# Script-name: config_wwan
#
# Control wwan networking interface.
#
# Author: WAGO Kontakttechnik GmbH & Co. KG.
#-----------------------------------------------------------------------------

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib

WWAN_CONFIGFILE_NAME=/etc/specific/wwan.conf

#--------------------------------------------------------------------
# help text (requested with specified parameter)
#--------------------------------------------------------------------
if [ "$1" = "-h" -o "$1" = "--help" ]; then
    echo
    echo "* Control wwan networking interface according to configuration in /etc/specific/wwan.conf *"
    echo
    echo "Usage: config_wwan -h | --help                 print this usage"
    echo "       config_wwan [-e | --enable ]            activate interface (ifup)"
    echo "       config_wwan [-d | --disable ]           deactivate interface (ifdown)"
    echo "       config_wwan [-s | --status ]            print interface status {UP | DOWN | NOT_CONFIGURED}"
    echo "       config_wwan [-t | --start ]             start interface DHCP client"
    echo "       config_wwan [-p | --stop ]              stop interface DHCP client and clear IP addresses"
    echo "       config_wwan [-r | --renew ]             renew interface IP address"
    echo "       config_wwan [-i | --inet ]              print interface IPV4 address"
    echo "       config_wwan [-I | --inet6 ]             print interface IPV6 address"
    echo
    exit 0
fi

#--------------------------------------------------------------------
# main programm
#--------------------------------------------------------------------

status=$SUCCESS

# check for missing input parameter
if [ -z "$1" ]; then
  SetLastError "Missing input parameter"
  status=$MISSING_PARAMETER
  exit $status
fi

#check whether config-file exists 
if [ ! -f $WWAN_CONFIGFILE_NAME ]; then
  SetLastError "Config file is missing."
  status=$CONFIG_FILE_MISSING
  exit $status
fi

. $WWAN_CONFIGFILE_NAME
if [ "$1" = "-e" -o "$1" = "--enable" ]; then
  ifup $WWAN_DEVICE_NAME > /dev/null 2> /dev/null
  status=$?

elif [ "$1" = "-d" -o "$1" = "--disable" ]; then
  ifdown $WWAN_DEVICE_NAME > /dev/null 2> /dev/null
  status=$?

elif [ "$1" = "-s" -o "$1" = "--status" ]; then
  WWAN_STATUS="$(sudo ip addr show $WWAN_DEVICE_NAME | grep $WWAN_DEVICE_NAME)"
  if [ -n "$WWAN_STATUS" ]; then
    if [ "$(echo $WWAN_STATUS | grep ',UP')" -o "$(echo $WWAN_STATUS | grep '<UP')" ]; then
      echo "UP"
    else
      echo "DOWN"
    fi
  else
    echo "NOT_CONFIGURED"
  fi

elif [ "$1" = "-t" -o "$1" = "--start" ]; then
  /sbin/udhcpc -i $WWAN_DEVICE_NAME -h `/bin/hostname` -V `/etc/config-tools/get_typelabel_value ORDER` -S -p /var/run/udhcpc_$WWAN_DEVICE_NAME.pid > /dev/null 2> /dev/null &
  status=$?

elif [ "$1" = "-p" -o "$1" = "--stop" ]; then
  if [ -e /var/run/udhcpc_$WWAN_DEVICE_NAME.pid ]; then
    kill -SIGKILL $(cat /var/run/udhcpc_$WWAN_DEVICE_NAME.pid)
#else: udhcpc not started
  fi
  WWAN_STATUS="$(sudo ip addr show $WWAN_DEVICE_NAME | grep $WWAN_DEVICE_NAME)"
  if [ -n "$WWAN_STATUS" ]; then
    sudo ip addr flush dev $WWAN_DEVICE_NAME
#else: interface not configured
  fi

elif [ "$1" = "-r" -o "$1" = "--renew" ]; then
  if [ -e /var/run/udhcpc_$WWAN_DEVICE_NAME.pid ]; then
    kill -SIGUSR1 $(cat /var/run/udhcpc_$WWAN_DEVICE_NAME.pid)
#else: udhcpc not started
  fi

elif [ "$1" = "-i" -o "$1" = "--inet" ]; then
  WWAN_IPV4="$(sudo ip addr show $WWAN_DEVICE_NAME | grep 'inet ')"
  if [ -z "$WWAN_IPV4" ]; then
    # address has been not yet assigned or interface is disabled
    echo "0.0.0.0/32"
  else
    echo "$(echo $WWAN_IPV4 | cut -d' ' -f 2)"
  fi

elif [ "$1" = "-I" -o "$1" = "--inet6" ]; then
  WWAN_IPV6="$(sudo ip addr show $WWAN_DEVICE_NAME | grep 'inet6')"
  if [ -z "$WWAN_IPV6" ]; then
    # address has been not yet assigned or interface is disabled
    echo "::/128"
  else
    echo "$(echo $WWAN_IPV6 | cut -d' ' -f 2)"
  fi

else
  SetLastError "Invalid parameter ($paramName)"
  status=$INVALID_PARAMETER
fi

exit $status
