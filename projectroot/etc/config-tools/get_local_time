#!/bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2018 WAGO Kontakttechnik GmbH & Co. KG

#-----------------------------------------------------------------------------#
# Script-name: get_local_time
#
# Get local time. The script is needed by the C-programm, because in C we can't
# get the local time correctly.
#
# Author: WAGO Kontakttechnik GmbH
#-----------------------------------------------------------------------------#

# load general definitions and functions
if [ ! -f "/etc/config-tools/config_tool_lib" ]; then
  echo "config_tool_lib missing"
  exit 255
fi

. /etc/config-tools/config_tool_lib


GetDisplayMode()
# 
# Get time-display-mode (12-hour or 24-hour) from config-file
#
{
  local displayMode=""

  # if config-file is not existing, create it with 24-hour-format as default
  if [ ! -f $CLOCK_FORMAT_FILENAME ]; then
  
    echo $DISPLAY_MODE"="$HOUR_FORMAT_24 >> $CLOCK_FORMAT_FILENAME
    if [ $? != $SUCCESS ]; then
      ReportError $WRITE_FILE_ERROR "($CLOCK_FORMAT_FILENAME)"
      exit $WRITE_FILE_ERROR
    fi

    # write buffered filesystem-blocks to disk
    sync

  fi

  # if config-file is existing and readable, read display-format and check if it is valid
  if [ -f $CLOCK_FORMAT_FILENAME ] && [ -r $CLOCK_FORMAT_FILENAME ]; then

    # regular-expression to filter display-mode itself and the whole line
    CLOCK_DISPLAY_MODE_REGEX="$HOUR_FORMAT_24|$HOUR_FORMAT_12"
    CLOCK_DISPLAY_MODE_LINE_REGEX="^$DISPLAY_MODE=$CLOCK_DISPLAY_MODE_REGEX"

    # filter the line with the display-mode-string from file, discard error-outputs
    displayModeLine=`egrep -o "$CLOCK_DISPLAY_MODE_LINE_REGEX" $CLOCK_FORMAT_FILENAME 2> /dev/null`

    # if line is existing, filter display-mode
    if [ $? = $SUCCESS ]; then

      # filter display-mode, error can't occur, because expression was already searched
      displayMode=`echo $displayModeLine | egrep -o $CLOCK_DISPLAY_MODE_REGEX`

    fi
  fi
  # else display-mode is still empty

  echo -e $displayMode"\c"
}


GetTime()
#
# Get time-string for local or utc, depending on the requested display-mode (12-hour or 24-hour
#
{
  local timeForm=$1

  # if UTC-time should be read, set option for "time"-call accordingly 
  # in any other case (input-parameter is "local", empty or invalid) take local-time as default
  if [ "$UTC" == "$timeForm" ]; then
    timeFormOption="-u"
  else
    timeFormOption=""
  fi

  displayMode=`GetDisplayMode`

  # get time-string depending on the display-mode                   
  if [ "$HOUR_FORMAT_24" == "$displayMode" ] || [ -z "$displayMode" ]; then
    time=`/bin/date $timeFormOption +'%H:%M:%S'`
  else
    time=`/bin/date $timeFormOption +'%r'`
  fi

  echo -e $time"\c"
}


#-------------- main-programm ------------------------#

source /etc/timezone

# show help-text if requested
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo
  echo "* Get local time, depending on the configured display-mode (12-hour or 24-hour) *"
  echo
  echo "Usage: get_local_time"
  echo
  exit $status
fi


time=`GetTime local`
echo -e $time"\c"

exit $SUCCESS






