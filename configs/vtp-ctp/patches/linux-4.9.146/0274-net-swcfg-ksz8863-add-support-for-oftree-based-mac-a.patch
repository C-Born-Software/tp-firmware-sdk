From a1bb0d7a67ec78c406dac65415a11cf647d4599f Mon Sep 17 00:00:00 2001
From: Heinrich Toews <heinrich.toews@wago.com>
Date: Mon, 26 Nov 2018 11:59:11 +0000
Subject: [PATCH] net: swcfg: ksz8863: add support for oftree based mac address

The bootoader stores mac addresses in aliases 'ethernet0' and 'ethernet1'.
Add the support for reading those nodes and getting the mac-address
from it.

Signed-off-by: Heinrich Toews <heinrich.toews@wago.com>
---
 drivers/net/phy/ksz8863-cfg.c | 40 +++++++++++++++++-----------------------
 1 file changed, 17 insertions(+), 23 deletions(-)

diff --git a/drivers/net/phy/ksz8863-cfg.c b/drivers/net/phy/ksz8863-cfg.c
index ea4d414..a4bd7b2 100644
--- a/drivers/net/phy/ksz8863-cfg.c
+++ b/drivers/net/phy/ksz8863-cfg.c
@@ -19,6 +19,8 @@
 #include <asm/uaccess.h>
 #include <linux/switch.h>
 #include <linux/of_mdio.h>
+#include <linux/of_net.h>
+#include <linux/of_address.h>
 #include <linux/platform_device.h>
 
 #include <linux/ksz8863.h>
@@ -74,24 +76,6 @@ static u8 host_mac[6] = {0,0,0,0,0,0}; /* own mac address parsed from kernel com
 
 static int tbl_nwrite(unsigned table, u16 addr, u8 *buf, unsigned len);
 
-static int cmdline_args_cb(char *param, char *val, const char *unused, void *arg)
-{
-	int m[6];
-
-	if (!strncmp(param, "macaddr", 8)) {
-		if (sscanf(val, MAC_FMT, &m[0], &m[1], &m[2], &m[3], &m[4], &m[5]) != 6)
-			return -1;
-		host_mac[0] = (u8) m[0];
-		host_mac[1] = (u8) m[1];
-		host_mac[2] = (u8) m[2];
-		host_mac[3] = (u8) m[3];
-		host_mac[4] = (u8) m[4];
-		host_mac[5] = (u8) m[5];
-	}
-    return 0;
-}
-
-
 #define KSZ8863_HOST_PORT_MASK (0x4u)
 
 static int ksz8863_set_host_mac(void)
@@ -1764,8 +1748,11 @@ static struct switch_dev *ksz8863_of_get_swdev(struct device *dev)
 static int ksz8863_cfg_probe(struct platform_device *pdev)
 {
 	struct switch_dev *swdev;
-        int err;
-	char *cmdline;
+	struct device_node *of_ethernet;
+	struct device_node *of_aliases;
+	const char *of_prop_name;
+	static const char *mac_addr;
+	int err;
 
 	if (!ksz8863_fns || !ksz8863_fns->nread)
 		return -EPROBE_DEFER;
@@ -1789,9 +1776,16 @@ static int ksz8863_cfg_probe(struct platform_device *pdev)
         ksz8863_fns->setup_dflt_cfg = ksz8863_setup_dflt_cfg;
 	ksz8863_fns->set_host_mac = ksz8863_set_host_mac;
 
-	cmdline = kstrdup(saved_command_line, GFP_KERNEL);
-	parse_args("macaddr", cmdline, NULL, 0, 0, 0, NULL, cmdline_args_cb);
-	kfree(cmdline);
+	/* get mac address from oftree */
+	of_aliases = of_find_node_by_path("/aliases");
+	if (!of_property_read_string(of_aliases, "ethernet0", &of_prop_name)) {
+		of_ethernet = of_find_node_by_path(of_prop_name);
+		mac_addr = of_get_mac_address(of_ethernet);
+		if (mac_addr) {
+			/* copy mac address from oftree to hw variable */
+			memcpy(host_mac, mac_addr, sizeof(host_mac));
+		}
+	}
 
 	dev_info(&pdev->dev, "SWCONFIG: %s Driver probed\n", pdev->name);
 
-- 
2.7.4

