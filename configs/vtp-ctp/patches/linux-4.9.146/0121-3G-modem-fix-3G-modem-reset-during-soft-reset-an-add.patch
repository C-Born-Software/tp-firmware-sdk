From 16f4532f65317209578621508ca3faa0fd6d28de Mon Sep 17 00:00:00 2001
From: Oliver Schildan <oliver.schildan@wago.com>
Date: Wed, 4 Oct 2017 14:37:22 +0200
Subject: [PATCH] 3G-modem: fix 3G-modem reset during soft reset an add new
 sysfs attr for modem reset

---
 arch/arm/boot/dts/wago-pfc200-musb.dtsi |  5 +++
 arch/arm/boot/dts/wago-pfc200.dtsi      |  2 ++
 arch/arm/mach-omap2/wsysinit.c          | 64 +++++++++++++++++++++++++++++++++
 3 files changed, 71 insertions(+)

diff --git a/arch/arm/boot/dts/wago-pfc200-musb.dtsi b/arch/arm/boot/dts/wago-pfc200-musb.dtsi
index 609a527..e7897e0 100644
--- a/arch/arm/boot/dts/wago-pfc200-musb.dtsi
+++ b/arch/arm/boot/dts/wago-pfc200-musb.dtsi
@@ -17,6 +17,11 @@
 	};
 };
 
+&wsysinit {
+        modem,reset;
+        modem,gpio-rst = <&gpio5 2 GPIO_ACTIVE_HIGH>; /* 3G Modem Reset */
+};
+
 /*
  * To manually drive usb0_drvbus pin use the gpio setting below
  *
diff --git a/arch/arm/boot/dts/wago-pfc200.dtsi b/arch/arm/boot/dts/wago-pfc200.dtsi
index 2c85b88..1a88a98 100644
--- a/arch/arm/boot/dts/wago-pfc200.dtsi
+++ b/arch/arm/boot/dts/wago-pfc200.dtsi
@@ -40,6 +40,8 @@
 
 		tty,service   = "ttyO2";
 		tty,rs232-485 = "ttyO0";
+
+		modem,type = "3G";
 	
 		board,variant = "pfc200";
 
diff --git a/arch/arm/mach-omap2/wsysinit.c b/arch/arm/mach-omap2/wsysinit.c
index ddb182b..a8dedd6 100644
--- a/arch/arm/mach-omap2/wsysinit.c
+++ b/arch/arm/mach-omap2/wsysinit.c
@@ -43,14 +43,19 @@
 
 #define	DEVICE_NAME		"wsysinit-drv"
 
+#define RESET_TIME_QUECTEL_UC20_G 200
+
 struct wsysinit_settings {
 	bool wsysinit_init_sysfs;
 	bool dp_reset;
+	bool modem_reset;
 	int dp_gpio_rst;
+	int modem_gpio_rst;
 	bool dp_alow;
 	const char *nand_eccmode;
 	const char *tty_service;
 	const char *tty_rs232_485;
+	const char *modem;
 	int drvvbus_gpio;
 	const char *board_variant;
 	u32 adjtimex_tick;
@@ -81,6 +86,18 @@ static int dp_trig_reset(struct wsysinit_settings *ps)
 	return 0;
 }
 
+static int modem_reset(struct wsysinit_settings *ps)
+{
+	if (ps == NULL || !gpio_is_valid(ps->modem_gpio_rst))
+		return -EINVAL;
+
+	gpiod_set_value_cansleep(gpio_to_desc(ps->modem_gpio_rst), 1);
+	mdelay(RESET_TIME_QUECTEL_UC20_G);
+	gpiod_set_value_cansleep(gpio_to_desc(ps->modem_gpio_rst), 0);
+
+	return 0;
+}
+
 static ssize_t dp_sysfs_trig_reset(struct device *dev,
 				   struct device_attribute *attr,
 				   const char *buf,
@@ -97,6 +114,22 @@ static ssize_t dp_sysfs_trig_reset(struct device *dev,
 	return count;
 }
 
+static ssize_t modem_sysfs_reset(struct device *dev,
+				struct device_attribute *attr,
+				const char *buf,
+				size_t count)
+{
+	u32 val = simple_strtoul(buf, NULL, 10);
+
+	if (val != 1)
+		return -EINVAL;
+
+	/* Return value omitted, because is of no value for the user of the command */
+	(void)modem_reset(&wsysinitset);
+
+	return count;
+}
+
 static int wsysinit_init_probe_dt(struct platform_device *pdev)
 {
 	int ret;
@@ -140,6 +173,33 @@ static int wsysinit_init_probe_dt(struct platform_device *pdev)
 		return -1;
 	}
 
+
+	wsysinitset.modem_reset = of_property_read_bool(np, "modem,reset");
+	wsysinitset.modem_gpio_rst = of_get_named_gpio_flags(np, "modem,gpio-rst", 0, &flags);
+	if (wsysinitset.modem_gpio_rst == -EPROBE_DEFER)
+		return -EPROBE_DEFER;
+
+	if (wsysinitset.modem_gpio_rst >= 0) {
+		ret = devm_gpio_request_one(&pdev->dev, wsysinitset.modem_gpio_rst,
+						GPIOF_EXPORT_DIR_FIXED,
+						"Modem Reset Pin");
+		if (ret < 0) {
+			dev_err(&pdev->dev, "failed to claim modem reset pin\n");
+			return ret;
+		}
+
+		if (wsysinitset.modem_reset)
+			modem_reset(&wsysinitset);
+
+		/* devm_gpio_free(&pdev->dev, wsysinitset.dp_gpio_rst); */
+	} else if (wsysinitset.dp_reset) {
+		dev_err(&pdev->dev, "failed to find modem reset signal!\n");
+		return -1;
+	}
+
+	if (of_property_read_string(np, "modem,type", &wsysinitset.modem))
+		 wsysinitset.modem = NULL;
+
 	if (of_property_read_string(np, "nand,eccmode", &wsysinitset.nand_eccmode))
 		wsysinitset.nand_eccmode = NULL;
 
@@ -332,6 +392,7 @@ DEVICE_ATTR (    tty_rs232_485, 0444,   wsysinit_sysfs_tty_rs232_485_show, NULL)
 DEVICE_ATTR (    dp_trig_reset, 0200,               NULL, dp_sysfs_trig_reset);
 DEVICE_ATTR (    board_variant, 0444,   wsysinit_sysfs_board_variant_show, NULL);
 DEVICE_ATTR(boot_reset_state, 0444, wsysinit_sysfs_boot_reset_state_show, NULL);
+DEVICE_ATTR (      modem_reset, 0200,               NULL, modem_sysfs_reset);
 
 static void wsysinit_sysfs_init(void)
 {
@@ -345,6 +406,9 @@ static void wsysinit_sysfs_init(void)
 	device_create_file(wsysinit_sysfs_device, &dev_attr_board_variant);
 	device_create_file(wsysinit_sysfs_device, &dev_attr_boot_reset_state);
 
+	if (wsysinitset.modem)
+		device_create_file(wsysinit_sysfs_device, &dev_attr_modem_reset);
+
 	if (wsysinitset.nand_eccmode)
 		device_create_file(wsysinit_sysfs_device, &dev_attr_nand_eccmode);
 
-- 
2.7.4

