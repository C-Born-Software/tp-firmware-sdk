From 0b7c1dd46ae0a052a40d84f84042ddfc6116030a Mon Sep 17 00:00:00 2001
From: Peter Galka <peter.galka@wago.com>
Date: Thu, 22 Jun 2017 10:18:02 +0200
Subject: [PATCH] drivers: canopen: fix TOCTTOU problem

---
 drivers/net/can/ti_hecc.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/net/can/ti_hecc.c b/drivers/net/can/ti_hecc.c
index 750a0411c..3dcbf14 100644
--- a/drivers/net/can/ti_hecc.c
+++ b/drivers/net/can/ti_hecc.c
@@ -683,7 +683,6 @@ static int ti_hecc_rx_poll(struct napi_struct *napi, int quota)
 			spin_unlock_irqrestore(&priv->mbx_lock, flags);
 		} else if (priv->rx_next == HECC_MAX_TX_MBOX - 1) {
 			priv->rx_next = HECC_RX_FIRST_MBOX;
-			break;
 		}
 	}
 
@@ -843,10 +842,14 @@ static irqreturn_t ti_hecc_interrupt(int irq, void *dev_id)
 
 		/* Disable RX mailbox interrupts and let NAPI reenable them */
 		if (hecc_read(priv, HECC_CANRMP)) {
-			ack = hecc_read(priv, HECC_CANMIM);
-			ack &= BIT(HECC_MAX_TX_MBOX) - 1;
-			hecc_write(priv, HECC_CANMIM, ack);
-			napi_schedule(&priv->napi);
+			if (napi_schedule_prep(&priv->napi)) {
+				ack = hecc_read(priv, HECC_CANMIM);
+				ack &= BIT(HECC_MAX_TX_MBOX) - 1;
+				hecc_write(priv, HECC_CANMIM, ack);
+				__napi_schedule(&priv->napi);
+			} else {
+				netdev_err(ndev, "Error, poll already scheduled\n");				
+			}
 		}
 	}
 
-- 
2.7.4

