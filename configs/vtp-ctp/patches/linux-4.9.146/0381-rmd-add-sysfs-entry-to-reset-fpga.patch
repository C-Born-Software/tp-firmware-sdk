From aa114ff37b3d0ec999718c4cfae4160e184d1504 Mon Sep 17 00:00:00 2001
From: Oliver Rohe <Oliver.Rohe@wago.com>
Date: Mon, 13 Jan 2020 10:12:58 +0100
Subject: [PATCH] rmd: add sysfs entry to reset fpga

---
 drivers/char/rmd.c | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/drivers/char/rmd.c b/drivers/char/rmd.c
index 3f140fe..2e6d21c 100644
--- a/drivers/char/rmd.c
+++ b/drivers/char/rmd.c
@@ -154,6 +154,43 @@ static int rmd_set_fpga_reset(struct rmd *rmd, int val)
 	return 0;
 }
 
+static ssize_t rmd_fpga_reset(struct device *dev,
+			      struct device_attribute *attr,
+			      const char *buf, size_t count)
+{
+	struct rmd *rmd = dev_get_drvdata(dev);
+
+	if (test_bit(0, &rmd->is_open)) {
+		dev_err(rmd->dev, "FPGA can not be reseted, because RMD device is open\n");
+		return -EINVAL;
+	}
+
+	/* Put FPGA into reset */
+	if (rmd_set_fpga_reset(rmd, 1))
+		return -ENXIO;
+
+	/* Get FPGA out of reset and load the image from flash */
+	if (rmd_set_fpga_reset(rmd, 0))
+		return -ENXIO;
+
+	if (!rmd->nrst) {
+		dev_err(rmd->dev, "FPGA image could not be started\n");
+		return -ENXIO;
+	}
+
+	/* Restart FPGA image */
+	gpiod_set_value_cansleep(rmd->nrst, 0);
+	udelay(100);
+	gpiod_set_value_cansleep(rmd->nrst, 1);
+	mdelay(1);
+
+	dev_info(dev, "FPGA resetted\n");
+
+	return count;
+}
+
+static DEVICE_ATTR(reset, 0200, NULL, rmd_fpga_reset);
+
 static int rmd_disable(struct rmd *rmd, int val)
 {
 	struct pinctrl *pinctrl;
@@ -1019,6 +1056,13 @@ static int rmd_probe(struct platform_device *pdev)
 	rmd->dev->of_node = parent->of_node;
 
 	platform_set_drvdata(pdev, rmd);
+	dev_set_drvdata(rmd->dev, rmd);
+
+	ret = device_create_file(rmd->dev, &dev_attr_reset);
+	if (ret) {
+		dev_err(parent, "could not create device attribute\n");
+		return ret;
+	}
 
 	return 0;
 }
@@ -1027,6 +1071,8 @@ static int rmd_remove(struct platform_device *pdev)
 {
 	struct rmd *rmd = platform_get_drvdata(pdev);
 
+	device_remove_file(rmd->dev, &dev_attr_reset);
+
 	device_destroy(rmd_base.class, MKDEV(rmd_base.major, rmd->minor));
 	rmd_free_minor(rmd);
 
-- 
2.7.4

