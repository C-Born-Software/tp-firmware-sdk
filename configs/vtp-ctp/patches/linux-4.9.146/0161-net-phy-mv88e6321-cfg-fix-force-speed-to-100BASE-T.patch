From 2dba4084a8c7881b209472827135c0e251489a42 Mon Sep 17 00:00:00 2001
From: Andreas Schmidt <andreas.schmidt@wago.com>
Date: Tue, 20 Mar 2018 12:28:24 +0000
Subject: [PATCH] net: phy: mv88e6321-cfg: fix force speed to 100BASE-T

This patch fix two bugs:
1) Call wrong functions for read/write to switch register
2) External phy hang sometimes after restart of autonegotiation.
   Now it will try 3 time to restart autonegotiation and wait for
   a while after each restart if phy get ready.

Signed-off-by: Andreas Schmidt <andreas.schmidt@wago.com>
---
 drivers/net/phy/mv88e6321-cfg.c | 69 +++++++++++++++++++++++++++++------------
 1 file changed, 49 insertions(+), 20 deletions(-)

diff --git a/drivers/net/phy/mv88e6321-cfg.c b/drivers/net/phy/mv88e6321-cfg.c
index 2319dd8..4e64efa 100644
--- a/drivers/net/phy/mv88e6321-cfg.c
+++ b/drivers/net/phy/mv88e6321-cfg.c
@@ -127,6 +127,42 @@ static inline int mv88e6321_sw_reset(struct switch_dev *dev)
         return mv88e6321_soft_reset();
 }
 
+static int mv88e6321_sw_wait_autoneg_is_done(struct switch_dev *dev,
+					    int ext_phy_addr)
+{
+	u16 reg_val;
+	int ret;
+	int attempts = 3;
+
+	ret = global_chip->info->ops->phy_read(global_chip, ext_phy_addr, 0,
+					&reg_val);
+	if (ret < 0)
+		goto out;
+
+	while ((reg_val & BIT(9)) && attempts--) {
+		int wait = 10;
+
+		ret = global_chip->info->ops->phy_write(global_chip,
+					ext_phy_addr, 0, reg_val);
+		if (ret < 0)
+			goto out;
+
+		/* wait for a while for autonegotiation */
+		while ((reg_val & BIT(9)) && wait--) {
+			msleep(20);
+			ret = global_chip->info->ops->phy_read(global_chip,
+					ext_phy_addr, 0, &reg_val);
+			if (ret < 0)
+				goto out;
+		}
+	}
+
+	if (reg_val & BIT(9))
+		ret = -ETIME;
+
+out:
+	return ret;
+}
 
 static int mv88e6321_sw_force_speed_external_phys(struct switch_dev *dev,
 						  int ext_phy_addr)
@@ -161,45 +197,35 @@ static int mv88e6321_sw_force_speed_external_phys(struct switch_dev *dev,
 		goto out;
 
 	/* 3. Switch Register Port Status 0x00 bit 12=0 PHY Detect */
-	ret = global_chip->info->ops->phy_read(global_chip, ext_phy_addr + 0x10,
-					       0, &reg_val);
+	ret = mdiobus_read(dev->mii_bus, ext_phy_addr + 0x10, 0);
 	if (ret < 0)
 		goto out;
 
-	reg_val &= ~BIT(12);
-	ret = global_chip->info->ops->phy_write(global_chip,
-						ext_phy_addr + 0x10,
-						0, reg_val);
+	reg_val = (ret & ~BIT(12));
+	ret = mdiobus_write(dev->mii_bus, ext_phy_addr + 0x10, 0, reg_val);
 	if (ret < 0)
 		goto out;
 
 	/* 4. Switch Register Port Control 0x01 - ForceSpeed bit[1:0] = 0xb01 */
-	ret = global_chip->info->ops->phy_read(global_chip, ext_phy_addr + 0x10,
-					       0x01, &reg_val);
+	ret = mdiobus_read(dev->mii_bus, ext_phy_addr + 0x10, 1);
 	if (ret < 0)
 		goto out;
 
-	reg_val &= ~(PORT_PCS_CTRL_100<<1);
-	ret = global_chip->info->ops->phy_write(global_chip,
-						ext_phy_addr + 0x10,
-						0x01, reg_val);
+	reg_val = (ret & ~(PORT_PCS_CTRL_100 << 1));
+	ret = mdiobus_write(dev->mii_bus, ext_phy_addr + 0x10, 1, reg_val);
 	if (ret < 0)
 		goto out;
 
 	/* 5. Switch Register Port Status 0x00 bit 12=1 PHY Detect */
-	ret = global_chip->info->ops->phy_read(global_chip, ext_phy_addr + 0x10,
-					       0, &reg_val);
+	ret = mdiobus_read(dev->mii_bus, ext_phy_addr + 0x10, 0);
 	if (ret < 0)
 		goto out;
 
-	reg_val |= BIT(12);
-	ret = global_chip->info->ops->phy_write(global_chip,
-						ext_phy_addr + 0x10,
-						0, reg_val);
+	reg_val = (ret | BIT(12));
+	ret = mdiobus_write(dev->mii_bus, ext_phy_addr + 0x10, 0, reg_val);
 	if (ret < 0)
 		goto out;
 
-
 	/* 6.     PHY Register 0x00 bit[9] = 1 Restart Auto Negotiation */
 	ret = global_chip->info->ops->phy_read(global_chip, ext_phy_addr, 0,
 					&reg_val);
@@ -221,6 +247,9 @@ static int mv88e6321_sw_force_speed_external_phys(struct switch_dev *dev,
 	reg_val &= ~BIT(11);
 	ret = global_chip->info->ops->phy_write(global_chip, ext_phy_addr, 0,
 					reg_val);
+
+	/* 8. Check is Auto Negotiation is done */
+	ret = mv88e6321_sw_wait_autoneg_is_done(dev, ext_phy_addr);
 out:
 	mutex_unlock(&global_chip->reg_lock);
 
@@ -291,7 +320,7 @@ static int mv88e6321_sw_setup_dflt_cfg(struct switch_dev *dev,
                                      const struct switch_attr *attr,
                                      struct switch_val *val)
 {
-	int ret, i;
+	int ret;
 
 	ret = mv88e6321_sw_force_speed_external_phys(dev,
 						MV88E6321_EXTERNAL_PHY0);
-- 
2.7.4

