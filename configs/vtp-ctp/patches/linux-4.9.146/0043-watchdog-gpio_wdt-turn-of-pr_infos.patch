From b185e35f0ba9a999cf0816a833da2f77eda60959 Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Mon, 24 Apr 2017 11:11:13 +0200
Subject: [PATCH] watchdog: gpio_wdt: turn of pr_infos

	replace only pr_info to pr_debug
---
 drivers/watchdog/gpio_wdt.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/watchdog/gpio_wdt.c b/drivers/watchdog/gpio_wdt.c
index 555f271..e8cc908 100644
--- a/drivers/watchdog/gpio_wdt.c
+++ b/drivers/watchdog/gpio_wdt.c
@@ -44,7 +44,7 @@ static void gpio_wdt_disable(struct gpio_wdt_priv *priv)
 {
 	gpio_set_value_cansleep(priv->gpio, !priv->active_low);
 
-	pr_info("%s-%d\n", __func__, __LINE__);
+	pr_debug("%s-%d\n", __func__, __LINE__);
 	/* Put GPIO back to tristate */
 	if (priv->hw_algo == HW_ALGO_TOGGLE)
 		gpio_direction_input(priv->gpio);
@@ -52,7 +52,7 @@ static void gpio_wdt_disable(struct gpio_wdt_priv *priv)
 	/* Turn the WDT off if supported by HW */
 	if (gpio_is_valid(priv->gpio_en)) {
 		gpio_direction_output(priv->gpio_en, priv->active_low_en);
-		pr_info("%s-%d\n", __func__, __LINE__);
+		pr_debug("%s-%d\n", __func__, __LINE__);
 	}
 }
 
@@ -61,7 +61,7 @@ static void gpio_wdt_hwping(unsigned long data)
 	struct watchdog_device *wdd = (struct watchdog_device *)data;
 	struct gpio_wdt_priv *priv = watchdog_get_drvdata(wdd);
 
-	pr_info("%s-%d\n", __func__, __LINE__);
+	pr_debug("%s-%d\n", __func__, __LINE__);
 
 	if (priv->armed && time_after(jiffies, priv->last_jiffies +
 				      msecs_to_jiffies(wdd->timeout * 1000))) {
@@ -75,13 +75,13 @@ static void gpio_wdt_hwping(unsigned long data)
 
 	switch (priv->hw_algo) {
 	case HW_ALGO_TOGGLE:
-		pr_info("%s-%d\n", __func__, __LINE__);
+		pr_debug("%s-%d\n", __func__, __LINE__);
 		/* Toggle output pin */
 		priv->state = !priv->state;
 		gpio_set_value_cansleep(priv->gpio, priv->state);
 		break;
 	case HW_ALGO_LEVEL:
-		pr_info("%s-%d\n", __func__, __LINE__);
+		pr_debug("%s-%d\n", __func__, __LINE__);
 		/* Pulse */
 		gpio_set_value_cansleep(priv->gpio, !priv->active_low);
 		udelay(1);
@@ -94,7 +94,7 @@ static void gpio_wdt_start_impl(struct gpio_wdt_priv *priv)
 {
 	/* Turn the WDT on if supported by HW */
 	if (gpio_is_valid(priv->gpio_en)) {
-		pr_info("%s-%d\n", __func__, __LINE__);
+		pr_debug("%s-%d\n", __func__, __LINE__);
 		gpio_direction_output(priv->gpio_en, !priv->active_low_en);
 	}
 
@@ -103,7 +103,7 @@ static void gpio_wdt_start_impl(struct gpio_wdt_priv *priv)
 	priv->last_jiffies = jiffies;
 	gpio_wdt_hwping((unsigned long)&priv->wdd);
 
-+	pr_info("%s-%d\n", __func__, __LINE__);
+	pr_debug("%s-%d\n", __func__, __LINE__);
 }
 
 static int gpio_wdt_start(struct watchdog_device *wdd)
@@ -126,7 +126,7 @@ static int gpio_wdt_stop(struct watchdog_device *wdd)
 		gpio_wdt_disable(priv);
 	}
 
-+	pr_info("%s-%d\n", __func__, __LINE__);
+	pr_debug("%s-%d\n", __func__, __LINE__);
 	return 0;
 }
 
@@ -134,7 +134,7 @@ static int gpio_wdt_ping(struct watchdog_device *wdd)
 {
 	struct gpio_wdt_priv *priv = watchdog_get_drvdata(wdd);
 
-	pr_info("%s-%d\n", __func__, __LINE__);
+	pr_debug("%s-%d\n", __func__, __LINE__);
 	priv->last_jiffies = jiffies;
 
 	return 0;
@@ -142,7 +142,7 @@ static int gpio_wdt_ping(struct watchdog_device *wdd)
 
 static int gpio_wdt_set_timeout(struct watchdog_device *wdd, unsigned int t)
 {
-	pr_info("%s-%d\n", __func__, __LINE__);
+	pr_debug("%s-%d\n", __func__, __LINE__);
 	wdd->timeout = t;
 
 	return gpio_wdt_ping(wdd);
-- 
2.7.4

