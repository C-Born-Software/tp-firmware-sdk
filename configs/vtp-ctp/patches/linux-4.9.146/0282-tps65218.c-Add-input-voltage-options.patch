From 594dda45352635fbe3bee80ce31460bfc8c3376a Mon Sep 17 00:00:00 2001
From: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
Date: Fri, 30 Nov 2018 15:53:33 +0100
Subject: [PATCH] tps65218.c: Add input voltage options

These options apply to all regulators in this chip.

strict-supply-voltage:
  Set STRICT flag in CONFIG1
under-voltage-limit:
  Select 2.75, 2.95, 3.25 or 3.35 V UVLO in CONFIG1
under-voltage-hysteresis:
  Select 200mV or 400mV UVLOHYS in CONFIG2

Adapt all affected DTS(i).
"am335x-pfc-750_821[57].dts" already include "am335x-pfc-750_821x.dtsi"
containinng all necessary information

Signed-off-by: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
---
 arch/arm/boot/dts/am335x-pfc-750_810x.dtsi |  5 +++-
 arch/arm/boot/dts/am335x-pfc-750_8208.dtsi |  5 +++-
 arch/arm/boot/dts/am335x-pfc-750_8215.dts  | 14 ----------
 arch/arm/boot/dts/am335x-pfc-750_8217.dts  | 14 ----------
 arch/arm/boot/dts/am335x-pfc-750_821x.dtsi |  5 +++-
 drivers/mfd/tps65218.c                     | 45 ++++++++++++++++++++++++++++++
 6 files changed, 57 insertions(+), 31 deletions(-)

diff --git a/arch/arm/boot/dts/am335x-pfc-750_810x.dtsi b/arch/arm/boot/dts/am335x-pfc-750_810x.dtsi
index aa1c2a5..c774e76 100644
--- a/arch/arm/boot/dts/am335x-pfc-750_810x.dtsi
+++ b/arch/arm/boot/dts/am335x-pfc-750_810x.dtsi
@@ -646,6 +646,9 @@
         interrupt-parent = <&intc>;
         compatible = "ti,tps65218";
         interrupt-controller;
+        strict-supply-voltage = <1>;
+        under-voltage-hysteresis = <400000>;
+        under-voltage-limit = <3350000>;
         #interrupt-cells = <2>;
 
         dcdc1_reg: regulator-dcdc1 {
@@ -721,7 +724,7 @@
 		/* VDD_LS2 +5V15 for USB */
 		regulator-name = "vdd_LS2_USB";
 		/* Should be set to 100 mA according to SLP00000843.002
-		 * but 4G Modem is not being inumurated correctly,
+		 * but 4G Modem is not being enumerated correctly,
 		 * so we increase it.
 		 */
 		regulator-min-microamp = <200000>;
diff --git a/arch/arm/boot/dts/am335x-pfc-750_8208.dtsi b/arch/arm/boot/dts/am335x-pfc-750_8208.dtsi
index e608eb7..aee1ab2 100644
--- a/arch/arm/boot/dts/am335x-pfc-750_8208.dtsi
+++ b/arch/arm/boot/dts/am335x-pfc-750_8208.dtsi
@@ -747,6 +747,9 @@
         interrupt-parent = <&intc>;
         compatible = "ti,tps65218";
         interrupt-controller;
+        strict-supply-voltage = <1>;
+        under-voltage-hysteresis = <400000>;
+        under-voltage-limit = <3350000>;
         #interrupt-cells = <2>;
 
         dcdc1_reg: regulator-dcdc1 {
@@ -794,7 +797,7 @@
 		/* VDD_LS2 +5V15 for USB */
 		regulator-name = "vdd_LS2_USB";
 		/* Should be set to 100 mA according to SLP00000843.002
-		 * but 4G Modem is not being inumurated correctly,
+		 * but 4G Modem is not being enumerated correctly,
 		 * so we increase it.
 		 */
 		regulator-min-microamp = <200000>;
diff --git a/arch/arm/boot/dts/am335x-pfc-750_8215.dts b/arch/arm/boot/dts/am335x-pfc-750_8215.dts
index 10bfdf2..1351593 100644
--- a/arch/arm/boot/dts/am335x-pfc-750_8215.dts
+++ b/arch/arm/boot/dts/am335x-pfc-750_8215.dts
@@ -58,20 +58,6 @@
 	};
 };
 
-&i2c0 {
-	tps65218@24 {   /* Power Management IC  */
-		loadswitch2:  loadswitch-ls2 {
-			compatible = "ti,tps65218-ls2";
-			/* VDD_LS2 +5V15 for USB */
-			regulator-name = "vdd_LS2_USB";
-			regulator-min-microamp = <200000>; /* Because of current power supply it is not possible */
-			regulator-max-microamp = <200000>; /* to serve more then 200mA for USB interface. */
-			regulator-boot-on;
-			regulator-always-on;
-		};
-	};
-};
-
 &usb {
 	status = "okay";
 };
diff --git a/arch/arm/boot/dts/am335x-pfc-750_8217.dts b/arch/arm/boot/dts/am335x-pfc-750_8217.dts
index 8517c85..84103c9 100644
--- a/arch/arm/boot/dts/am335x-pfc-750_8217.dts
+++ b/arch/arm/boot/dts/am335x-pfc-750_8217.dts
@@ -16,20 +16,6 @@
 	compatible = "wago,am335x-pfc-750_821x-001c", "wago,am335x-pfc", "ti,am33xx";
 };
 
-&i2c0 {
-        tps65218@24 {   /* Power Managment IC  */
-                loadswitch2:  loadswitch-ls2 {
-                        compatible = "ti,tps65218-ls2";
-                        /* VDD_LS2 +5V15 for USB */
-                        regulator-name = "vdd_LS2_USB";
-                        regulator-min-microamp = <200000>; /* Should be set to 100 mA according to SLP00000843.002 */
-                        regulator-max-microamp = <200000>; /* but 4G Modem is not being inumurated correctly, so we increase it */
-                        regulator-boot-on;
-                        regulator-always-on;
-                };
-        };
-};
-
 &usb {
         status = "okay";
 };
diff --git a/arch/arm/boot/dts/am335x-pfc-750_821x.dtsi b/arch/arm/boot/dts/am335x-pfc-750_821x.dtsi
index bb0af94..8f599db 100644
--- a/arch/arm/boot/dts/am335x-pfc-750_821x.dtsi
+++ b/arch/arm/boot/dts/am335x-pfc-750_821x.dtsi
@@ -727,6 +727,9 @@
 		interrupt-parent = <&gpio3>;
 		interrupts = <20 IRQ_TYPE_LEVEL_LOW>;
 		interrupt-controller;
+		strict-supply-voltage = <1>;
+		under-voltage-hysteresis = <400000>;
+		under-voltage-limit = <3350000>;
 		#interrupt-cells = <2>;
 
 		dcdc1_reg: regulator-dcdc1 {
@@ -774,7 +777,7 @@
 			/* VDD_LS2 +5V15 for USB */
 			regulator-name = "vdd_LS2_USB";
 			/* Should be set to 100 mA according to SLP00000843.002
-			 * but 4G Modem is not being inumurated correctly,
+			 * but 4G Modem is not being enumerated correctly,
 			 * so we increase it.
 			 */
 			regulator-min-microamp = <200000>;
diff --git a/drivers/mfd/tps65218.c b/drivers/mfd/tps65218.c
index ba610ad..1f98a8c 100644
--- a/drivers/mfd/tps65218.c
+++ b/drivers/mfd/tps65218.c
@@ -213,6 +213,50 @@ static const struct of_device_id of_tps65218_match_table[] = {
 };
 MODULE_DEVICE_TABLE(of, of_tps65218_match_table);
 
+static void tps65218_options(struct tps65218 *tps)
+{
+	struct device *dev = tps->dev;
+	struct device_node *np = dev->of_node;
+	u32 pval;
+
+	if (!of_property_read_u32(np, "strict-supply-voltage", &pval)) {
+		tps65218_update_bits(tps, TPS65218_REG_CONFIG1,
+			TPS65218_CONFIG1_STRICT,
+			pval ? TPS65218_CONFIG1_STRICT : 0,
+			TPS65218_PROTECT_L1);
+		dev_dbg(dev, "tps65218 strict-supply-voltage: %d\n", pval);
+	}
+	if (!of_property_read_u32(np, "under-voltage-hysteresis", &pval)) {
+		if (pval != 400000 && pval != 200000) {
+			dev_err(dev,
+				 "under-voltage-hysteresis must be %d or %d\n",
+				 200000, 400000);
+		} else {
+			tps65218_update_bits(tps, TPS65218_REG_CONFIG2,
+				TPS65218_CONFIG2_UVLOHYS,
+				pval == 400000 ? TPS65218_CONFIG2_UVLOHYS : 0,
+				TPS65218_PROTECT_L1);
+		}
+		dev_dbg(dev, "tps65218 under-voltage-hysteresis: %d\n", pval);
+	}
+	if (!of_property_read_u32(np, "under-voltage-limit", &pval)) {
+		int i, vals[] = { 275, 295, 325, 335 };
+
+		for (i = 0; i < ARRAY_SIZE(vals); i++) {
+			if (pval == vals[i] * 10000)
+				break;
+		}
+		if (i < ARRAY_SIZE(vals)) {
+			tps65218_update_bits(tps, TPS65218_REG_CONFIG1,
+				TPS65218_CONFIG1_UVLO_MASK, i,
+				TPS65218_PROTECT_L1);
+		} else {
+			dev_err(dev, "Invalid under-voltage-limit: %d\n", pval);
+		}
+		dev_dbg(dev, "tps65218 under-voltage-limit: %d=%d\n", pval, i);
+	}
+}
+
 static int tps65218_probe(struct i2c_client *client,
 				const struct i2c_device_id *ids)
 {
@@ -264,6 +308,7 @@ static int tps65218_probe(struct i2c_client *client,
 	if (ret < 0)
 		goto err_irq;
 
+	tps65218_options(tps);
 	return 0;
 
 err_irq:
-- 
2.7.4

