From e72e8e35d1d9f6761cf931f727ccc90298ffaf4a Mon Sep 17 00:00:00 2001
From: Andreas Schmidt <andreas.schmidt@wago.com>
Date: Fri, 21 Sep 2018 08:55:23 +0200
Subject: [PATCH] net: dsa: mv88e6xxx: enable PHY interrupt in g2

Signed-off-by: Andreas Schmidt <andreas.schmidt@wago.com>
---
 drivers/net/dsa/mv88e6xxx/global2.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/drivers/net/dsa/mv88e6xxx/global2.c b/drivers/net/dsa/mv88e6xxx/global2.c
index b40d98e..4844777 100644
--- a/drivers/net/dsa/mv88e6xxx/global2.c
+++ b/drivers/net/dsa/mv88e6xxx/global2.c
@@ -555,6 +555,7 @@ void mv88e6xxx_g2_irq_mdio_free(struct mv88e6xxx_chip *chip,
 int mv88e6xxx_g2_irq_setup(struct mv88e6xxx_chip *chip)
 {
 	int err, irq, virq;
+	u16 mask;
 
 	chip->g2_irq.domain = irq_domain_add_simple(chip->dev->of_node, 16, 0,
 						    &mv88e6xxx_g2_irq_domain_ops,
@@ -568,6 +569,18 @@ int mv88e6xxx_g2_irq_setup(struct mv88e6xxx_chip *chip)
 	chip->g2_irq.chip = mv88e6xxx_g2_irq_chip;
 	chip->g2_irq.masked = ~0;
 
+	mutex_lock(&chip->reg_lock);
+	err = mv88e6xxx_g2_read(chip, GLOBAL2_INT_MASK, &mask);
+	if (err)
+		goto out_unlock;
+
+	mask |= GENMASK(4, 3);
+	err = mv88e6xxx_g2_write(chip, GLOBAL2_INT_MASK, mask);
+	if (err)
+		goto out_unlock;
+
+	mutex_unlock(&chip->reg_lock);
+
 	chip->device_irq = irq_find_mapping(chip->g1_irq.domain,
 					    GLOBAL_STATUS_IRQ_DEVICE);
 	if (chip->device_irq < 0) {
@@ -582,6 +595,9 @@ int mv88e6xxx_g2_irq_setup(struct mv88e6xxx_chip *chip)
 		goto out;
 
 	return 0;
+
+out_unlock:
+	mutex_unlock(&chip->reg_lock);
 out:
 	for (irq = 0; irq < 16; irq++) {
 		virq = irq_find_mapping(chip->g2_irq.domain, irq);
-- 
2.7.4

