From ffb4694c31960b307e4397e38cd26474f435c4b4 Mon Sep 17 00:00:00 2001
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Wed, 20 Jan 2016 13:37:39 +0100
Subject: [PATCH] net: dsa: provide lockdep class for dsa

	port from v3.18.13
	commit: 2566a52

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>

 Conflicts:
	drivers/net/phy/mdio_bus.c
	include/linux/phy.h
	net/dsa/dsa.c
---
 drivers/net/phy/mdio_bus.c | 4 +++-
 include/linux/phy.h        | 4 ++--
 net/dsa/dsa.c              | 4 +++-
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/net/phy/mdio_bus.c b/drivers/net/phy/mdio_bus.c
index 09deef4..6e6df61 100644
--- a/drivers/net/phy/mdio_bus.c
+++ b/drivers/net/phy/mdio_bus.c
@@ -298,7 +298,7 @@ static inline void of_mdiobus_link_mdiodev(struct mii_bus *mdio,
  *
  * Returns 0 on success or < 0 on error.
  */
-int __mdiobus_register(struct mii_bus *bus, struct module *owner)
+int __mdiobus_register(struct mii_bus *bus, struct module *owner, struct lock_class_key *key)
 {
 	struct mdio_device *mdiodev;
 	int i, err;
@@ -324,6 +324,8 @@ int __mdiobus_register(struct mii_bus *bus, struct module *owner)
 	}
 
 	mutex_init(&bus->mdio_lock);
+	if (key)
+		lockdep_set_class(&bus->mdio_lock, key);
 
 	if (bus->reset)
 		bus->reset(bus);
diff --git a/include/linux/phy.h b/include/linux/phy.h
index cfac36d..9adb249 100644
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@ -203,8 +203,8 @@ static inline struct mii_bus *mdiobus_alloc(void)
 	return mdiobus_alloc_size(0);
 }
 
-int __mdiobus_register(struct mii_bus *bus, struct module *owner);
-#define mdiobus_register(bus) __mdiobus_register(bus, THIS_MODULE)
+int __mdiobus_register(struct mii_bus *bus, struct module *owner, struct lock_class_key *key);
+#define mdiobus_register(bus) __mdiobus_register(bus, THIS_MODULE, NULL)
 void mdiobus_unregister(struct mii_bus *bus);
 void mdiobus_free(struct mii_bus *bus);
 struct mii_bus *devm_mdiobus_alloc_size(struct device *dev, int sizeof_priv);
diff --git a/net/dsa/dsa.c b/net/dsa/dsa.c
index 7899919..74bf1d1 100644
--- a/net/dsa/dsa.c
+++ b/net/dsa/dsa.c
@@ -306,6 +306,8 @@ void dsa_cpu_port_ethtool_restore(struct dsa_switch *ds)
 	master->ethtool_ops = ds->dst->master_orig_ethtool_ops;
 }
 
+static struct lock_class_key ds_slave_mii_bus_mdio_lock;
+
 static int dsa_switch_setup_one(struct dsa_switch *ds, struct device *parent)
 {
 	struct dsa_switch_ops *ops = ds->ops;
@@ -394,7 +396,7 @@ static int dsa_switch_setup_one(struct dsa_switch *ds, struct device *parent)
 		}
 		dsa_slave_mii_bus_init(ds);
 
-		ret = mdiobus_register(ds->slave_mii_bus);
+		ret = __mdiobus_register(ds->slave_mii_bus, THIS_MODULE, &ds_slave_mii_bus_mdio_lock);
 		if (ret < 0)
 			goto out;
 	}
-- 
2.7.4

