From c4c21856cad3a98a9d2e389772909224d467f148 Mon Sep 17 00:00:00 2001
From: Andreas Schmidt <andreas.schmidt@wago.com>
Date: Wed, 3 Jul 2019 10:49:24 +0200
Subject: [PATCH] driver: net: dsa: ksz8863: move header file to include

The struct ksz8863_chip is needed by swconfig driver.

Signed-off-by: Andreas Schmidt <andreas.schmidt@wago.com>
---
 drivers/net/dsa/ksz886x/ksz8863.c |   3 +-
 drivers/net/dsa/ksz886x/ksz8863.h | 221 -----------------------
 include/linux/ksz8863.h           | 369 +++++++++++++++++++++-----------------
 3 files changed, 205 insertions(+), 388 deletions(-)
 delete mode 100644 drivers/net/dsa/ksz886x/ksz8863.h

diff --git a/drivers/net/dsa/ksz886x/ksz8863.c b/drivers/net/dsa/ksz886x/ksz8863.c
index 4741465..922d79e 100644
--- a/drivers/net/dsa/ksz886x/ksz8863.c
+++ b/drivers/net/dsa/ksz886x/ksz8863.c
@@ -27,8 +27,7 @@
 #include <linux/gpio/consumer.h>
 #include <net/dsa.h>
 #include <linux/delay.h>
-
-#include "ksz8863.h"
+#include <linux/ksz8863.h>
 
 static inline int port_to_index(int port)
 {
diff --git a/drivers/net/dsa/ksz886x/ksz8863.h b/drivers/net/dsa/ksz886x/ksz8863.h
deleted file mode 100644
index 5147f4d..0000000
--- a/drivers/net/dsa/ksz886x/ksz8863.h
+++ /dev/null
@@ -1,221 +0,0 @@
-/*
- * Micrel ksz8863 common definitions
- *
- * Copyright (c) 2019 WAGO Kontakttechnik GmbH & Co. KG
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- */
-
-#ifndef __KSZ8863_H__
-#define __KSZ8863_H__
-
-#include <linux/device.h>
-
-#define KSZ8863_NUM_PORTS 3
-
-#define KSZ8863_EXT_PORT1_ID 1
-#define KSZ8863_EXT_PORT2_ID 2
-
-#define KSZ8863_REG_CHIP_ID0			0x00
-#define KSZ8863_REG_CHIP_ID0_FAMILY_ID			0x88
-
-#define KSZ8863_REG_CHIP_ID1			0x01
-
-#define KSZ8863_REG_CHIP_ID1_ID_MASK			0xF0
-#define KSZ8863_REG_CHIP_ID1_ID_SHIFT			4
-#define KSZ8863_REG_CHIP_ID1_ID				0x03
-#define KSZ8863_REG_CHIP_ID1_REV_ID_MASK		0x0E
-#define KSZ8863_REG_CHIP_ID1_REV_ID_SHIFT		1
-#define KSZ8863_REG_CHIP_ID1_START			0x01
-
-#define KSZ8863_REG_GL_CTRL0			0x02
-
-#define KSZ8863_REG_GL_CTRL0_NEW_BACKOFF		BIT(7)
-#define KSZ8863_REG_GL_CTRL0_FLUSH_DYN_MAC_TABLE	BIT(5)
-#define KSZ8863_REG_GL_CTRL0_FLUSH_STA_MAC_TABLE	BIT(4)
-#define KSZ8863_REG_GL_CTRL0_PASS_PAUSE			BIT(3)
-
-#define KSZ8863_REG_GL_CTRL1			0x03
-
-#define KSZ8863_REG_GL_CTRL1_PASS_ALL			BIT(7)
-#define KSZ8863_REG_GL_CTRL1_TAIL_TAG_ENABLE		BIT(6)
-#define KSZ8863_REG_GL_CTRL1_TX_FLOW_CTRL		BIT(5)
-#define KSZ8863_REG_GL_CTRL1_RX_FLOW_CTRL		BIT(4)
-#define KSZ8863_REG_GL_CTRL1_CHECK_LENGTH		BIT(3)
-#define KSZ8863_REG_GL_CTRL1_AGING_ENABLE		BIT(2)
-#define KSZ8863_REG_GL_CTRL1_FAST_AGING			BIT(1)
-#define KSZ8863_REG_GL_CTRL1_AGGR_BACKOFF		BIT(0)
-
-#define KSZ8863_REG_GL_CTRL2			0x04
-
-#define KSZ8863_REG_GL_CTRL2_UNICAST_VLAN_BOUNDARY	BIT(7)
-#define KSZ8863_REG_GL_CTRL2_MULTICAST_STORM_DISABLE	BIT(6)
-#define KSZ8863_REG_GL_CTRL2_BACK_PRESSURE		BIT(5)
-#define KSZ8863_REG_GL_CTRL2_FAIR_FLOW_CTRL		BIT(4)
-#define KSZ8863_REG_GL_CTRL2_NO_EXC_COLLISION_DROP	BIT(3)
-#define KSZ8863_REG_GL_CTRL2_HUGE_PACKET		BIT(2)
-#define KSZ8863_REG_GL_CTRL2_LEGAL_PACKET		BIT(1)
-
-#define KSZ8863_REG_GL_CTRL3			0x05
-
-#define KSZ8863_REG_GL_CTRL3_VLAN_ENABLE		BIT(7)
-#define KSZ8863_REG_GL_CTRL3_IGMP_SNOOP			BIT(6)
-#define KSZ8863_REG_GL_CTRL3_WEIGHTED_FAIR_QUEUE_ENABLE	BIT(3)
-#define KSZ8863_REG_GL_CTRL3_MIRROR_RX_TX		BIT(0)
-
-#define KSZ8863_REG_GL_CTRL4			0x06
-
-#define KSZ8863_REG_GL_CTRL4_HALF_DUPLEX		BIT(6)
-#define KSZ8863_REG_GL_CTRL4_FLOW_CTRL			BIT(5)
-#define KSZ8863_REG_GL_CTRL4_10_MBIT			BIT(4)
-#define KSZ8863_REG_GL_CTRL4_REPLACE_VID		BIT(3)
-#define KSZ8863_REG_GL_CTRL4_BCAST_STORM_RATE_HI_MASK	0x07
-
-#define KSZ8863_REG_GL_CTRL5			0x07
-
-#define KSZ8863_REG_GL_CTRL5_BCAST_STORM_RATE_LO_MASK	0xFF
-
-#define KSZ8863_REG_GL_CTRL9			0x0B
-
-#define KSZ8863_REG_GL_CTRL9_SPI_CLK_125_MHZ		0x80
-#define KSZ8863_REG_GL_CTRL9_SPI_CLK_62_5_MHZ		0x40
-#define KSZ8863_REG_GL_CTRL9_SPI_CLK_31_25_MHZ		0x00
-
-#define KSZ8863_REG_GL_CTRL10			0x0C
-#define KSZ8863_REG_GL_CTRL11			0x0D
-
-#define KSZ8863_REG_GL_CTRL12			0x0E
-
-#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_ENABLE		BIT(7)
-#define KSZ8863_REG_GL_CTRL12_DRIVER_16MA		BIT(6)
-#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_2_PORT3	BIT(2)
-#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_2_PORT2	BIT(1)
-#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_2_PORT1	BIT(0)
-#define KSZ8863_REG_GL_CTRL12_PORT_MASK			0x7
-
-#define KSZ8863_REG_GL_CTRL13			0x0F
-
-#define KSZ8863_REG_GL_CTRL13_PORT_PHY_ADDR_MASK	0xF8
-#define KSZ8863_REG_GL_CTRL13_PORT_PHY_ADDR_SHIFT	3
-
-#define KSZ8863_REG_PORTS_BASE			0x10
-
-#define KSZ8863_REG_PORT1_CTRL0			0x10
-#define KSZ8863_REG_PORT2_CTRL0			0x20
-#define KSZ8863_REG_PORT3_CTRL0			0x30
-
-#define KSZ8863_REG_PORT_CTRL0_BROADCAST_STORM		BIT(7)
-#define KSZ8863_REG_PORT_CTRL0_DIFFSERV_ENABLE		BIT(6)
-#define KSZ8863_REG_PORT_CTRL0_802_1P_ENABLE		BIT(5)
-#define KSZ8863_REG_PORT_CTRL0_PRIO_MASK		0x18
-#define KSZ8863_REG_PORT_CTRL0_PRIO_SHIFT		3
-#define KSZ8863_REG_PORT_CTRL0_PRIO_0			(0 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
-#define KSZ8863_REG_PORT_CTRL0_PRIO_1			(1 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
-#define KSZ8863_REG_PORT_CTRL0_PRIO_2			(2 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
-#define KSZ8863_REG_PORT_CTRL0_PRIO_3			(3 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
-#define KSZ8863_REG_PORT_CTRL0_INSERT_TAG		BIT(2)
-#define KSZ8863_REG_PORT_CTRL0_REMOVE_TAG		BIT(1)
-#define KSZ8863_REG_PORT_CTRL0_4_PRIOS_ENABLE		BIT(0)
-
-#define KSZ8863_REG_PORT1_CTRL2			0x12
-#define KSZ8863_REG_PORT2_CTRL2			0x22
-#define KSZ8863_REG_PORT3_CTRL2			0x32
-
-#define KSZ8863_REG_PORT_CTRL2_2_PRIORITIES_ENABLE	BIT(7)
-#define KSZ8863_REG_PORT_CTRL2_INGRESS_FILTER		BIT(6)
-#define KSZ8863_REG_PORT_CTRL2_DISCARD_NON_VID		BIT(5)
-#define KSZ8863_REG_PORT_CTRL2_FORCE_FLOW_CTRL		BIT(4)
-#define KSZ8863_REG_PORT_CTRL2_BACK_PRESSURE		BIT(3)
-#define KSZ8863_REG_PORT_CTRL2_TX_ENABLE		BIT(2)
-#define KSZ8863_REG_PORT_CTRL2_RX_ENABLE		BIT(1)
-#define KSZ8863_REG_PORT_CTRL2_LEARN_DISABLE		BIT(0)
-
-#define KSZ8863_REG_PORT1_CTRL5			0x15
-#define KSZ8863_REG_PORT2_CTRL5			0x25
-#define KSZ8863_REG_PORT3_CTRL5			0x35
-
-#define KSZ8863_REG_PORT_CTRL5_3_MII_MAC_MODE		BIT(7)
-#define KSZ8863_REG_PORT_CTRL5_SA_MAC2			BIT(6)
-#define KSZ8863_REG_PORT_CTRL5_SA_MAC1			BIT(5)
-#define KSZ8863_REG_PORT_CTRL5_DROP_TAG			BIT(4)
-#define KSZ8863_REG_PORT_CTRL5_INGRESS_LIMIT_MODE_MAS	0x0C
-#define KSZ8863_REG_PORT_CTRL5_INGRESS_ALL		0x00
-#define KSZ8863_REG_PORT_CTRL5_INGRESS_UNICAST		0x04
-#define KSZ8863_REG_PORT_CTRL5_INGRESS_MULTICAST	0x08
-#define KSZ8863_REG_PORT_CTRL5_INGRESS_BROADCAST	0x0C
-#define KSZ8863_REG_PORT_CTRL5_COUNT_IFG		BIT(1)
-#define KSZ8863_REG_PORT_CTRL5_COUNT_PREAMBLE		BIT(0)
-
-#define KSZ8863_REG_PORT1_CTRL13		0x1D
-#define KSZ8863_REG_PORT2_CTRL13		0x2D
-
-#define KSZ8863_REG_PORT_CTRL13_LED_OFF			BIT(7)
-#define KSZ8863_REG_PORT_CTRL13_TX_DISABLE		BIT(6)
-#define KSZ8863_REG_PORT_CTRL13_AUTO_NEG_RESTART	BIT(5)
-#define KSZ8863_REG_PORT_CTRL13_REMOTE_FAULT_DISABLE	BIT(4)
-#define KSZ8863_REG_PORT_CTRL13_POWER_DOWN		BIT(3)
-#define KSZ8863_REG_PORT_CTRL13_AUTO_MDIX_DISABLE	BIT(2)
-#define KSZ8863_REG_PORT_CTRL13_FORCE_MDIX		BIT(1)
-#define KSZ8863_REG_PORT_CTRL13_LOOPBACK		BIT(0)
-
-#define KSZ8863_REG_INTERNAL_1V8_LDO_CTRL	0xC1
-#define KSZ8863_REG_INTERNAL_1V8_LDO_CTRL_DISABLE	BIT(6)
-
-#define KSZ8863_REG_PWR_LED			0xC3
-#define KSZ8863_REG_PWR_LED_CPU_IF_PD			BIT(7)
-#define KSZ8863_REG_PWR_LED_SW_PD			BIT(6)
-#define KSZ8863_REG_PWR_LED_LED_MODE_SEL_MASK		0x30
-#define KSZ8863_REG_PWR_LED_LED_MODE_SEL_SHIFT		4
-#define KSZ8863_REG_PWR_LED_LED_MODE_0			0
-#define KSZ8863_REG_PWR_LED_LED_MODE_1			1
-#define KSZ8863_REG_PWR_LED_LED_MODE_2			2
-#define KSZ8863_REG_PWR_LED_LED_MODE_3			3
-#define KSZ8863_REG_PWR_LED_LED_OUT			BIT(3)
-#define KSZ8863_REG_PWR_LED_PLL_PD			BIT(2)
-#define KSZ8863_REG_PWR_LED_PWR_MODE_MASK		0x03
-#define KSZ8863_REG_PWR_LED_PWR_MODE_SEL_SHIFT		0
-
-struct ksz8863_port {
-	struct net_device *bridge;
-};
-
-struct ksz8863_chip {
-	/* The dsa_switch this structure is related to */
-	struct dsa_switch *ds;
-
-	/* The device this structure is associated to */
-	struct device *dev;
-
-	/* The MII bus and the address on the bus that is used to
-	 * communication with the switch
-	 */
-	struct mii_bus *sw_bus;
-	u8 sw_addr;
-	const struct ksz8863_bus_ops *mii_ops;
-
-	/* A switch may have a GPIO line tied to its reset pin. Parse
-	 * this from the device tree, and use it before performing
-	 * switch soft reset.
-	 */
-	struct gpio_desc *reset_gpio;
-	bool reset;
-
-	/* If true driver will disable internal 1.8V LDO */
-	bool disable_internal_ldo;
-
-	/* Port information */
-	struct ksz8863_port ports[KSZ8863_NUM_PORTS];
-
-	/* switched / separated mode */
-	bool switched;
-};
-
-struct ksz8863_bus_ops {
-	int (*read)(struct ksz8863_chip *chip, int reg, u8 *val);
-	int (*write)(struct ksz8863_chip *chip, int reg, u8 val);
-};
-
-#endif /* __KSZ8863_H__ */
diff --git a/include/linux/ksz8863.h b/include/linux/ksz8863.h
index dbc5c87..5fbe7db 100644
--- a/include/linux/ksz8863.h
+++ b/include/linux/ksz8863.h
@@ -1,185 +1,224 @@
 /*
- * Copyright (c) 2010 SAGEM Communications.
+ * Micrel ksz8863 common definitions
  *
- * Author: Karl Beldan <karl.beldan@sagemcom.com>
+ * Copyright (c) 2019 WAGO Kontakttechnik GmbH & Co. KG
  *
  * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
  */
-#ifndef KSZ8863_H
-#define KSZ8863_H
 
-#include <linux/mii.h>
+#ifndef __KSZ8863_H__
+#define __KSZ8863_H__
+
+#include <linux/device.h>
+#include <net/dsa.h>
 #include <linux/phy.h>
+#include <linux/gpio/consumer.h>
+
+#define KSZ8863_NUM_PORTS 3
 
-#define KSZ8863_FAMILY_ID               0x88
-#define KSZ8863_CHIP_ID                 0x03
-#define KSZ8863_PHYID1                  0x0022
-#define KSZ8863_PHYID2                  0x1430
-#define KSZ8863_PORTS_REGS_OFFSET       16
+#define KSZ8863_EXT_PORT1_ID 1
+#define KSZ8863_EXT_PORT2_ID 2
 
-#define KSZ8863_PHY1_DFLT_ADDR          1
-#define KSZ8863_PHY2_DFLT_ADDR          2
+#define KSZ8863_REG_CHIP_ID0			0x00
+#define KSZ8863_REG_CHIP_ID0_FAMILY_ID			0x88
 
-#define KSZ8863_MDIO_MIN                MII_BMCR
-#define KSZ8863_MDIO_MAX                MII_LPA
+#define KSZ8863_REG_CHIP_ID1			0x01
 
-#define RESET_SOFTWARE_SHIFT            4
-#define RESET_PCS_SHIFT                 0
+#define KSZ8863_REG_CHIP_ID1_ID_MASK			0xF0
+#define KSZ8863_REG_CHIP_ID1_ID_SHIFT			4
+#define KSZ8863_REG_CHIP_ID1_ID				0x03
+#define KSZ8863_REG_CHIP_ID1_REV_ID_MASK		0x0E
+#define KSZ8863_REG_CHIP_ID1_REV_ID_SHIFT		1
+#define KSZ8863_REG_CHIP_ID1_START			0x01
 
-#ifdef __KERNEL__
-#define ksz8863_nread                   ksz8863_fns->nread
-#define ksz8863_nwrite                  ksz8863_fns->nwrite
+#define KSZ8863_REG_GL_CTRL0			0x02
 
-#define KSZ8863_CFG_TAIL_TAG_FLAG       (1 << 0)
-#define KSZ8863_CFG_PWRDOWN_FLAG        (1 << 1)
-#define KSZ8863_CFG_DSA_FLAGS           KSZ8863_CFG_TAIL_TAG_FLAG
+#define KSZ8863_REG_GL_CTRL0_NEW_BACKOFF		BIT(7)
+#define KSZ8863_REG_GL_CTRL0_FLUSH_DYN_MAC_TABLE	BIT(5)
+#define KSZ8863_REG_GL_CTRL0_FLUSH_STA_MAC_TABLE	BIT(4)
+#define KSZ8863_REG_GL_CTRL0_PASS_PAUSE			BIT(3)
 
-struct ksz8863_fns_t {
-        int (*nread)(u8 reg, u8 *rxbuf, int len);
-        int (*nwrite)(u8 reg, u8 *txbuf, int len);
-        int (*setup_dflt_cfg)(int flags);
-        int (*set_host_mac)(void);
+#define KSZ8863_REG_GL_CTRL1			0x03
+
+#define KSZ8863_REG_GL_CTRL1_PASS_ALL			BIT(7)
+#define KSZ8863_REG_GL_CTRL1_TAIL_TAG_ENABLE		BIT(6)
+#define KSZ8863_REG_GL_CTRL1_TX_FLOW_CTRL		BIT(5)
+#define KSZ8863_REG_GL_CTRL1_RX_FLOW_CTRL		BIT(4)
+#define KSZ8863_REG_GL_CTRL1_CHECK_LENGTH		BIT(3)
+#define KSZ8863_REG_GL_CTRL1_AGING_ENABLE		BIT(2)
+#define KSZ8863_REG_GL_CTRL1_FAST_AGING			BIT(1)
+#define KSZ8863_REG_GL_CTRL1_AGGR_BACKOFF		BIT(0)
+
+#define KSZ8863_REG_GL_CTRL2			0x04
+
+#define KSZ8863_REG_GL_CTRL2_UNICAST_VLAN_BOUNDARY	BIT(7)
+#define KSZ8863_REG_GL_CTRL2_MULTICAST_STORM_DISABLE	BIT(6)
+#define KSZ8863_REG_GL_CTRL2_BACK_PRESSURE		BIT(5)
+#define KSZ8863_REG_GL_CTRL2_FAIR_FLOW_CTRL		BIT(4)
+#define KSZ8863_REG_GL_CTRL2_NO_EXC_COLLISION_DROP	BIT(3)
+#define KSZ8863_REG_GL_CTRL2_HUGE_PACKET		BIT(2)
+#define KSZ8863_REG_GL_CTRL2_LEGAL_PACKET		BIT(1)
+
+#define KSZ8863_REG_GL_CTRL3			0x05
+
+#define KSZ8863_REG_GL_CTRL3_VLAN_ENABLE		BIT(7)
+#define KSZ8863_REG_GL_CTRL3_IGMP_SNOOP			BIT(6)
+#define KSZ8863_REG_GL_CTRL3_WEIGHTED_FAIR_QUEUE_ENABLE	BIT(3)
+#define KSZ8863_REG_GL_CTRL3_MIRROR_RX_TX		BIT(0)
+
+#define KSZ8863_REG_GL_CTRL4			0x06
+
+#define KSZ8863_REG_GL_CTRL4_HALF_DUPLEX		BIT(6)
+#define KSZ8863_REG_GL_CTRL4_FLOW_CTRL			BIT(5)
+#define KSZ8863_REG_GL_CTRL4_10_MBIT			BIT(4)
+#define KSZ8863_REG_GL_CTRL4_REPLACE_VID		BIT(3)
+#define KSZ8863_REG_GL_CTRL4_BCAST_STORM_RATE_HI_MASK	0x07
+
+#define KSZ8863_REG_GL_CTRL5			0x07
+
+#define KSZ8863_REG_GL_CTRL5_BCAST_STORM_RATE_LO_MASK	0xFF
+
+#define KSZ8863_REG_GL_CTRL9			0x0B
+
+#define KSZ8863_REG_GL_CTRL9_SPI_CLK_125_MHZ		0x80
+#define KSZ8863_REG_GL_CTRL9_SPI_CLK_62_5_MHZ		0x40
+#define KSZ8863_REG_GL_CTRL9_SPI_CLK_31_25_MHZ		0x00
+
+#define KSZ8863_REG_GL_CTRL10			0x0C
+#define KSZ8863_REG_GL_CTRL11			0x0D
+
+#define KSZ8863_REG_GL_CTRL12			0x0E
+
+#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_ENABLE		BIT(7)
+#define KSZ8863_REG_GL_CTRL12_DRIVER_16MA		BIT(6)
+#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_2_PORT3	BIT(2)
+#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_2_PORT2	BIT(1)
+#define KSZ8863_REG_GL_CTRL12_UNKNOWN_DA_2_PORT1	BIT(0)
+#define KSZ8863_REG_GL_CTRL12_PORT_MASK			0x7
+
+#define KSZ8863_REG_GL_CTRL13			0x0F
+
+#define KSZ8863_REG_GL_CTRL13_PORT_PHY_ADDR_MASK	0xF8
+#define KSZ8863_REG_GL_CTRL13_PORT_PHY_ADDR_SHIFT	3
+
+#define KSZ8863_REG_PORTS_BASE			0x10
+
+#define KSZ8863_REG_PORT1_CTRL0			0x10
+#define KSZ8863_REG_PORT2_CTRL0			0x20
+#define KSZ8863_REG_PORT3_CTRL0			0x30
+
+#define KSZ8863_REG_PORT_CTRL0_BROADCAST_STORM		BIT(7)
+#define KSZ8863_REG_PORT_CTRL0_DIFFSERV_ENABLE		BIT(6)
+#define KSZ8863_REG_PORT_CTRL0_802_1P_ENABLE		BIT(5)
+#define KSZ8863_REG_PORT_CTRL0_PRIO_MASK		0x18
+#define KSZ8863_REG_PORT_CTRL0_PRIO_SHIFT		3
+#define KSZ8863_REG_PORT_CTRL0_PRIO_0			(0 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
+#define KSZ8863_REG_PORT_CTRL0_PRIO_1			(1 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
+#define KSZ8863_REG_PORT_CTRL0_PRIO_2			(2 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
+#define KSZ8863_REG_PORT_CTRL0_PRIO_3			(3 << KSZ8863_REG_PORT_CTRL_PRIO_SHIFT)
+#define KSZ8863_REG_PORT_CTRL0_INSERT_TAG		BIT(2)
+#define KSZ8863_REG_PORT_CTRL0_REMOVE_TAG		BIT(1)
+#define KSZ8863_REG_PORT_CTRL0_4_PRIOS_ENABLE		BIT(0)
+
+#define KSZ8863_REG_PORT1_CTRL2			0x12
+#define KSZ8863_REG_PORT2_CTRL2			0x22
+#define KSZ8863_REG_PORT3_CTRL2			0x32
+
+#define KSZ8863_REG_PORT_CTRL2_2_PRIORITIES_ENABLE	BIT(7)
+#define KSZ8863_REG_PORT_CTRL2_INGRESS_FILTER		BIT(6)
+#define KSZ8863_REG_PORT_CTRL2_DISCARD_NON_VID		BIT(5)
+#define KSZ8863_REG_PORT_CTRL2_FORCE_FLOW_CTRL		BIT(4)
+#define KSZ8863_REG_PORT_CTRL2_BACK_PRESSURE		BIT(3)
+#define KSZ8863_REG_PORT_CTRL2_TX_ENABLE		BIT(2)
+#define KSZ8863_REG_PORT_CTRL2_RX_ENABLE		BIT(1)
+#define KSZ8863_REG_PORT_CTRL2_LEARN_DISABLE		BIT(0)
+
+#define KSZ8863_REG_PORT1_CTRL5			0x15
+#define KSZ8863_REG_PORT2_CTRL5			0x25
+#define KSZ8863_REG_PORT3_CTRL5			0x35
+
+#define KSZ8863_REG_PORT_CTRL5_3_MII_MAC_MODE		BIT(7)
+#define KSZ8863_REG_PORT_CTRL5_SA_MAC2			BIT(6)
+#define KSZ8863_REG_PORT_CTRL5_SA_MAC1			BIT(5)
+#define KSZ8863_REG_PORT_CTRL5_DROP_TAG			BIT(4)
+#define KSZ8863_REG_PORT_CTRL5_INGRESS_LIMIT_MODE_MAS	0x0C
+#define KSZ8863_REG_PORT_CTRL5_INGRESS_ALL		0x00
+#define KSZ8863_REG_PORT_CTRL5_INGRESS_UNICAST		0x04
+#define KSZ8863_REG_PORT_CTRL5_INGRESS_MULTICAST	0x08
+#define KSZ8863_REG_PORT_CTRL5_INGRESS_BROADCAST	0x0C
+#define KSZ8863_REG_PORT_CTRL5_COUNT_IFG		BIT(1)
+#define KSZ8863_REG_PORT_CTRL5_COUNT_PREAMBLE		BIT(0)
+
+#define KSZ8863_REG_PORT1_CTRL13		0x1D
+#define KSZ8863_REG_PORT2_CTRL13		0x2D
+
+#define KSZ8863_REG_PORT_CTRL13_LED_OFF			BIT(7)
+#define KSZ8863_REG_PORT_CTRL13_TX_DISABLE		BIT(6)
+#define KSZ8863_REG_PORT_CTRL13_AUTO_NEG_RESTART	BIT(5)
+#define KSZ8863_REG_PORT_CTRL13_REMOTE_FAULT_DISABLE	BIT(4)
+#define KSZ8863_REG_PORT_CTRL13_POWER_DOWN		BIT(3)
+#define KSZ8863_REG_PORT_CTRL13_AUTO_MDIX_DISABLE	BIT(2)
+#define KSZ8863_REG_PORT_CTRL13_FORCE_MDIX		BIT(1)
+#define KSZ8863_REG_PORT_CTRL13_LOOPBACK		BIT(0)
+
+#define KSZ8863_REG_INTERNAL_1V8_LDO_CTRL	0xC1
+#define KSZ8863_REG_INTERNAL_1V8_LDO_CTRL_DISABLE	BIT(6)
+
+#define KSZ8863_REG_PWR_LED			0xC3
+#define KSZ8863_REG_PWR_LED_CPU_IF_PD			BIT(7)
+#define KSZ8863_REG_PWR_LED_SW_PD			BIT(6)
+#define KSZ8863_REG_PWR_LED_LED_MODE_SEL_MASK		0x30
+#define KSZ8863_REG_PWR_LED_LED_MODE_SEL_SHIFT		4
+#define KSZ8863_REG_PWR_LED_LED_MODE_0			0
+#define KSZ8863_REG_PWR_LED_LED_MODE_1			1
+#define KSZ8863_REG_PWR_LED_LED_MODE_2			2
+#define KSZ8863_REG_PWR_LED_LED_MODE_3			3
+#define KSZ8863_REG_PWR_LED_LED_OUT			BIT(3)
+#define KSZ8863_REG_PWR_LED_PLL_PD			BIT(2)
+#define KSZ8863_REG_PWR_LED_PWR_MODE_MASK		0x03
+#define KSZ8863_REG_PWR_LED_PWR_MODE_SEL_SHIFT		0
+
+struct ksz8863_port {
+	struct net_device *bridge;
 };
-extern struct ksz8863_fns_t *ksz8863_fns;
 
+struct ksz8863_chip {
+	/* The dsa_switch this structure is related to */
+	struct dsa_switch *ds;
+
+	/* The device this structure is associated to */
+	struct device *dev;
+
+	/* The MII bus and the address on the bus that is used to
+	 * communication with the switch
+	 */
+	struct mii_bus *sw_bus;
+	u8 sw_addr;
+	const struct ksz8863_bus_ops *mii_ops;
 
-struct ksz8863_pdata_t {
-        int tail_tag;
-        int intrn_pin;
-	int reset_pin;
-	struct device *mii_bus;
+	/* A switch may have a GPIO line tied to its reset pin. Parse
+	 * this from the device tree, and use it before performing
+	 * switch soft reset.
+	 */
+	struct gpio_desc *reset_gpio;
+	bool reset;
+
+	/* If true driver will disable internal 1.8V LDO */
+	bool disable_internal_ldo;
+
+	/* Port information */
+	struct ksz8863_port ports[KSZ8863_NUM_PORTS];
+
+	/* switched / separated mode */
+	bool switched;
 };
-#endif
-
-/* enum from sources.blackfin.uclinux.org/net/dsa/ksz8893.h with ksz8863 bits */
-enum switch_reg {
-        /* Global Registers: 0-15 */
-        ChipID0 = 0,
-        ChipID1,
-        GlobalControl0,
-        GlobalControl1,
-        GlobalControl2, /* 4 */
-        GlobalControl3,
-        GlobalControl4,
-        GlobalControl5,
-        GlobalControl6, /* 8 */
-        GlobalControl7,
-        GlobalControl8,
-        GlobalControl9,
-        GlobalControl10, /* 12 */
-        GlobalControl11,
-        GlobalControl12,
-        GlobalControl13,
-
-        /* Port Registers: 16-95 */
-        Port1Control0 = 16,
-        Port1Control1,
-        Port1Control2,
-        Port1Control3,
-        Port1Control4, /* 20 */
-        Port1Control5,
-        Port1Control6,
-        Port1Control7,
-        Port1Control8, /* 24 */
-        Port1Control9,
-        Port1Control10,
-        Port1Control11,
-        Port1Control12, /* 28 */
-        Port1Control13,
-        Port1Status0,
-        Port1Status1,
-
-        Port2Control0, /* 32 */
-        Port2Control1,
-        Port2Control2,
-        Port2Control3,
-        Port2Control4, /* 36 */
-        Port2Control5,
-        Port2Control6,
-        Port2Control7,
-        Port2Control8, /* 40 */
-        Port2Control9,
-        Port2Control10,
-        Port2Control11,
-        Port2Control12, /* 44 */
-        Port2Control13,
-        Port2Status0,
-        Port2Status1,
-
-        Port3Control0, /* 48 */
-        Port3Control1,
-        Port3Control2,
-        Port3Control3,
-        Port3Control4, /* 52 */
-        Port3Control5,
-        Port3Control6,
-        Port3Control7,
-        Port3Control8, /* 56 */
-        Port3Control9,
-        Reservednotappliedtoport3, /* 58-62 */
-        Port3Status1 = 63,
-
-        /* ksz8863 specific */
-        Reset = 67,
-
-        TOSPriorityControlRegister0 = 96,
-        TOSPriorityControlRegister1,
-        TOSPriorityControlRegister2,
-        TOSPriorityControlRegister3,
-        TOSPriorityControlRegister4, /* 100 */
-        TOSPriorityControlRegister5,
-        TOSPriorityControlRegister6,
-        TOSPriorityControlRegister7,
-        TOSPriorityControlRegister8, /* 104 */
-        TOSPriorityControlRegister9,
-        TOSPriorityControlRegister10,
-        TOSPriorityControlRegister11,
-        TOSPriorityControlRegister12, /* 108 */
-        TOSPriorityControlRegister13,
-        TOSPriorityControlRegister14,
-        TOSPriorityControlRegister15,
-
-        IndirectAccessControl0 = 121,
-        IndirectAccessControl1,
-        IndirectDataRegister8,
-        IndirectDataRegister7, /* 124 */
-        IndirectDataRegister6,
-        IndirectDataRegister5,
-        IndirectDataRegister4,
-        IndirectDataRegister3, /* 128 */
-        IndirectDataRegister2,
-        IndirectDataRegister1,
-        IndirectDataRegister0,
-
-        Port3EgressRateLimitQ0 = 162,
-        Port3EgressRateLimitQ1,
-        Port3EgressRateLimitQ2,
-        Port3EgressRateLimitQ3,
-
-        Port1TxqSplitForQ0 = 175,
-        Port1TxqSplitForQ1,
-        Port1TxqSplitForQ2,
-        Port1TxqSplitForQ3,
-        Port2TxqSplitForQ0,
-        Port2TxqSplitForQ1, /* 180 */
-        Port2TxqSplitForQ2,
-        Port2TxqSplitForQ3,
-        Port3TxqSplitForQ0,
-        Port3TxqSplitForQ1, /* 184 */
-        Port3TxqSplitForQ2,
-        Port3TxqSplitForQ3,
-
-        InterruptEnable = 187,
-        LinkChangeInterrupt,
-
-	Internal1v8ldoControl = 193,
-        InsertSrcPvid,
-        PowerManagementLedMode,
-
-	ForwardInvalidVIDFrameandHostMode = 198,
+
+struct ksz8863_bus_ops {
+	int (*read)(struct ksz8863_chip *chip, int reg, u8 *val);
+	int (*write)(struct ksz8863_chip *chip, int reg, u8 val);
 };
 
-#endif /* KSZ8863_H */
+#endif /* __KSZ8863_H__ */
-- 
2.7.4

