From 7dcb1b3a26417ac522de6af843750801d01532ee Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Thu, 24 Jan 2019 12:34:05 +0100
Subject: [PATCH] vtpctp: use pll2 video clock in case of 10" panels

Signed-off-by: Oleg Karfich <oleg.karfich@wago.com>
---
 arch/arm/boot/dts/imx6q-vtpctp-0010.dts |  4 +++
 arch/arm/mach-imx/Kconfig               |  8 -----
 drivers/clk/imx/clk-imx6q.c             | 57 ++++++++++++++++++++-------------
 3 files changed, 39 insertions(+), 30 deletions(-)

diff --git a/arch/arm/boot/dts/imx6q-vtpctp-0010.dts b/arch/arm/boot/dts/imx6q-vtpctp-0010.dts
index 02c47f8..53a356d 100644
--- a/arch/arm/boot/dts/imx6q-vtpctp-0010.dts
+++ b/arch/arm/boot/dts/imx6q-vtpctp-0010.dts
@@ -113,3 +113,7 @@
 	arm-supply = <&sw1a_reg>;
 	soc-supply = <&sw1c_reg>;
 };
+
+&anatop {
+	use-pll2-video-clk;
+};
diff --git a/arch/arm/mach-imx/Kconfig b/arch/arm/mach-imx/Kconfig
index 32cd980..40ad200 100644
--- a/arch/arm/mach-imx/Kconfig
+++ b/arch/arm/mach-imx/Kconfig
@@ -515,14 +515,6 @@ config IMX6Q_USE_EXTERNAL_ENET_CLK
 	  provide the ethernet clock via output pin. Before selecting this option
 	  be sure wich controller drives the ethernet clock.
 
-config IMX6Q_USE_PLL2_VIDEO_CLK
-	bool "i.MX6 use pll2 video clock"
-
-	help
-	  This enables the use of PLL2_VIDEO instead PLL5_VIDEO for the
-	  video controller. This option is necessary for spread spectrum
-	  of video clock.
-
 config IMX6Q_SET_IMX6QDL_CLK_CKO2_12MHZ
 	bool "i.MX6 set CLK_CKO2 output clock rate to 12MHz"
 
diff --git a/drivers/clk/imx/clk-imx6q.c b/drivers/clk/imx/clk-imx6q.c
index 446d997..33e46ea 100644
--- a/drivers/clk/imx/clk-imx6q.c
+++ b/drivers/clk/imx/clk-imx6q.c
@@ -162,6 +162,7 @@ static void __init imx6q_clocks_init(struct device_node *ccm_node)
 	void __iomem *base;
 	int i;
 	int ret;
+	bool pll2_video_clk;
 
 	clk[IMX6QDL_CLK_DUMMY] = imx_clk_fixed("dummy", 0);
 	clk[IMX6QDL_CLK_CKIL] = imx_obtain_fixed_clock("ckil", 0);
@@ -175,6 +176,8 @@ static void __init imx6q_clocks_init(struct device_node *ccm_node)
 	base = of_iomap(np, 0);
 	WARN_ON(!base);
 
+	pll2_video_clk = of_property_read_bool(np, "use-pll2-video-clk");
+
 	/* Audio/video PLL post dividers do not work on i.MX6q revision 1.0 */
 	if (clk_on_imx6q() && imx_get_soc_revision() == IMX_CHIP_REVISION_1_0) {
 		post_div_table[1].div = 1;
@@ -582,35 +585,45 @@ static void __init imx6q_clocks_init(struct device_node *ccm_node)
 
 	clk_register_clkdev(clk[IMX6QDL_CLK_ENET_REF], "enet_ref", NULL);
 
-#ifdef CONFIG_IMX6Q_USE_PLL2_VIDEO_CLK
-	if ((imx_get_soc_revision() != IMX_CHIP_REVISION_1_0) ||
-	    clk_on_imx6dl()) {
-		clk_set_parent(clk[IMX6QDL_CLK_LDB_DI0_SEL], clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
-		clk_set_parent(clk[IMX6QDL_CLK_LDB_DI1_SEL], clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
-	}
-#else
 	if ((imx_get_soc_revision() != IMX_CHIP_REVISION_1_0) ||
-	    clk_on_imx6dl()) {
-		clk_set_parent(clk[IMX6QDL_CLK_LDB_DI0_SEL], clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
-		clk_set_parent(clk[IMX6QDL_CLK_LDB_DI1_SEL], clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
+							clk_on_imx6dl()) {
+		if (pll2_video_clk) {
+			clk_set_parent(clk[IMX6QDL_CLK_LDB_DI0_SEL],
+						clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
+			clk_set_parent(clk[IMX6QDL_CLK_LDB_DI1_SEL],
+						clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
+		} else {
+			clk_set_parent(clk[IMX6QDL_CLK_LDB_DI0_SEL],
+						clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
+			clk_set_parent(clk[IMX6QDL_CLK_LDB_DI1_SEL],
+						clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
+		}
 	}
-#endif
 
 	clk_set_rate(clk[IMX6QDL_CLK_PLL3_PFD1_540M], 540000000);
 	if (clk_on_imx6dl())
 		clk_set_parent(clk[IMX6QDL_CLK_IPU1_SEL], clk[IMX6QDL_CLK_PLL3_PFD1_540M]);
 
-#ifdef CONFIG_IMX6Q_USE_PLL2_VIDEO_CLK
-	clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI0_PRE_SEL], clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
-	clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI1_PRE_SEL], clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
-	clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI0_PRE_SEL], clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
-	clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI1_PRE_SEL], clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
-#else
-	clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI0_PRE_SEL], clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
-	clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI1_PRE_SEL], clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
-	clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI0_PRE_SEL], clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
-	clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI1_PRE_SEL], clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
-#endif
+	if (pll2_video_clk) {
+		clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI0_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
+		clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI1_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
+		clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI0_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
+		clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI1_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL2_PFD2_396M]);
+	} else {
+		clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI0_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
+		clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI1_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
+		clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI0_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
+		clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI1_PRE_SEL],
+						clk[IMX6QDL_CLK_PLL5_VIDEO_DIV]);
+	}
+
 	clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI0_SEL], clk[IMX6QDL_CLK_IPU1_DI0_PRE]);
 	clk_set_parent(clk[IMX6QDL_CLK_IPU1_DI1_SEL], clk[IMX6QDL_CLK_IPU1_DI1_PRE]);
 	clk_set_parent(clk[IMX6QDL_CLK_IPU2_DI0_SEL], clk[IMX6QDL_CLK_IPU2_DI0_PRE]);
-- 
2.7.4

