From e5970531f886597f6bce74d400cf27458a170b5b Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Fri, 12 Oct 2018 14:25:43 +0200
Subject: [PATCH] ARM: dts: src: rename oftrees and adjust compatible strings

Signed-off-by: Oleg Karfich <oleg.karfich@wago.com>
---
 arch/arm/boot/dts/Makefile                         |   3 +-
 arch/arm/boot/dts/am335x-src-2850_3111_3112.dts    |  16 +
 arch/arm/boot/dts/am335x-src-2850_311x.dtsi        | 961 ++++++++++++++++++++
 arch/arm/boot/dts/am335x-src-setupfw.dts           |  61 ++
 .../arm/boot/dts/am3xxx-src-2850_311x-ksz8863.dtsi |  69 ++
 arch/arm/boot/dts/wago-src-devconf-000c.dts        |  24 -
 arch/arm/boot/dts/wago-src-ksz8863.dtsi            |  69 --
 arch/arm/boot/dts/wago-src-setupfw.dts             |  61 --
 arch/arm/boot/dts/wago-src.dtsi                    | 962 ---------------------
 9 files changed, 1109 insertions(+), 1117 deletions(-)
 create mode 100644 arch/arm/boot/dts/am335x-src-2850_3111_3112.dts
 create mode 100644 arch/arm/boot/dts/am335x-src-2850_311x.dtsi
 create mode 100644 arch/arm/boot/dts/am335x-src-setupfw.dts
 create mode 100644 arch/arm/boot/dts/am3xxx-src-2850_311x-ksz8863.dtsi
 delete mode 100644 arch/arm/boot/dts/wago-src-devconf-000c.dts
 delete mode 100644 arch/arm/boot/dts/wago-src-ksz8863.dtsi
 delete mode 100644 arch/arm/boot/dts/wago-src-setupfw.dts
 delete mode 100644 arch/arm/boot/dts/wago-src.dtsi

diff --git a/arch/arm/boot/dts/Makefile b/arch/arm/boot/dts/Makefile
index a64388b..f82081c 100644
--- a/arch/arm/boot/dts/Makefile
+++ b/arch/arm/boot/dts/Makefile
@@ -578,10 +578,11 @@ dtb-$(CONFIG_SOC_AM33XX) += \
 	am335x-pfc-750_8215.dtb \
 	am335x-pfc-750_8216.dtb \
 	am335x-pfc-750_8217.dtb \
+	am335x-src-2850_3111_3112.dtb \
         am335x-pfc100-setupfw.dtb \
 	am335x-pfc200v2-setupfw.dtb \
 	am335x-pfc200v3-setupfw.dtb \
-	wago-src-devconf-000c.dtb
+	am335x-src-setupfw.dtb
 dtb-$(CONFIG_ARCH_OMAP4) += \
 	omap4-duovero-parlor.dtb \
 	omap4-kc1.dtb \
diff --git a/arch/arm/boot/dts/am335x-src-2850_3111_3112.dts b/arch/arm/boot/dts/am335x-src-2850_3111_3112.dts
new file mode 100644
index 0000000..424f621
--- /dev/null
+++ b/arch/arm/boot/dts/am335x-src-2850_3111_3112.dts
@@ -0,0 +1,16 @@
+/*
+ * Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you u7 redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+/dts-v1/;
+
+#include "am335x-src-2850_311x.dtsi"
+#include "am3xxx-pfc-devconf-desc.dtsi"
+
+/ {
+	model = "WAGO SRC 2850-3111/3112";
+	compatible = "wago,am335x-src-2850_311x-000c", "wago,am335x-pfc", "wago,am335x-src", "ti,am33xx";
+};
diff --git a/arch/arm/boot/dts/am335x-src-2850_311x.dtsi b/arch/arm/boot/dts/am335x-src-2850_311x.dtsi
new file mode 100644
index 0000000..6101044
--- /dev/null
+++ b/arch/arm/boot/dts/am335x-src-2850_311x.dtsi
@@ -0,0 +1,961 @@
+/*
+ * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#include <dt-bindings/interrupt-controller/irq.h>
+#include "am33xx.dtsi"
+#include "am3xxx-src-2850_311x-ksz8863.dtsi"
+
+/* Varianten beim SRC
+ *
+ * FIXME: alle Varianten ermitteln und auf Abbildbarbeit pruefen (DALI, KNX, ...)
+ * SRC	        (Decke-Boden)  : 2ETH, RS232/485
+ * SRC-DALI	(Decke-Boden)  : 2ETH, RS232/485, DALI
+ *
+ * SRC-C	(Schaltschrank): 2ETH, RS232/485
+ * SRC-C DALI   (Schaltschrank): 2ETH, RS232/485, DALI
+ * SRC-C K-Bus  (Schaltschrank): 2ETH, RS232/485
+ *
+ */
+
+/ {
+	compatible = "wago,am335x-pfc", "wago,am335x-src", "ti,am33xx";
+
+	cpus {
+		cpu@0 {
+			cpu0-supply = <&vdd1_reg>;
+
+			/*
+			 * To consider voltage drop between PMIC and SoC,
+			 * tolerance value is reduced to 2% from 4% and
+			 * voltage value is increased as a precaution.
+			 */
+			operating-points = <
+				/* kHz    uV */
+				/*1000000  1325000*/
+				/* 800000  1260000*/
+				/* 720000  1200000*/
+				 600000  1100000
+				 300000  950000
+			>;
+		};
+	};
+
+	aliases {
+		mdio-gpio0 = &bitbang_mdio0;
+	};
+
+	memory {
+		device_type = "memory";
+		reg = <0x80000000 0x10000000>; /* 256 MB */
+	};
+
+	vin: regulator@0 {
+		compatible = "regulator-fixed";
+		regulator-name = "v_in";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+	};
+
+	wsysinit_init {
+		compatible = "wago,sysinit";
+		add-sysfs-entries;
+
+		tty,rs232-485 = "ttyO0";
+		/*tty,service   = "ttyO0";*/
+
+		board,variant = "src";
+		/* sysclock adjustments,
+		   empirical values */
+		adjtimex,tick = <10000>;
+		adjtimex,frequency = <2000000>;
+	};
+
+	/*
+	   this name of the gpio-keys device is a
+	   historical heritage from 3.6.11 kernel.
+	   the device-name is checked in omsd. So we
+	   need to adapt this configuration
+	*/
+	oms: PAC-Operating-Mode-Switch {
+		compatible = "gpio-keys";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		autorepeat;
+
+		reset_all {
+			label = "RESET_ALL";
+			gpios = <&gpio3 19 GPIO_ACTIVE_HIGH>; /* BAS_RESET_ALL GPIO 83 */
+			linux,code = <4>;
+			linux,input-type = <1>;  /* EV_KEY */
+			debounce-interval = <1>; /* debounce ticks interval in msecs */
+		};
+
+		knx {
+			label = "KNX";
+			gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
+			linux,code = <5>;
+			linux,input-type = <1>;  /* EV_KEY */
+			debounce-interval = <1>; /* debounce ticks interval in msecs */
+		};
+
+	};
+
+	/* LEDs DS and APP. Red color leds are driven by pwm to be able to
+	 * compensate temperature dependent yellow color.
+	 */
+	leds {
+		compatible = "gpio-leds";
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&led_pins>;
+
+		app-green {
+			gpios=<&gpio2 24 GPIO_ACTIVE_HIGH>;
+			default-state="off";
+		};
+
+		ds-green {
+			gpios=<&gpio2 23 GPIO_ACTIVE_HIGH>;
+			default-state="on";
+		};
+	};
+
+	pwmleds {
+		compatible = "pwm-leds";
+
+		add-red {
+			label = "app-red";
+			pwms = <&ehrpwm2 0 50000 0>;
+			max-brightness = <255>;
+		};
+
+		ds-red {
+			label = "ds-red";
+			pwms = <&ehrpwm2 1 50000 0>;
+			max-brightness = <255>;
+			linux,default-trigger = "default-on";
+		};
+	};
+
+	/* X12 AO1 */
+	iocnt0: omap-iocnt {
+		compatible = "ti,omap-iocnt";
+		ti,timers = <&timer3>;
+	};
+
+};
+
+&ksz8863 {
+	ksz,disable-internal-ldo;
+};
+
+&elm {
+	status = "okay";
+};
+
+&gpmc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&gpmc_pins>;
+
+	num-cs = <1>;
+	num-waitpins = <1>;
+	status = "okay";
+	ranges = <
+		0 0 0x08000000 0x01000000	/* CS0: NAND */
+	>;
+
+	nand: nand@0,0 {
+		compatible = "ti,omap2-nand";
+		reg = <0 0 4>; /* CS0, offset 0, IO size 4 */
+		nand-bus-width = <8>;
+		ti,nand-ecc-opt = "bch8";
+		gpmc,device-nand = "true";
+		gpmc,device-width = <1>;
+		gpmc,sync-clk-ps = <0>;
+		gpmc,cs-on-ns = <0>;
+		gpmc,cs-rd-off-ns = <44>;
+		gpmc,cs-wr-off-ns = <44>;
+		gpmc,adv-on-ns = <6>;
+		gpmc,adv-rd-off-ns = <34>;
+		gpmc,adv-wr-off-ns = <44>;
+		gpmc,we-on-ns = <0>;
+		gpmc,we-off-ns = <40>;
+		gpmc,oe-on-ns = <0>;
+		gpmc,oe-off-ns = <54>;
+		gpmc,access-ns = <64>;
+		gpmc,rd-cycle-ns = <82>;
+		gpmc,wr-cycle-ns = <82>;
+		gpmc,wait-pin = <0>;
+		gpmc,wait-on-read;
+		gpmc,wait-on-write;
+		gpmc,bus-turnaround-ns = <0>;
+		gpmc,cycle2cycle-delay-ns = <0>;
+		gpmc,clk-activation-ns = <0>;
+		gpmc,wait-monitoring-ns = <0>;
+		gpmc,wr-access-ns = <40>;
+		gpmc,wr-data-mux-bus-ns = <0>;
+
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ti,elm-id = <&elm>;
+	};
+};
+&am33xx_pinmux {
+	pinctrl-names = "default";
+        pinctrl-0 = <&gpio0_pins>;
+
+	gpio0_pins: pinmux_gpio0_pins {
+		pinctrl-single,pins = <
+			0x028 ( MUX_MODE7 | PIN_OUTPUT		) /* T11 GPMC_AD10		7   GPIO0_26->DO-RS->digital_Relay_output */
+			0x02c ( MUX_MODE7 | PIN_OUTPUT		) /* U12 GPMC_AD11		7   GPIO0_27->nRES_MOD->nRST_MOD->Card_Reset_or_Standby  */
+			0x0d0 ( MUX_MODE7 | PIN_INPUT		) /* V2 LCD_DATA12		7   GPIO0_8->SYSBOOT12*/
+			0x0d4 ( MUX_MODE7 | PIN_INPUT		) /* V3 LCD_DATA13		7   GPIO0_9->SYSBOOT13*/
+			0x0d8 ( MUX_MODE7 | PIN_INPUT		) /* V4 LCD_DATA14		7   GPIO0_10->SYSBOOT14*/
+			0x0dc ( MUX_MODE7 | PIN_INPUT		) /* T5 LCD_DATA15		7   GPIO0_11->SYSBOOT15*/
+			0x124 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* K16 GMII1_TXD1		7   GPIO0_21->KBUS-nRDY */
+			0x128 ( MUX_MODE7 | PIN_INPUT_PULLUP 	) /* K17 GMII1_TXD0		7   GPIO0_28->KBUS-CMDSEL */
+			0x178 ( MUX_MODE7 | PIN_OUTPUT		) /* D18 UART1_CTSN		7   GPIO0_12->DO_CPU_HLK1 */
+			0x17c ( MUX_MODE7 | PIN_OUTPUT		) /* D17 UART1_RTSN		7   GPIO0_13->DO_CPU_HLK2 */
+			0x1b4 ( MUX_MODE2 | PIN_INPUT		) /* D14 XDMA_EVENT_INTR1       2   tclkin->CNT-FAN->Counter_input */
+		>;
+	};
+
+	gpio1_pins: pinmux_gpio1_pins {
+		pinctrl-single,pins = <
+			0x030 ( MUX_MODE7 | PIN_OUTPUT		) /* T12 GPMC_AD12		7   GPIO1_12->EN-V-SENSOR->Sensor_supply */
+			0x034 ( MUX_MODE7 | PIN_OUTPUT		) /* R12 GPMC_AD13		7   GPIO1_13->RCU_DE */
+			0x038 ( MUX_MODE7 | PIN_OUTPUT		) /* V13 GPMC_AD14		7   GPIO1_14->UART1_DE */
+			0x03c ( MUX_MODE7 | PIN_INPUT		) /* U13 GPMC_AD15		7   GPIO1_15->nERR-V-FUSED->Over_Current_detection */
+			0x044 ( MUX_MODE7 | PIN_OUTPUT		) /* V14 GPMC_A1		7   GPIO1_17->nRST_DALI->DALI_reset */
+			0x05c ( MUX_MODE7 | PIN_OUTPUT		) /* T15 GPMC_A7		7   GPIO1_23->UART_DIR_MOD*/
+			0x060 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* V16 GPMC_A8		7   GPIO1_24->nINT_MOD->Card_interrupt_request */
+			0x064 ( MUX_MODE7 | PIN_INPUT		) /* U16 GPMC_A9		7   GPIO1_25->nINT_EXT*/
+			0x080 ( MUX_MODE7 | PIN_OUTPUT		) /* U9 GPMC_CSN1		7   GPIO1_30->nBOOT_END->Boot_process_end */
+			0x16c ( MUX_MODE7 | PIN_OUTPUT_PULLUP	) /* E17 UART0_RTSN		7   GPIO1_9->LED-K-BUS-G */
+			0x084 ( MUX_MODE7 | PIN_OUTPUT_PULLUP 	) /* V9 GPMC_CSN2		7   GPIO1_31->LED-K-BUS-R */
+		>;
+	};
+
+	gpio2_pins: pinmux_gpio2_pins {
+		pinctrl-single,pins = <
+			0x08c ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* V12 GPMC_CLK		7   GPIO2_1->nINT-RTC->RTC_Interrupt */
+			0x0a0 ( MUX_MODE7 | PIN_INPUT		) /* R1 LCD_DATA0		7   GPIO2_6->SYSBOOT0*/
+			0x0a4 ( MUX_MODE7 | PIN_INPUT		) /* R2 LCD_DATA1		7   GPIO2_7->SYSBOOT1*/
+			0x0a8 ( MUX_MODE7 | PIN_INPUT		) /* R3 LCD_DATA2		7   GPIO2_8->SYSBOOT2*/
+			0x0ac ( MUX_MODE7 | PIN_INPUT		) /* R4 LCD_DATA3		7   GPIO2_9->SYSBOOT3*/
+			0x0b0 ( MUX_MODE7 | PIN_INPUT		) /* T1 LCD_DATA4		7   GPIO2_10->SYSBOOT4*/
+			0x0b4 ( MUX_MODE7 | PIN_INPUT		) /* T2 LCD_DATA5		7   GPIO2_11->SYSBOOT5*/
+			0x0b8 ( MUX_MODE7 | PIN_INPUT		) /* T3 LCD_DATA6		7   GPIO2_12->ERRST6*/
+			0x0bc ( MUX_MODE7 | PIN_INPUT		) /* T4 LCD_DATA7		7   GPIO2_13->ERRST7*/
+			0x0c0 ( MUX_MODE7 | PIN_INPUT		) /* U1 LCD_DATA8		7   GPIO2_14->ERRST8*/
+			0x0c4 ( MUX_MODE7 | PIN_INPUT		) /* U2 LCD_DATA9		7   GPIO2_15->ERRST9*/
+			0x0ec ( MUX_MODE7 | PIN_OUTPUT		) /* R6 LCD_AC_BIAS_EN		7   GPIO2_25->EN-V-FUSED->Switch_UI */
+			0x134 ( MUX_MODE7 | PIN_OUTPUT		) /* L17 MII1_RXD3		7   GPIO2_18->UO-HLK1->1._universal_HLK_output */
+			0x138 ( MUX_MODE7 | PIN_OUTPUT		) /* L16 MII1_RXD2		7   GPIO2_19->UO-HLK2->2._universal_HLK_output */
+			0x140 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* M16 GMII1_RXD0		7   GPIO2_21->KBUS-nIRQ */
+			//0x0e0 ( MUX_MODE7 | PIN_INPUT		  ) /* U5 LCD_VSYNC		  7   GPIO2_22->nINT-DALI->Interrupt_request_from_DALI */
+		>;
+	};
+
+	gpio3_pins: pinmux_gpio3_pins {
+		pinctrl-single,pins = <
+			0x114 ( MUX_MODE7 | PIN_OUTPUT_PULLUP	) /* J16 GMII1_TXEN		7   GPIO3_3->KBUS-nSYNC */
+			0x118 ( MUX_MODE7 | PIN_OUTPUT_PULLUP 	) /* J17 GMII1_RXDV		7   GPIO3_4->KBUS-nRST */
+			0x12c ( MUX_MODE7 | PIN_OUTPUT		) /* K18 MII1_TX_CLK		7   GPIO3_9->DO-PI->digital_PI_output */
+			0x1a0 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* B12 MCASP0_ACLKR		7   GPIO3_18->MMC0_nCD->SD_card_detect */
+			0x1a4 ( MUX_MODE7 | PIN_INPUT_PULLDOWN	) /* C13 MCASP0_FSR		7   GPIO3_19->CUST_RES->Customer_reset */
+			0x1a8 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* D13 MCASP0_AXR1		7   GPIO3_20->nPRESDET->Card_detect */
+			0x1ac ( MUX_MODE7 | PIN_OUTPUT		) /* A14 MCASP0_AHCLKX		7   GPIO3_21->DO-FAN->digital_FAN_output */
+			//0x1e4 ( MUX_MODE0 | PIN_INPUT		) /* C14 EMU0			0   EMU0 */
+			//0x1e8 ( MUX_MODE0 | PIN_INPUT		) /* B14 EMU1			0   EMU1 */
+			0x234 ( MUX_MODE7 | PIN_INPUT_PULLDOWN	) /* F15 USB1_DRVVBUS		7   GPIO3_13->KNX-SW->Application_Switch */
+		>;
+	};
+
+	uart0_pins: pinmux_uart0_pins {
+		pinctrl-single,pins = <
+			0x170 ( MUX_MODE0 | PIN_INPUT		) /* E15 UART0_RXD		0   UART0_RXD->DEBUG_RXD */
+			0x174 ( MUX_MODE0 | PIN_OUTPUT		) /* E16 UART0_TXD		0   UART0_TXD->DEBUG_TXD */
+		>;
+	};
+
+	uart1_pins: pinmux_uart1_pins {
+		pinctrl-single,pins = <
+			0x180 ( MUX_MODE0 | PIN_INPUT		) /* D16 UART1_RXD		0   UART1_RXD */
+			0x184 ( MUX_MODE0 | PIN_OUTPUT		) /* D15 UART1_TXD		0   UART1_TXD */
+		>;
+	};
+
+	uart2_pins: pinmux_uart2_pins {
+		pinctrl-single,pins = <
+			0x10c ( MUX_MODE6 | PIN_INPUT		) /* H17 GMII1_CRS		6   UART2_RXD */
+			0x110 ( MUX_MODE6 | PIN_OUTPUT 		) /* J15 GMII1_RXER		6   UART2_TXD */
+		>;
+	};
+
+	uart3_pins: pinmux_uart3_pins {
+		pinctrl-single,pins = <
+			0x0c8 ( MUX_MODE6 | PIN_INPUT		) /* U3 LCD_DATA10		6   UART3_CTS->DALI_clear_to_send */
+			0x0cc ( MUX_MODE6 | PIN_INPUT		) /* U4 LCD_DATA11		6   UART3_RTS->DALI_request_to_send */
+			0x160 ( MUX_MODE1 | PIN_INPUT		) /* C15 SPI0_CS1		1   UART3_RXD->DALI_receive_data */
+			0x164 ( MUX_MODE1 | PIN_OUTPUT		) /* C18 ECAP0_IN_PWM0_OUT	1   UART3_TXD->DALI_transmit_data */
+		>;
+	};
+
+	uart4_pins: pinmux_uart4_pins {
+		pinctrl-single,pins = <
+			0x11c ( MUX_MODE3 | PIN_INPUT		) /* J18 MII1_TXD3		3   RCU_B-	*/
+			0x120 ( MUX_MODE3 | PIN_OUTPUT		) /* K15 MII1_TXD2		3   RCU_A+	*/
+		>;
+	};
+
+	led_pins: pinmux_led_pins {
+		pinctrl-single,pins = <
+			0x0e4 ( MUX_MODE7 | PIN_OUTPUT		) /* R5 LCD_HSYNC		7   GPIO2_23->Status_LED_green  */
+			0x0e8 ( MUX_MODE7 | PIN_OUTPUT		) /* V5 LCD_PCLK		7   GPIO2_24->Application_LED_green  */
+			//0x084 ( MUX_MODE7 | PIN_OUTPUT	) /* V9 GPMC_CSN2		7   GPIO1_31->K-BUS_LED_red */
+			//0x16c ( MUX_MODE7 | PIN_OUTPUT	) /* E17 UART0_RTSn		7   GPIO1_9->K-BUS_LED_green */
+		>;
+	};
+
+	pwm_led_pins: pinmux_pwm_led_pins {
+		pinctrl-single,pins = <
+			0x020 ( MUX_MODE4 | PIN_OUTPUT		) /* U10 GPMC_AD8		4   EHRPWM2A->Application_LED_red  */
+			0x024 ( MUX_MODE4 | PIN_OUTPUT		) /* T10 GPMC_AD9		4   EHRPWM2B->Status_LED_red  */
+		>;
+	};
+
+	ao_pins: pinmux_ao_pins {
+		pinctrl-single,pins = <
+			0x194 ( MUX_MODE1 | PIN_OUTPUT_PULLDOWN	) /* B13 MCASP0_FSX		1   EHRPWM0B->AO_PWM_FAN */
+		>;
+	};
+
+	uo_pins: pinmux_uo_pins {
+		pinctrl-single,pins = <
+			0x048 ( MUX_MODE6 | PIN_OUTPUT_PULLDOWN	) /* U14 GPMC_A2		6   EHRPWM1A->UO_PWM_HLK1 */
+			0x04c ( MUX_MODE6 | PIN_OUTPUT_PULLDOWN	) /* T14 GPMC_A3		6   EHRPWM1B->UO_PWM_HLK2 */
+		>;
+	};
+
+	i2c0_pins: pinmux_i2c0_pins {
+		pinctrl-single,pins = <
+			0x188 ( MUX_MODE0 | PIN_INPUT | SLEWCTRL_SLOW ) /* C17 I2C0_SDA		0   I2C0_SDA  */
+			0x18c ( MUX_MODE0 | PIN_INPUT | SLEWCTRL_SLOW ) /* C16 I2C0_SCL		0   I2C0_SCL  */
+		>;
+	};
+
+	spi0_pins: pinmux_spi0_pins {
+		pinctrl-single,pins = <
+			0x150 ( MUX_MODE0 | PIN_INPUT		) /* A17 SPI0_SCLK		0   SPI0_SCLK */
+			0x154 ( MUX_MODE0 | PIN_INPUT		) /* B17 SPI0_D0		0   SPI0_MISO */
+			0x158 ( MUX_MODE0 | PIN_OUTPUT		) /* B16 SPI0_D1		0   SPI0_MOSI */
+			0x15c ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* A16 SPI0_CS0		0   SPI0_CS0  */
+		>;
+	};
+
+	spi1_pins: pinmux_spi1_pins {
+		pinctrl-single,pins = <
+			0x168 ( MUX_MODE4 | PIN_INPUT_PULLDOWN	) /* E18 UART0_CTSN		4   SPI1_D0->SPI1_MISO */
+			0x190 ( MUX_MODE3 | PIN_INPUT		) /* A13 MCASP0_ACLKX		3   SPI1_SCLK->Serial_clock */
+			0x198 ( MUX_MODE3 | PIN_OUTPUT		) /* D12 MCASP0_AXR0		3   SPI1_D1->SPI1_MOSI */
+			0x1b0 ( MUX_MODE4 | PIN_OUTPUT		) /* A15 XDMA_EVENT_INTR0	4   SPI1_nCS1->Chip_select_dali */
+			0x19c ( MUX_MODE3 | PIN_OUTPUT		) /* C12 MCASP0_AHCLKR		3   SPI1_nCS0->Chip_select_kbus */
+		>;
+	};
+
+	usb0_pins: pinmux_usb0_pins {
+		pinctrl-single,pins = <
+			0x208 ( MUX_MODE0 | PIN_INPUT		) /* N18 USB0_DM		0   USB0_DM->Negative_data   */
+			0x20c ( MUX_MODE0 | PIN_INPUT		) /* N17 USB0_DP		0   USB0_DP->Positive_data   */
+			0x214 ( MUX_MODE0 | PIN_INPUT		) /* P16 USB0_ID		0   USB0_ID */
+			0x218 ( MUX_MODE0 | PIN_INPUT		) /* P15 USB0_VBUS		0   USB0_VBUS->USB_detect */
+			0x21c ( MUX_MODE0 | PIN_OUTPUT		) /* F16 USB0_DRVVBUS		0   GPIO0_18->USB0_DRVVBUS  */
+		>;
+	};
+
+	mmc1_pins: pinmux_mmc1_pins {
+		pinctrl-single,pins = <
+			0x0f0 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* F17 MMC0_DAT3		0   MMC0_D3   */
+			0x0f4 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* F18 MMC0_DAT2		0   MMC0_D2   */
+			0x0f8 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G15 MMC0_DAT1		0   MMC0_D1   */
+			0x0fc ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G16 MMC0_DAT0		0   MMC0_D0   */
+			0x100 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G17 MMC0_CLK		0   MMC0_CLK  */
+			0x104 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G18 MMC0_CMD		0   MMC0_CMD  */
+		>;
+	};
+
+	gpmc_pins: pinmux_gpmc_pins {
+		pinctrl-single,pins = <
+			/* NV Memory NAND-Flash */
+			0x000 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* U7 GPMC_AD0		0   GPMC_AD0 	*/
+			0x004 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* V7 GPMC_AD1		0   GPMC_AD1 	*/
+			0x008 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* R8 GPMC_AD2		0   GPMC_AD2 	*/
+			0x00c ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* T8 GPMC_AD3		0   GPMC_AD3 	*/
+			0x010 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* U8 GPMC_AD4		0   GPMC_AD4 	*/
+			0x014 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* V8 GPMC_AD5		0   GPMC_AD5 	*/
+			0x018 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* R9 GPMC_AD6		0   GPMC_AD6 	*/
+			0x01c ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* T9 GPMC_AD7		0   GPMC_AD7 	*/
+			0x070 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* T17 GPMC_WAIT0		0   GPMC_WAIT0	  */
+			0x07c ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* V6 GPMC_CSN0		0   GPMC_CSN0	   */
+			0x090 ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* R7 GPMC_ADVN_ALE		0   GPMC_ADVn_ALE   */
+			0x094 ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* T7 GPMC_OEN_REN		0   GPMC_OEn_REn */
+			0x098 ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* U6 GPMC_WEN		0   GPMC_WEn	*/
+			0x09c ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* T6 GPMC_BEN0_CLE		0   GPMC_BE0n_cle   */
+		>;
+	};
+
+
+	ksz8863_pins: pinmux_ksz8863_pins {
+		pinctrl-single,pins = <
+			0x130 (PIN_OUTPUT_PULLUP | MUX_MODE7) /* L18 MII1_RX_CLK      7 GPIO3_10->EN-PHY->Enable_Switch */
+			0x078 (MUX_MODE7 | PIN_INPUT_PULLUP)  /* U18 GPMC_BEN1        7 GPIO1_28->nINT-PHY->Switch Interrupt */
+		>;
+	};
+
+	cpsw_default_pins: pinmux_cpsw_default_pins {// RMII2 Ethernet Switch
+		pinctrl-single,pins = <
+			0x040 (PIN_OUTPUT_PULLDOWN 	| SLEWCTRL_FAST	| MUX_MODE3) 	/* gpmc_a0.rmii2_txen */		//r13
+			0x050 (PIN_OUTPUT_PULLDOWN 	| SLEWCTRL_FAST	| MUX_MODE3) 	/* gpmc_a4.rmii2_txd1 */		//r14
+			0x054 (PIN_OUTPUT_PULLDOWN 	| SLEWCTRL_FAST	| MUX_MODE3) 	/* gpmc_a5.rmii2_txd0 */		//v15
+			0x068 (PIN_INPUT_PULLDOWN 	| MUX_MODE3)  	/* gpmc_a10.rmii2_rxd1 */		//t16
+			0x06C (PIN_INPUT_PULLDOWN 	| MUX_MODE3)  	/* gpmc_a11.rmii2_rxd0 */		//v17
+			0x074 (PIN_INPUT_PULLDOWN 	| MUX_MODE3)  	/* gpmc_wpn.rmii2_rxer */		//u17
+			0x108 (PIN_INPUT_PULLDOWN 	| MUX_MODE1)  	/* mii1_col.rmii2_refclk */		//h16
+			0x088 (PIN_INPUT          	| MUX_MODE2)  	/* gpmc_csn3.rmii2_crs_dv */	//t13
+		>;
+	};
+
+	cpsw_sleep_pins: pinmux_cpsw_sleep_pins {
+		pinctrl-single,pins = <
+			0x040 (PIN_INPUT_PULLDOWN 	| MUX_MODE7) 	/* gpmc_a0.gpio1_16 */			//r13
+			0x050 (PIN_INPUT_PULLDOWN 	| MUX_MODE7) 	/* gpmc_a4.gpio1_20 */			//r14
+			0x054 (PIN_INPUT_PULLDOWN 	| MUX_MODE7) 	/* gpmc_a5.gpio1_21 */			//v15
+			0x068 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_a10.gpio1_26 */			//t16
+			0x06C (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_a11.gpio1_27 */			//v17
+			0x074 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_wpn.gpio0_31 */			//u17
+			0x108 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* mii1_col.gpio3_0 */			//h16
+			0x088 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_csn3.gpio2_0 */			//t13
+		>;
+	};
+
+	gpio_bitbang_mdio_pins: pinmux_gpio_bitbang_mdio_pins {
+		pinctrl-single,pins = <
+			/* MDIO */
+			0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE7)	/* M17: mdio.gpio0_0 (mdio_data), SLEWCTRL_FAST?? */
+			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE7)			/* M18:  mdc.gpio0_1 (mdio_clk)                   */
+		>;
+	};
+
+	gpio_bitbang_mdio_sleep_pins: pinmux_gpio_bitbang_mdio_sleep_pins {
+		pinctrl-single,pins = <
+			/* MDIO reset value */
+			0x148 (PIN_INPUT_PULLUP 	| MUX_MODE7)	/* mdio.gpio0_0 */				//m17
+			0x14c (PIN_INPUT_PULLDOWN 	| MUX_MODE7)	/* mdc.gpio0_1   */				//m18
+		>;
+	};
+
+};
+
+&edma {
+	ti,edma-xbar-event-map = /bits/ 16 <32 12>;
+};
+
+&spi0 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi0_pins>;
+
+	// FRAM - FM25CL64B-G
+	at25@0 {
+		compatible = "atmel,at25", "st,m95256";
+		spi-max-frequency = <10000000>;
+		spi-cpha;
+		spi-cpol;
+		reg = <0>;
+		pagesize = <8>;
+		size = <8192>;
+		address-width = <16>;
+	};
+};
+
+&spi1 {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi1_pins>;
+	num-cs = <2>;
+
+	// KBUS Spidev
+	spi2_0: spidev@0 {
+		compatible = "wago,srckbus";
+		reg = <0>;
+		spi-max-frequency = <10000000>;
+	};
+
+	/* ATmega ISP */
+	spi2_1: spidev@0 {
+		compatible = "wago,wds";
+		reg = <1>;
+		spi-max-frequency = <10000000>;
+	};
+};
+
+&i2c0 {
+	status = "okay";
+	clock-frequency = <400000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c0_pins>;
+
+	/* EEPROM */
+	eeprom: at24c32 { //AT24C32-SSHD
+			compatible = "atmel,24c512";
+			reg = <0x54>;
+			pagesize = <128>;
+	};
+
+	/* PMIC */
+	tps: tps65910@2d {
+		compatible = "ti,tps65910";
+		reg = <0x2d>;
+		export-enable2-regs-to-sysfs;
+	};
+
+	/* ADC */
+	mcp3428: mcp3428@68 {
+		compatible = "microchip,mcp3428";
+		reg = <0x68>;
+		status = "okay";
+	};
+
+	/* RTC */
+	rtc_r2221t {
+		compatible = "ricoh,r2221tl";
+		reg = <0x32>;
+
+		interrupt-parent = <&gpio2>;
+		interrupts = <1 IRQ_TYPE_LEVEL_LOW>;
+                trim-data = <0 0 13>;
+	};
+
+	/* CARD-Port-Expander */
+	/*pca9554pw { // Erweiterungsmodul / Einsteckkarte z.B. EnOcean-Modul
+		compatible = "nxp,pca9554";
+		reg = <0x20>;
+	};*/
+
+};
+
+#include "tps65910.dtsi"
+
+&tps {
+	vcc1-supply = <&vin>;
+	vcc2-supply = <&vin>;
+	vcc3-supply = <&vin>;
+	vcc4-supply = <&vin>;
+	vcc5-supply = <&vin>;
+	vcc6-supply = <&vin>;
+	vcc7-supply = <&vin>;
+	vccio-supply = <&vin>;
+
+	regulators {
+		vrtc_reg: regulator@0 {
+			regolator-always-on;
+		};
+
+		vio_reg: regulator@1 { // V_DDR+1V5
+			regulator-name = "v_ddr";
+			regulator-min-microvolt = <1500000>;
+			regulator-max-microvolt = <1500000>;
+			regulator-always-on;
+			regulator-boot-on;
+		};
+
+		vdd1_reg: regulator@2 { // V_MPU+1V1
+			regulator-name = "v_mpu";
+			regulator-min-microvolt = < 600000>;
+			regulator-max-microvolt = <1500000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		vdd2_reg: regulator@3 { //V_CORE +1V1
+			regulator-name = "v_core";
+			regulator-min-microvolt = < 600000>;
+			regulator-max-microvolt = <1500000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		vdig1_reg: regulator@5 { // V_ADC+1V8
+			regulator-name = "v_adc";
+			regulator-min-microvolt = <1800000>;
+			regulator-max-microvolt = <1800000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		vdig2_reg: regulator@6 { // V_PLL+1V8
+			regulator-name = "v_pll";
+			regulator-min-microvolt = <1800000>;
+			regulator-max-microvolt = <1800000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		vmmc_reg: regulator@12 { //V1_IO
+			regulator-name = "v_io";
+			regulator-min-microvolt = <3300000>;
+			regulator-max-microvolt = <3300000>;
+			regulator-always-on;
+			regulator-boot-on;
+		};
+	};
+};
+
+&tscadc {
+	status = "okay";
+
+	adc {
+		/* AIN0 Temp. Setpoint
+		   AIN1 DI1
+		   AIN2 DI2
+		   AIN3 DI3
+		   AIN4 DI4
+		   AIN5 UI1
+		   AIN6 UI2
+		   AIN7 U/I Measure
+		*/
+		ti,adc-channels = <0 1 2 3 4 5 6 7>;
+		ti,chan-step-opendelay = <0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00>;
+		ti,chan-step-sampledelay = <0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00>;
+		ti,chan-step-avg = <16 16 16 16 16 16 16 16>;
+	};
+};
+
+/* AO PWM */
+&epwmss0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&ao_pins>;
+	status = "okay";
+};
+&ehrpwm0 {
+	status = "okay";
+};
+
+/* UO0/UO1 PWM */
+&epwmss1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uo_pins>;
+	status = "okay";
+};
+&ehrpwm1 {
+	status = "okay";
+};
+
+/* Red APP/DS LED PWM */
+&epwmss2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pwm_led_pins>;
+	status = "okay";
+};
+&ehrpwm2 {
+	status = "okay";
+};
+
+&timer3 { /* X12 / CountIN */
+	status = "okay";
+};
+
+&gpio0 {
+	gpio-line-names = "MDIO_DATA", /* GPIO 0  0 */
+			"MDIO_CLK", /* GPIO 0  1 */
+			"", /* GPIO 0  2 */
+			"", /* GPIO 0  3 */
+			"", /* GPIO 0  4 */
+			"", /* GPIO 0  5 */
+			"", /* GPIO 0  6 */
+			"", /* GPIO 0  7 */
+			"SYSBOOT12", /* GPIO 0  8 */
+			"SYSBOOT13", /* GPIO 0  9 */
+			"SYSBOOT14", /* GPIO 0 10 */
+			"SYSBOOT15", /* GPIO 0 11 */
+			"DO_CPU_HLK1", /* GPIO 0 12 */
+			"DO_CPU_HLK2", /* GPIO 0 13 */
+			"", /* GPIO 0 14 */
+			"", /* GPIO 0 15 */
+			"", /* GPIO 0 16 */
+			"", /* GPIO 0 17 */
+			"", /* GPIO 0 18 */
+			"", /* GPIO 0 19 */
+			"", /* GPIO 0 20 */
+			"KBUS_nRDY", /* GPIO 0 21 */
+			"", /* GPIO 0 22 */
+			"", /* GPIO 0 23 */
+			"", /* GPIO 0 24 */
+			"", /* GPIO 0 25 */
+			"DO_RS", /* GPIO 0 26 */
+			"nRES_MOD", /* GPIO 0 27 */
+			"KBUS_CMDSEL", /* GPIO 0 28 */
+			"", /* GPIO 0 29 */
+			"", /* GPIO 0 30 */
+			""; /* GPIO 0 31 */
+};
+
+&gpio1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&gpio1_pins>;
+
+	gpio-line-names = "", /* GPIO 1  0 */
+			"", /* GPIO 1  1 */
+			"", /* GPIO 1  2 */
+			"", /* GPIO 1  3 */
+			"", /* GPIO 1  4 */
+			"", /* GPIO 1  5 */
+			"", /* GPIO 1  6 */
+			"", /* GPIO 1  7 */
+			"", /* GPIO 1  8 */
+			"LED_K_BUS_G", /* GPIO 1  9 */
+			"", /* GPIO 1 10 */
+			"", /* GPIO 1 11 */
+			"EN_V_SENSOR", /* GPIO 1 12 */
+			"UART4_DE", /* GPIO 1 13 */
+			"UART1_DE", /* GPIO 1 14 */
+			"Over_Current_Detection", /* GPIO 1 15 */
+			"", /* GPIO 1 16 */
+			"nRST_DALI", /* GPIO 1 17 */
+			"", /* GPIO 1 18 */
+			"", /* GPIO 1 19 */
+			"", /* GPIO 1 20 */
+			"", /* GPIO 1 21 */
+			"", /* GPIO 1 22 */
+			"UART_DIR_MOD", /* GPIO 1 23 */
+			"nINT_MOD", /* GPIO 1 24 */
+			"nINT_EXT", /* GPIO 1 25 */
+			"", /* GPIO 1 26 */
+			"", /* GPIO 1 27 */
+			"nINT_PHY", /* GPIO 1 28 */
+			"", /* GPIO 1 29 */
+			"nBOOT_END", /* GPIO 1 30 */
+			"LED_K_BUS_R"; /* GPIO 1 31 */
+
+	/* Set VOUT/Sensor 24V permanently to high */
+	vout {
+		gpio-hog;
+		gpios = <12 0>;
+		output-high;
+		line-name = "vout";
+	};
+};
+
+&gpio2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&gpio2_pins>;
+
+	gpio-line-names = "", /* GPIO 2  0 */
+			"nINT_RTC", /* GPIO 2  1 */
+			"", /* GPIO 2  2 */
+			"", /* GPIO 2  3 */
+			"", /* GPIO 2  4 */
+			"", /* GPIO 2  5 */
+			"SYSBOOT0", /* GPIO 2  6 */
+			"SYSBOOT1", /* GPIO 2  7 */
+			"SYSBOOT2", /* GPIO 2  8 */
+			"SYSBOOT3", /* GPIO 2  9 */
+			"SYSBOOT4", /* GPIO 2 10 */
+			"SYSBOOT5", /* GPIO 2 11 */
+			"ERRST6", /* GPIO 2 12 */
+			"ERRST7", /* GPIO 2 13 */
+			"ERRST8", /* GPIO 2 14 */
+			"ERRST9", /* GPIO 2 15 */
+			"", /* GPIO 2 16 */
+			"", /* GPIO 2 17 */
+			"UO_HLK1", /* GPIO 2 18 */
+			"UO_HLK2", /* GPIO 2 19 */
+			"", /* GPIO 2 20 */
+			"KBUS_nIRQ", /* GPIO 2 21 */
+			"", /* GPIO 2 22 */
+			"LED_DS_G", /* GPIO 2 23 */
+			"LED_APP_G", /* GPIO 2 24 */
+			"SWITCH_UI", /* GPIO 2 25 */
+			"", /* GPIO 2 26 */
+			"", /* GPIO 2 27 */
+			"", /* GPIO 2 28 */
+			"", /* GPIO 2 29 */
+			"", /* GPIO 2 30 */
+			""; /* GPIO 2 31 */
+};
+
+&gpio3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&gpio3_pins>;
+
+	gpio-line-names = "", /* GPIO 3  0 */
+			"", /* GPIO 3  1 */
+			"", /* GPIO 3  2 */
+			"KBUS_nSYNC", /* GPIO 3  3 */
+			"KBUS_nRST", /* GPIO 3  4 */
+			"", /* GPIO 3  5 */
+			"", /* GPIO 3  6 */
+			"", /* GPIO 3  7 */
+			"", /* GPIO 3  8 */
+			"DO_PI", /* GPIO 3  9 */
+			"EN_PHY", /* GPIO 3 10 */
+			"", /* GPIO 3 11 */
+			"", /* GPIO 3 12 */
+			"KNX_SW", /* GPIO 3 13 */
+			"", /* GPIO 3 14 */
+			"", /* GPIO 3 15 */
+			"", /* GPIO 3 16 */
+			"", /* GPIO 3 17 */
+			"MMC0_nCD", /* GPIO 3 18 */
+			"CUST_RES", /* GPIO 3 19 */
+			"nPRESDET", /* GPIO 3 20 */
+			"DO_FAN", /* GPIO 3 21 */
+			"", /* GPIO 3 22 */
+			"", /* GPIO 3 23 */
+			"", /* GPIO 3 24 */
+			"", /* GPIO 3 25 */
+			"", /* GPIO 3 26 */
+			"", /* GPIO 3 27 */
+			"", /* GPIO 3 28 */
+			"", /* GPIO 3 29 */
+			"", /* GPIO 3 30 */
+			""; /* GPIO 3 31 */
+};
+
+&uart0 {
+	/* Debug */
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_pins>;
+};
+
+&uart1 {
+	/* EXT */
+	status = "okay";
+	compatible = "ti,omap3-uart-rtu";
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart1_pins>;
+	rts-gpio = <&gpio1 14 GPIO_ACTIVE_HIGH>;
+	rs485-rts-active-high;
+	linux,rs485-enabled-at-boot-time;
+};
+
+&uart2 {
+	/* KBUS */
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart2_pins>;
+};
+
+&uart3 {
+	/* DALI */
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart3_pins>;
+};
+
+&uart4 {
+	/* RCU */
+	status = "okay";
+	compatible = "ti,omap3-uart-rtu";
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart4_pins>;
+	rts-gpio = <&gpio1 13 GPIO_ACTIVE_HIGH>;
+	rs485-rts-active-high;
+	linux,rs485-enabled-at-boot-time;
+};
+
+&usb {
+	status = "disabled";
+	pinctrl-0 = <&usb0_pins>;
+};
+
+&usb_ctrl_mod {
+	status = "disabled";
+};
+
+&usb0_phy {
+	status = "disabled";
+};
+
+&usb0 {
+	status = "disabled";
+	dr_mode = "peripheral";
+};
+
+&cppi41dma {
+	/* USB-DMA */
+	status = "okay";
+};
+
+&sham {
+	status = "okay";
+};
+
+&aes {
+	status = "okay";
+};
+
+&mmc1 {
+	/* SD-Card */
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&mmc1_pins>;
+	vmmc-supply = <&vmmc_reg>;
+	max-frequency = <26000000>;
+	bus-width = <4>;
+	cd-gpios = <&gpio3 18 GPIO_ACTIVE_HIGH>;
+	wp-gpios = <>;
+};
+
+&mac {
+	pinctrl-names = "default";
+	pinctrl-0 = <&cpsw_default_pins>;
+	pinctrl-1 = <&cpsw_sleep_pins>;
+	status = "okay";
+
+	mac_control = <0x18021>; /* force 100MBit full-duplex */
+	active_slave = <1>;
+};
+
+&bitbang_mdio0 {
+       status = "okay";
+       pinctrl-names = "default", "sleep";
+       pinctrl-0 = <&gpio_bitbang_mdio_pins>;
+       pinctrl-1 = <&gpio_bitbang_mdio_sleep_pins>;
+       gpios = <&gpio0 1 0	/* 0: mdc  */
+	        &gpio0 0 0>;   	/* 1: mdio */
+
+       phy1: ethernet-phy@1 {
+		compatible = "ethernet-phy-ieee802.3-c22";
+		reg = <1>;
+       };
+
+       phy2: ethernet-phy@2 {
+		compatible = "ethernet-phy-ieee802.3-c22";
+		reg = <2>;
+       };
+};
+
+/*
+ * Use a fixed phy for emac1.
+ * that's rgmii2
+ */
+&cpsw_emac1 {
+	phy-mode = "rmii";
+	fixed-link {
+		speed = <100>;
+		full-duplex;
+	};
+};
+
+&phy_sel {
+	rmii-clock-ext;
+};
+
+/include/ "pxc-nandparts.dtsi"
diff --git a/arch/arm/boot/dts/am335x-src-setupfw.dts b/arch/arm/boot/dts/am335x-src-setupfw.dts
new file mode 100644
index 0000000..2486acb
--- /dev/null
+++ b/arch/arm/boot/dts/am335x-src-setupfw.dts
@@ -0,0 +1,61 @@
+/*
+ * Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+/dts-v1/;
+
+#include "am335x-src-2850_311x.dtsi"
+#include "am3xxx-pfc-devconf-desc.dtsi"
+
+/*
+ *
+ *   DEVCONF: 0x000C
+ *
+ *   15  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0
+ *    |   |   |   |   |   |  |  |  |  |  |  |  |  |  |  |
+ *    x   x   x   x   x   x  x  x  x  x  x  x  |  |  x  x
+ *                                             |  |
+ *                                             |  RS232_485
+ *                                             ETHERNET_IP
+ *
+ */
+
+
+/ {
+	target_info {
+		/*
+		 * maybe we should change the drivers name
+		 * to something like "wago,information" ??
+		*/
+		compatible = "wago,testenv";
+
+		board_info {
+			model = "src";
+			id = "2850-311x";
+		};
+
+		led_info {
+			/* conforms to led order on device, see node "pca9552@60".
+			 * we assume, that every led has to colors (red, green).
+			 * so we only allow the colors red,green,orange
+			 */
+			led_array_red = "sys:app";
+		};
+	};
+};
+
+&uart1 {
+	/* uart1 disabled for cmtest gpio test */
+	status = "disabled";
+};
+
+&usb1_phy {
+	status = "okay";
+};
+
+&usb1 {
+	status = "okay";
+};
diff --git a/arch/arm/boot/dts/am3xxx-src-2850_311x-ksz8863.dtsi b/arch/arm/boot/dts/am3xxx-src-2850_311x-ksz8863.dtsi
new file mode 100644
index 0000000..86c2290
--- /dev/null
+++ b/arch/arm/boot/dts/am3xxx-src-2850_311x-ksz8863.dtsi
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+/ {
+	ksz8863: ksz8863 {
+		compatible = "micrel,ksz8863";
+		pinctrl-names = "default";
+		pinctrl-0 = <&ksz8863_pins>;
+		status = "okay";
+
+		ksz,reset-switch;
+		ksz,reset-gpio = <&gpio3 10 GPIO_ACTIVE_LOW>; /*L18 MII1_RX_CLKgpio3[10] / RMII2.EN-PHY */
+		//ksz,disable-internal-ldo;
+		ksz,mii-bus = <&bitbang_mdio0>;
+	};
+
+	swcfg_ksz8863: swcfg_ksz8863 {
+		compatible = "swcfg,ksz8863";
+		status = "okay";
+
+		swcfg,mii-bus = <&bitbang_mdio0>;
+		swcfg,alias = "switch0";
+		swcfg,cpu_port = <2>;
+		swcfg,ports = <3>;
+		swcfg,vlans = <16>;
+	};
+
+	dsa: dsa@0 {
+		compatible = "marvell,dsa";
+		#address-cells = <2>;
+		#size-cells = <0>;
+
+		/* interrupts = <10>; --> not supported from the driver! */
+
+		/* master netdevice (eth0) */
+		dsa,ethernet = <&mac>; /* TODO: should we use 'cpsw_emac1' instead? */
+		dsa,mii-bus = <&bitbang_mdio0>;
+
+		switch@0 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <16 0>;	/* MDIO address 16, switch 0 in tree */
+
+			port@0 {
+				reg = <1>;
+				label = "ethX1"; /* This is X2100 */
+				phy-handle = <&phy1>;
+				phy-pwrdown;
+			};
+
+			port@1 {
+				reg = <2>;
+				label = "ethX2"; /* This is X2102 */
+				phy-handle = <&phy2>;
+				phy-pwrdown;
+			};
+
+			port@2 {
+				reg = <3>;
+				label = "cpu";
+			};
+		};
+	};
+};
diff --git a/arch/arm/boot/dts/wago-src-devconf-000c.dts b/arch/arm/boot/dts/wago-src-devconf-000c.dts
deleted file mode 100644
index cdfc67a..0000000
--- a/arch/arm/boot/dts/wago-src-devconf-000c.dts
+++ /dev/null
@@ -1,24 +0,0 @@
-/*
- * Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
- *
- * This program is free software; you u7 redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-/dts-v1/;
-
-#include "wago-src.dtsi"
-#include "am3xxx-pfc-devconf-desc.dtsi"
-
-/*
- *
- *   DEVCONF: 0x000C
- *
- *   15  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0
- *    |   |   |   |   |   |  |  |  |  |  |  |  |  |  |  |
- *    x   x   x   x   x   x  x  x  x  x  x  x  |  |  x  x
- *                                             |  |
- *                                             |  RS232_485
- *                                             ETHERNET_IP
- *
- */
diff --git a/arch/arm/boot/dts/wago-src-ksz8863.dtsi b/arch/arm/boot/dts/wago-src-ksz8863.dtsi
deleted file mode 100644
index 86c2290..0000000
--- a/arch/arm/boot/dts/wago-src-ksz8863.dtsi
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-
-/ {
-	ksz8863: ksz8863 {
-		compatible = "micrel,ksz8863";
-		pinctrl-names = "default";
-		pinctrl-0 = <&ksz8863_pins>;
-		status = "okay";
-
-		ksz,reset-switch;
-		ksz,reset-gpio = <&gpio3 10 GPIO_ACTIVE_LOW>; /*L18 MII1_RX_CLKgpio3[10] / RMII2.EN-PHY */
-		//ksz,disable-internal-ldo;
-		ksz,mii-bus = <&bitbang_mdio0>;
-	};
-
-	swcfg_ksz8863: swcfg_ksz8863 {
-		compatible = "swcfg,ksz8863";
-		status = "okay";
-
-		swcfg,mii-bus = <&bitbang_mdio0>;
-		swcfg,alias = "switch0";
-		swcfg,cpu_port = <2>;
-		swcfg,ports = <3>;
-		swcfg,vlans = <16>;
-	};
-
-	dsa: dsa@0 {
-		compatible = "marvell,dsa";
-		#address-cells = <2>;
-		#size-cells = <0>;
-
-		/* interrupts = <10>; --> not supported from the driver! */
-
-		/* master netdevice (eth0) */
-		dsa,ethernet = <&mac>; /* TODO: should we use 'cpsw_emac1' instead? */
-		dsa,mii-bus = <&bitbang_mdio0>;
-
-		switch@0 {
-			#address-cells = <1>;
-			#size-cells = <0>;
-			reg = <16 0>;	/* MDIO address 16, switch 0 in tree */
-
-			port@0 {
-				reg = <1>;
-				label = "ethX1"; /* This is X2100 */
-				phy-handle = <&phy1>;
-				phy-pwrdown;
-			};
-
-			port@1 {
-				reg = <2>;
-				label = "ethX2"; /* This is X2102 */
-				phy-handle = <&phy2>;
-				phy-pwrdown;
-			};
-
-			port@2 {
-				reg = <3>;
-				label = "cpu";
-			};
-		};
-	};
-};
diff --git a/arch/arm/boot/dts/wago-src-setupfw.dts b/arch/arm/boot/dts/wago-src-setupfw.dts
deleted file mode 100644
index 3d6ffb5..0000000
--- a/arch/arm/boot/dts/wago-src-setupfw.dts
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-/dts-v1/;
-
-#include "wago-src.dtsi"
-#include "am3xxx-pfc-devconf-desc.dtsi"
-
-/*
- *
- *   DEVCONF: 0x000C
- *
- *   15  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0
- *    |   |   |   |   |   |  |  |  |  |  |  |  |  |  |  |
- *    x   x   x   x   x   x  x  x  x  x  x  x  |  |  x  x
- *                                             |  |
- *                                             |  RS232_485
- *                                             ETHERNET_IP
- *
- */
-
-
-/ {
-	target_info {
-		/*
-		 * maybe we should change the drivers name
-		 * to something like "wago,information" ??
-		*/
-		compatible = "wago,testenv";
-
-		board_info {
-			model = "src";
-			id = "2850-311x";
-		};
-
-		led_info {
-			/* conforms to led order on device, see node "pca9552@60".
-			 * we assume, that every led has to colors (red, green).
-			 * so we only allow the colors red,green,orange
-			 */
-			led_array_red = "sys:app";
-		};
-	};
-};
-
-&uart1 {
-	/* uart1 disabled for cmtest gpio test */
-	status = "disabled";
-};
-
-&usb1_phy {
-	status = "okay";
-};
-
-&usb1 {
-	status = "okay";
-};
diff --git a/arch/arm/boot/dts/wago-src.dtsi b/arch/arm/boot/dts/wago-src.dtsi
deleted file mode 100644
index 664f5007..0000000
--- a/arch/arm/boot/dts/wago-src.dtsi
+++ /dev/null
@@ -1,962 +0,0 @@
-/*
- * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-#include <dt-bindings/interrupt-controller/irq.h>
-#include "am33xx.dtsi"
-#include "wago-src-ksz8863.dtsi"
-
-/* Varianten beim SRC
- *
- * FIXME: alle Varianten ermitteln und auf Abbildbarbeit pruefen (DALI, KNX, ...)
- * SRC	        (Decke-Boden)  : 2ETH, RS232/485
- * SRC-DALI	(Decke-Boden)  : 2ETH, RS232/485, DALI
- *
- * SRC-C	(Schaltschrank): 2ETH, RS232/485
- * SRC-C DALI   (Schaltschrank): 2ETH, RS232/485, DALI
- * SRC-C K-Bus  (Schaltschrank): 2ETH, RS232/485
- *
- */
-
-/ {
-	model = "Wago SRC";
-	compatible = "wago,src", "ti,am33xx";
-
-	cpus {
-		cpu@0 {
-			cpu0-supply = <&vdd1_reg>;
-
-			/*
-			 * To consider voltage drop between PMIC and SoC,
-			 * tolerance value is reduced to 2% from 4% and
-			 * voltage value is increased as a precaution.
-			 */
-			operating-points = <
-				/* kHz    uV */
-				/*1000000  1325000*/
-				/* 800000  1260000*/
-				/* 720000  1200000*/
-				 600000  1100000
-				 300000  950000
-			>;
-		};
-	};
-
-	aliases {
-		mdio-gpio0 = &bitbang_mdio0;
-	};
-
-	memory {
-		device_type = "memory";
-		reg = <0x80000000 0x10000000>; /* 256 MB */
-	};
-
-	vin: regulator@0 {
-		compatible = "regulator-fixed";
-		regulator-name = "v_in";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-	};
-
-	wsysinit_init {
-		compatible = "wago,sysinit";
-		add-sysfs-entries;
-
-		tty,rs232-485 = "ttyO0";
-		/*tty,service   = "ttyO0";*/
-
-		board,variant = "src";
-		/* sysclock adjustments,
-		   empirical values */
-		adjtimex,tick = <10000>;
-		adjtimex,frequency = <2000000>;
-	};
-
-	/*
-	   this name of the gpio-keys device is a
-	   historical heritage from 3.6.11 kernel.
-	   the device-name is checked in omsd. So we
-	   need to adapt this configuration
-	*/
-	oms: PAC-Operating-Mode-Switch {
-		compatible = "gpio-keys";
-		#address-cells = <1>;
-		#size-cells = <0>;
-		autorepeat;
-
-		reset_all {
-			label = "RESET_ALL";
-			gpios = <&gpio3 19 GPIO_ACTIVE_HIGH>; /* BAS_RESET_ALL GPIO 83 */
-			linux,code = <4>;
-			linux,input-type = <1>;  /* EV_KEY */
-			debounce-interval = <1>; /* debounce ticks interval in msecs */
-		};
-
-		knx {
-			label = "KNX";
-			gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
-			linux,code = <5>;
-			linux,input-type = <1>;  /* EV_KEY */
-			debounce-interval = <1>; /* debounce ticks interval in msecs */
-		};
-
-	};
-
-	/* LEDs DS and APP. Red color leds are driven by pwm to be able to
-	 * compensate temperature dependent yellow color.
-	 */
-	leds {
-		compatible = "gpio-leds";
-
-		pinctrl-names = "default";
-		pinctrl-0 = <&led_pins>;
-
-		app-green {
-			gpios=<&gpio2 24 GPIO_ACTIVE_HIGH>;
-			default-state="off";
-		};
-
-		ds-green {
-			gpios=<&gpio2 23 GPIO_ACTIVE_HIGH>;
-			default-state="on";
-		};
-	};
-
-	pwmleds {
-		compatible = "pwm-leds";
-
-		add-red {
-			label = "app-red";
-			pwms = <&ehrpwm2 0 50000 0>;
-			max-brightness = <255>;
-		};
-
-		ds-red {
-			label = "ds-red";
-			pwms = <&ehrpwm2 1 50000 0>;
-			max-brightness = <255>;
-			linux,default-trigger = "default-on";
-		};
-	};
-
-	/* X12 AO1 */
-	iocnt0: omap-iocnt {
-		compatible = "ti,omap-iocnt";
-		ti,timers = <&timer3>;
-	};
-
-};
-
-&ksz8863 {
-	ksz,disable-internal-ldo;
-};
-
-&elm {
-	status = "okay";
-};
-
-&gpmc {
-	pinctrl-names = "default";
-	pinctrl-0 = <&gpmc_pins>;
-
-	num-cs = <1>;
-	num-waitpins = <1>;
-	status = "okay";
-	ranges = <
-		0 0 0x08000000 0x01000000	/* CS0: NAND */
-	>;
-
-	nand: nand@0,0 {
-		compatible = "ti,omap2-nand";
-		reg = <0 0 4>; /* CS0, offset 0, IO size 4 */
-		nand-bus-width = <8>;
-		ti,nand-ecc-opt = "bch8";
-		gpmc,device-nand = "true";
-		gpmc,device-width = <1>;
-		gpmc,sync-clk-ps = <0>;
-		gpmc,cs-on-ns = <0>;
-		gpmc,cs-rd-off-ns = <44>;
-		gpmc,cs-wr-off-ns = <44>;
-		gpmc,adv-on-ns = <6>;
-		gpmc,adv-rd-off-ns = <34>;
-		gpmc,adv-wr-off-ns = <44>;
-		gpmc,we-on-ns = <0>;
-		gpmc,we-off-ns = <40>;
-		gpmc,oe-on-ns = <0>;
-		gpmc,oe-off-ns = <54>;
-		gpmc,access-ns = <64>;
-		gpmc,rd-cycle-ns = <82>;
-		gpmc,wr-cycle-ns = <82>;
-		gpmc,wait-pin = <0>;
-		gpmc,wait-on-read;
-		gpmc,wait-on-write;
-		gpmc,bus-turnaround-ns = <0>;
-		gpmc,cycle2cycle-delay-ns = <0>;
-		gpmc,clk-activation-ns = <0>;
-		gpmc,wait-monitoring-ns = <0>;
-		gpmc,wr-access-ns = <40>;
-		gpmc,wr-data-mux-bus-ns = <0>;
-
-		#address-cells = <1>;
-		#size-cells = <1>;
-		ti,elm-id = <&elm>;
-	};
-};
-&am33xx_pinmux {
-	pinctrl-names = "default";
-        pinctrl-0 = <&gpio0_pins>;
-
-	gpio0_pins: pinmux_gpio0_pins {
-		pinctrl-single,pins = <
-			0x028 ( MUX_MODE7 | PIN_OUTPUT		) /* T11 GPMC_AD10		7   GPIO0_26->DO-RS->digital_Relay_output */
-			0x02c ( MUX_MODE7 | PIN_OUTPUT		) /* U12 GPMC_AD11		7   GPIO0_27->nRES_MOD->nRST_MOD->Card_Reset_or_Standby  */
-			0x0d0 ( MUX_MODE7 | PIN_INPUT		) /* V2 LCD_DATA12		7   GPIO0_8->SYSBOOT12*/
-			0x0d4 ( MUX_MODE7 | PIN_INPUT		) /* V3 LCD_DATA13		7   GPIO0_9->SYSBOOT13*/
-			0x0d8 ( MUX_MODE7 | PIN_INPUT		) /* V4 LCD_DATA14		7   GPIO0_10->SYSBOOT14*/
-			0x0dc ( MUX_MODE7 | PIN_INPUT		) /* T5 LCD_DATA15		7   GPIO0_11->SYSBOOT15*/
-			0x124 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* K16 GMII1_TXD1		7   GPIO0_21->KBUS-nRDY */
-			0x128 ( MUX_MODE7 | PIN_INPUT_PULLUP 	) /* K17 GMII1_TXD0		7   GPIO0_28->KBUS-CMDSEL */
-			0x178 ( MUX_MODE7 | PIN_OUTPUT		) /* D18 UART1_CTSN		7   GPIO0_12->DO_CPU_HLK1 */
-			0x17c ( MUX_MODE7 | PIN_OUTPUT		) /* D17 UART1_RTSN		7   GPIO0_13->DO_CPU_HLK2 */
-			0x1b4 ( MUX_MODE2 | PIN_INPUT		) /* D14 XDMA_EVENT_INTR1       2   tclkin->CNT-FAN->Counter_input */
-		>;
-	};
-
-	gpio1_pins: pinmux_gpio1_pins {
-		pinctrl-single,pins = <
-			0x030 ( MUX_MODE7 | PIN_OUTPUT		) /* T12 GPMC_AD12		7   GPIO1_12->EN-V-SENSOR->Sensor_supply */
-			0x034 ( MUX_MODE7 | PIN_OUTPUT		) /* R12 GPMC_AD13		7   GPIO1_13->RCU_DE */
-			0x038 ( MUX_MODE7 | PIN_OUTPUT		) /* V13 GPMC_AD14		7   GPIO1_14->UART1_DE */
-			0x03c ( MUX_MODE7 | PIN_INPUT		) /* U13 GPMC_AD15		7   GPIO1_15->nERR-V-FUSED->Over_Current_detection */
-			0x044 ( MUX_MODE7 | PIN_OUTPUT		) /* V14 GPMC_A1		7   GPIO1_17->nRST_DALI->DALI_reset */
-			0x05c ( MUX_MODE7 | PIN_OUTPUT		) /* T15 GPMC_A7		7   GPIO1_23->UART_DIR_MOD*/
-			0x060 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* V16 GPMC_A8		7   GPIO1_24->nINT_MOD->Card_interrupt_request */
-			0x064 ( MUX_MODE7 | PIN_INPUT		) /* U16 GPMC_A9		7   GPIO1_25->nINT_EXT*/
-			0x080 ( MUX_MODE7 | PIN_OUTPUT		) /* U9 GPMC_CSN1		7   GPIO1_30->nBOOT_END->Boot_process_end */
-			0x16c ( MUX_MODE7 | PIN_OUTPUT_PULLUP	) /* E17 UART0_RTSN		7   GPIO1_9->LED-K-BUS-G */
-			0x084 ( MUX_MODE7 | PIN_OUTPUT_PULLUP 	) /* V9 GPMC_CSN2		7   GPIO1_31->LED-K-BUS-R */
-		>;
-	};
-
-	gpio2_pins: pinmux_gpio2_pins {
-		pinctrl-single,pins = <
-			0x08c ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* V12 GPMC_CLK		7   GPIO2_1->nINT-RTC->RTC_Interrupt */
-			0x0a0 ( MUX_MODE7 | PIN_INPUT		) /* R1 LCD_DATA0		7   GPIO2_6->SYSBOOT0*/
-			0x0a4 ( MUX_MODE7 | PIN_INPUT		) /* R2 LCD_DATA1		7   GPIO2_7->SYSBOOT1*/
-			0x0a8 ( MUX_MODE7 | PIN_INPUT		) /* R3 LCD_DATA2		7   GPIO2_8->SYSBOOT2*/
-			0x0ac ( MUX_MODE7 | PIN_INPUT		) /* R4 LCD_DATA3		7   GPIO2_9->SYSBOOT3*/
-			0x0b0 ( MUX_MODE7 | PIN_INPUT		) /* T1 LCD_DATA4		7   GPIO2_10->SYSBOOT4*/
-			0x0b4 ( MUX_MODE7 | PIN_INPUT		) /* T2 LCD_DATA5		7   GPIO2_11->SYSBOOT5*/
-			0x0b8 ( MUX_MODE7 | PIN_INPUT		) /* T3 LCD_DATA6		7   GPIO2_12->ERRST6*/
-			0x0bc ( MUX_MODE7 | PIN_INPUT		) /* T4 LCD_DATA7		7   GPIO2_13->ERRST7*/
-			0x0c0 ( MUX_MODE7 | PIN_INPUT		) /* U1 LCD_DATA8		7   GPIO2_14->ERRST8*/
-			0x0c4 ( MUX_MODE7 | PIN_INPUT		) /* U2 LCD_DATA9		7   GPIO2_15->ERRST9*/
-			0x0ec ( MUX_MODE7 | PIN_OUTPUT		) /* R6 LCD_AC_BIAS_EN		7   GPIO2_25->EN-V-FUSED->Switch_UI */
-			0x134 ( MUX_MODE7 | PIN_OUTPUT		) /* L17 MII1_RXD3		7   GPIO2_18->UO-HLK1->1._universal_HLK_output */
-			0x138 ( MUX_MODE7 | PIN_OUTPUT		) /* L16 MII1_RXD2		7   GPIO2_19->UO-HLK2->2._universal_HLK_output */
-			0x140 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* M16 GMII1_RXD0		7   GPIO2_21->KBUS-nIRQ */
-			//0x0e0 ( MUX_MODE7 | PIN_INPUT		  ) /* U5 LCD_VSYNC		  7   GPIO2_22->nINT-DALI->Interrupt_request_from_DALI */
-		>;
-	};
-
-	gpio3_pins: pinmux_gpio3_pins {
-		pinctrl-single,pins = <
-			0x114 ( MUX_MODE7 | PIN_OUTPUT_PULLUP	) /* J16 GMII1_TXEN		7   GPIO3_3->KBUS-nSYNC */
-			0x118 ( MUX_MODE7 | PIN_OUTPUT_PULLUP 	) /* J17 GMII1_RXDV		7   GPIO3_4->KBUS-nRST */
-			0x12c ( MUX_MODE7 | PIN_OUTPUT		) /* K18 MII1_TX_CLK		7   GPIO3_9->DO-PI->digital_PI_output */
-			0x1a0 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* B12 MCASP0_ACLKR		7   GPIO3_18->MMC0_nCD->SD_card_detect */
-			0x1a4 ( MUX_MODE7 | PIN_INPUT_PULLDOWN	) /* C13 MCASP0_FSR		7   GPIO3_19->CUST_RES->Customer_reset */
-			0x1a8 ( MUX_MODE7 | PIN_INPUT_PULLUP	) /* D13 MCASP0_AXR1		7   GPIO3_20->nPRESDET->Card_detect */
-			0x1ac ( MUX_MODE7 | PIN_OUTPUT		) /* A14 MCASP0_AHCLKX		7   GPIO3_21->DO-FAN->digital_FAN_output */
-			//0x1e4 ( MUX_MODE0 | PIN_INPUT		) /* C14 EMU0			0   EMU0 */
-			//0x1e8 ( MUX_MODE0 | PIN_INPUT		) /* B14 EMU1			0   EMU1 */
-			0x234 ( MUX_MODE7 | PIN_INPUT_PULLDOWN	) /* F15 USB1_DRVVBUS		7   GPIO3_13->KNX-SW->Application_Switch */
-		>;
-	};
-
-	uart0_pins: pinmux_uart0_pins {
-		pinctrl-single,pins = <
-			0x170 ( MUX_MODE0 | PIN_INPUT		) /* E15 UART0_RXD		0   UART0_RXD->DEBUG_RXD */
-			0x174 ( MUX_MODE0 | PIN_OUTPUT		) /* E16 UART0_TXD		0   UART0_TXD->DEBUG_TXD */
-		>;
-	};
-
-	uart1_pins: pinmux_uart1_pins {
-		pinctrl-single,pins = <
-			0x180 ( MUX_MODE0 | PIN_INPUT		) /* D16 UART1_RXD		0   UART1_RXD */
-			0x184 ( MUX_MODE0 | PIN_OUTPUT		) /* D15 UART1_TXD		0   UART1_TXD */
-		>;
-	};
-
-	uart2_pins: pinmux_uart2_pins {
-		pinctrl-single,pins = <
-			0x10c ( MUX_MODE6 | PIN_INPUT		) /* H17 GMII1_CRS		6   UART2_RXD */
-			0x110 ( MUX_MODE6 | PIN_OUTPUT 		) /* J15 GMII1_RXER		6   UART2_TXD */
-		>;
-	};
-
-	uart3_pins: pinmux_uart3_pins {
-		pinctrl-single,pins = <
-			0x0c8 ( MUX_MODE6 | PIN_INPUT		) /* U3 LCD_DATA10		6   UART3_CTS->DALI_clear_to_send */
-			0x0cc ( MUX_MODE6 | PIN_INPUT		) /* U4 LCD_DATA11		6   UART3_RTS->DALI_request_to_send */
-			0x160 ( MUX_MODE1 | PIN_INPUT		) /* C15 SPI0_CS1		1   UART3_RXD->DALI_receive_data */
-			0x164 ( MUX_MODE1 | PIN_OUTPUT		) /* C18 ECAP0_IN_PWM0_OUT	1   UART3_TXD->DALI_transmit_data */
-		>;
-	};
-
-	uart4_pins: pinmux_uart4_pins {
-		pinctrl-single,pins = <
-			0x11c ( MUX_MODE3 | PIN_INPUT		) /* J18 MII1_TXD3		3   RCU_B-	*/
-			0x120 ( MUX_MODE3 | PIN_OUTPUT		) /* K15 MII1_TXD2		3   RCU_A+	*/
-		>;
-	};
-
-	led_pins: pinmux_led_pins {
-		pinctrl-single,pins = <
-			0x0e4 ( MUX_MODE7 | PIN_OUTPUT		) /* R5 LCD_HSYNC		7   GPIO2_23->Status_LED_green  */
-			0x0e8 ( MUX_MODE7 | PIN_OUTPUT		) /* V5 LCD_PCLK		7   GPIO2_24->Application_LED_green  */
-			//0x084 ( MUX_MODE7 | PIN_OUTPUT	) /* V9 GPMC_CSN2		7   GPIO1_31->K-BUS_LED_red */
-			//0x16c ( MUX_MODE7 | PIN_OUTPUT	) /* E17 UART0_RTSn		7   GPIO1_9->K-BUS_LED_green */
-		>;
-	};
-
-	pwm_led_pins: pinmux_pwm_led_pins {
-		pinctrl-single,pins = <
-			0x020 ( MUX_MODE4 | PIN_OUTPUT		) /* U10 GPMC_AD8		4   EHRPWM2A->Application_LED_red  */
-			0x024 ( MUX_MODE4 | PIN_OUTPUT		) /* T10 GPMC_AD9		4   EHRPWM2B->Status_LED_red  */
-		>;
-	};
-
-	ao_pins: pinmux_ao_pins {
-		pinctrl-single,pins = <
-			0x194 ( MUX_MODE1 | PIN_OUTPUT_PULLDOWN	) /* B13 MCASP0_FSX		1   EHRPWM0B->AO_PWM_FAN */
-		>;
-	};
-
-	uo_pins: pinmux_uo_pins {
-		pinctrl-single,pins = <
-			0x048 ( MUX_MODE6 | PIN_OUTPUT_PULLDOWN	) /* U14 GPMC_A2		6   EHRPWM1A->UO_PWM_HLK1 */
-			0x04c ( MUX_MODE6 | PIN_OUTPUT_PULLDOWN	) /* T14 GPMC_A3		6   EHRPWM1B->UO_PWM_HLK2 */
-		>;
-	};
-
-	i2c0_pins: pinmux_i2c0_pins {
-		pinctrl-single,pins = <
-			0x188 ( MUX_MODE0 | PIN_INPUT | SLEWCTRL_SLOW ) /* C17 I2C0_SDA		0   I2C0_SDA  */
-			0x18c ( MUX_MODE0 | PIN_INPUT | SLEWCTRL_SLOW ) /* C16 I2C0_SCL		0   I2C0_SCL  */
-		>;
-	};
-
-	spi0_pins: pinmux_spi0_pins {
-		pinctrl-single,pins = <
-			0x150 ( MUX_MODE0 | PIN_INPUT		) /* A17 SPI0_SCLK		0   SPI0_SCLK */
-			0x154 ( MUX_MODE0 | PIN_INPUT		) /* B17 SPI0_D0		0   SPI0_MISO */
-			0x158 ( MUX_MODE0 | PIN_OUTPUT		) /* B16 SPI0_D1		0   SPI0_MOSI */
-			0x15c ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* A16 SPI0_CS0		0   SPI0_CS0  */
-		>;
-	};
-
-	spi1_pins: pinmux_spi1_pins {
-		pinctrl-single,pins = <
-			0x168 ( MUX_MODE4 | PIN_INPUT_PULLDOWN	) /* E18 UART0_CTSN		4   SPI1_D0->SPI1_MISO */
-			0x190 ( MUX_MODE3 | PIN_INPUT		) /* A13 MCASP0_ACLKX		3   SPI1_SCLK->Serial_clock */
-			0x198 ( MUX_MODE3 | PIN_OUTPUT		) /* D12 MCASP0_AXR0		3   SPI1_D1->SPI1_MOSI */
-			0x1b0 ( MUX_MODE4 | PIN_OUTPUT		) /* A15 XDMA_EVENT_INTR0	4   SPI1_nCS1->Chip_select_dali */
-			0x19c ( MUX_MODE3 | PIN_OUTPUT		) /* C12 MCASP0_AHCLKR		3   SPI1_nCS0->Chip_select_kbus */
-		>;
-	};
-
-	usb0_pins: pinmux_usb0_pins {
-		pinctrl-single,pins = <
-			0x208 ( MUX_MODE0 | PIN_INPUT		) /* N18 USB0_DM		0   USB0_DM->Negative_data   */
-			0x20c ( MUX_MODE0 | PIN_INPUT		) /* N17 USB0_DP		0   USB0_DP->Positive_data   */
-			0x214 ( MUX_MODE0 | PIN_INPUT		) /* P16 USB0_ID		0   USB0_ID */
-			0x218 ( MUX_MODE0 | PIN_INPUT		) /* P15 USB0_VBUS		0   USB0_VBUS->USB_detect */
-			0x21c ( MUX_MODE0 | PIN_OUTPUT		) /* F16 USB0_DRVVBUS		0   GPIO0_18->USB0_DRVVBUS  */
-		>;
-	};
-
-	mmc1_pins: pinmux_mmc1_pins {
-		pinctrl-single,pins = <
-			0x0f0 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* F17 MMC0_DAT3		0   MMC0_D3   */
-			0x0f4 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* F18 MMC0_DAT2		0   MMC0_D2   */
-			0x0f8 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G15 MMC0_DAT1		0   MMC0_D1   */
-			0x0fc ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G16 MMC0_DAT0		0   MMC0_D0   */
-			0x100 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G17 MMC0_CLK		0   MMC0_CLK  */
-			0x104 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* G18 MMC0_CMD		0   MMC0_CMD  */
-		>;
-	};
-
-	gpmc_pins: pinmux_gpmc_pins {
-		pinctrl-single,pins = <
-			/* NV Memory NAND-Flash */
-			0x000 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* U7 GPMC_AD0		0   GPMC_AD0 	*/
-			0x004 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* V7 GPMC_AD1		0   GPMC_AD1 	*/
-			0x008 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* R8 GPMC_AD2		0   GPMC_AD2 	*/
-			0x00c ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* T8 GPMC_AD3		0   GPMC_AD3 	*/
-			0x010 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* U8 GPMC_AD4		0   GPMC_AD4 	*/
-			0x014 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* V8 GPMC_AD5		0   GPMC_AD5 	*/
-			0x018 ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* R9 GPMC_AD6		0   GPMC_AD6 	*/
-			0x01c ( MUX_MODE0 | PIN_INPUT_PULLDOWN	) /* T9 GPMC_AD7		0   GPMC_AD7 	*/
-			0x070 ( MUX_MODE0 | PIN_INPUT_PULLUP	) /* T17 GPMC_WAIT0		0   GPMC_WAIT0	  */
-			0x07c ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* V6 GPMC_CSN0		0   GPMC_CSN0	   */
-			0x090 ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* R7 GPMC_ADVN_ALE		0   GPMC_ADVn_ALE   */
-			0x094 ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* T7 GPMC_OEN_REN		0   GPMC_OEn_REn */
-			0x098 ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* U6 GPMC_WEN		0   GPMC_WEn	*/
-			0x09c ( MUX_MODE0 | PIN_OUTPUT_PULLUP	) /* T6 GPMC_BEN0_CLE		0   GPMC_BE0n_cle   */
-		>;
-	};
-
-
-	ksz8863_pins: pinmux_ksz8863_pins {
-		pinctrl-single,pins = <
-			0x130 (PIN_OUTPUT_PULLUP | MUX_MODE7) /* L18 MII1_RX_CLK      7 GPIO3_10->EN-PHY->Enable_Switch */
-			0x078 (MUX_MODE7 | PIN_INPUT_PULLUP)  /* U18 GPMC_BEN1        7 GPIO1_28->nINT-PHY->Switch Interrupt */
-		>;
-	};
-
-	cpsw_default_pins: pinmux_cpsw_default_pins {// RMII2 Ethernet Switch
-		pinctrl-single,pins = <
-			0x040 (PIN_OUTPUT_PULLDOWN 	| SLEWCTRL_FAST	| MUX_MODE3) 	/* gpmc_a0.rmii2_txen */		//r13
-			0x050 (PIN_OUTPUT_PULLDOWN 	| SLEWCTRL_FAST	| MUX_MODE3) 	/* gpmc_a4.rmii2_txd1 */		//r14
-			0x054 (PIN_OUTPUT_PULLDOWN 	| SLEWCTRL_FAST	| MUX_MODE3) 	/* gpmc_a5.rmii2_txd0 */		//v15
-			0x068 (PIN_INPUT_PULLDOWN 	| MUX_MODE3)  	/* gpmc_a10.rmii2_rxd1 */		//t16
-			0x06C (PIN_INPUT_PULLDOWN 	| MUX_MODE3)  	/* gpmc_a11.rmii2_rxd0 */		//v17
-			0x074 (PIN_INPUT_PULLDOWN 	| MUX_MODE3)  	/* gpmc_wpn.rmii2_rxer */		//u17
-			0x108 (PIN_INPUT_PULLDOWN 	| MUX_MODE1)  	/* mii1_col.rmii2_refclk */		//h16
-			0x088 (PIN_INPUT          	| MUX_MODE2)  	/* gpmc_csn3.rmii2_crs_dv */	//t13
-		>;
-	};
-
-	cpsw_sleep_pins: pinmux_cpsw_sleep_pins {
-		pinctrl-single,pins = <
-			0x040 (PIN_INPUT_PULLDOWN 	| MUX_MODE7) 	/* gpmc_a0.gpio1_16 */			//r13
-			0x050 (PIN_INPUT_PULLDOWN 	| MUX_MODE7) 	/* gpmc_a4.gpio1_20 */			//r14
-			0x054 (PIN_INPUT_PULLDOWN 	| MUX_MODE7) 	/* gpmc_a5.gpio1_21 */			//v15
-			0x068 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_a10.gpio1_26 */			//t16
-			0x06C (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_a11.gpio1_27 */			//v17
-			0x074 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_wpn.gpio0_31 */			//u17
-			0x108 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* mii1_col.gpio3_0 */			//h16
-			0x088 (PIN_INPUT_PULLDOWN 	| MUX_MODE7)  	/* gpmc_csn3.gpio2_0 */			//t13
-		>;
-	};
-
-	gpio_bitbang_mdio_pins: pinmux_gpio_bitbang_mdio_pins {
-		pinctrl-single,pins = <
-			/* MDIO */
-			0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE7)	/* M17: mdio.gpio0_0 (mdio_data), SLEWCTRL_FAST?? */
-			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE7)			/* M18:  mdc.gpio0_1 (mdio_clk)                   */
-		>;
-	};
-
-	gpio_bitbang_mdio_sleep_pins: pinmux_gpio_bitbang_mdio_sleep_pins {
-		pinctrl-single,pins = <
-			/* MDIO reset value */
-			0x148 (PIN_INPUT_PULLUP 	| MUX_MODE7)	/* mdio.gpio0_0 */				//m17
-			0x14c (PIN_INPUT_PULLDOWN 	| MUX_MODE7)	/* mdc.gpio0_1   */				//m18
-		>;
-	};
-
-};
-
-&edma {
-	ti,edma-xbar-event-map = /bits/ 16 <32 12>;
-};
-
-&spi0 {
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&spi0_pins>;
-
-	// FRAM - FM25CL64B-G
-	at25@0 {
-		compatible = "atmel,at25", "st,m95256";
-		spi-max-frequency = <10000000>;
-		spi-cpha;
-		spi-cpol;
-		reg = <0>;
-		pagesize = <8>;
-		size = <8192>;
-		address-width = <16>;
-	};
-};
-
-&spi1 {
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&spi1_pins>;
-	num-cs = <2>;
-
-	// KBUS Spidev
-	spi2_0: spidev@0 {
-		compatible = "wago,srckbus";
-		reg = <0>;
-		spi-max-frequency = <10000000>;
-	};
-
-	/* ATmega ISP */
-	spi2_1: spidev@0 {
-		compatible = "wago,wds";
-		reg = <1>;
-		spi-max-frequency = <10000000>;
-	};
-};
-
-&i2c0 {
-	status = "okay";
-	clock-frequency = <400000>;
-	pinctrl-names = "default";
-	pinctrl-0 = <&i2c0_pins>;
-
-	/* EEPROM */
-	eeprom: at24c32 { //AT24C32-SSHD
-			compatible = "atmel,24c512";
-			reg = <0x54>;
-			pagesize = <128>;
-	};
-
-	/* PMIC */
-	tps: tps65910@2d {
-		compatible = "ti,tps65910";
-		reg = <0x2d>;
-		export-enable2-regs-to-sysfs;
-	};
-
-	/* ADC */
-	mcp3428: mcp3428@68 {
-		compatible = "microchip,mcp3428";
-		reg = <0x68>;
-		status = "okay";
-	};
-
-	/* RTC */
-	rtc_r2221t {
-		compatible = "ricoh,r2221tl";
-		reg = <0x32>;
-
-		interrupt-parent = <&gpio2>;
-		interrupts = <1 IRQ_TYPE_LEVEL_LOW>;
-                trim-data = <0 0 13>;
-	};
-
-	/* CARD-Port-Expander */
-	/*pca9554pw { // Erweiterungsmodul / Einsteckkarte z.B. EnOcean-Modul
-		compatible = "nxp,pca9554";
-		reg = <0x20>;
-	};*/
-
-};
-
-#include "tps65910.dtsi"
-
-&tps {
-	vcc1-supply = <&vin>;
-	vcc2-supply = <&vin>;
-	vcc3-supply = <&vin>;
-	vcc4-supply = <&vin>;
-	vcc5-supply = <&vin>;
-	vcc6-supply = <&vin>;
-	vcc7-supply = <&vin>;
-	vccio-supply = <&vin>;
-
-	regulators {
-		vrtc_reg: regulator@0 {
-			regolator-always-on;
-		};
-
-		vio_reg: regulator@1 { // V_DDR+1V5
-			regulator-name = "v_ddr";
-			regulator-min-microvolt = <1500000>;
-			regulator-max-microvolt = <1500000>;
-			regulator-always-on;
-			regulator-boot-on;
-		};
-
-		vdd1_reg: regulator@2 { // V_MPU+1V1
-			regulator-name = "v_mpu";
-			regulator-min-microvolt = < 600000>;
-			regulator-max-microvolt = <1500000>;
-			regulator-boot-on;
-			regulator-always-on;
-		};
-
-		vdd2_reg: regulator@3 { //V_CORE +1V1
-			regulator-name = "v_core";
-			regulator-min-microvolt = < 600000>;
-			regulator-max-microvolt = <1500000>;
-			regulator-boot-on;
-			regulator-always-on;
-		};
-
-		vdig1_reg: regulator@5 { // V_ADC+1V8
-			regulator-name = "v_adc";
-			regulator-min-microvolt = <1800000>;
-			regulator-max-microvolt = <1800000>;
-			regulator-boot-on;
-			regulator-always-on;
-		};
-
-		vdig2_reg: regulator@6 { // V_PLL+1V8
-			regulator-name = "v_pll";
-			regulator-min-microvolt = <1800000>;
-			regulator-max-microvolt = <1800000>;
-			regulator-boot-on;
-			regulator-always-on;
-		};
-
-		vmmc_reg: regulator@12 { //V1_IO
-			regulator-name = "v_io";
-			regulator-min-microvolt = <3300000>;
-			regulator-max-microvolt = <3300000>;
-			regulator-always-on;
-			regulator-boot-on;
-		};
-	};
-};
-
-&tscadc {
-	status = "okay";
-
-	adc {
-		/* AIN0 Temp. Setpoint
-		   AIN1 DI1
-		   AIN2 DI2
-		   AIN3 DI3
-		   AIN4 DI4
-		   AIN5 UI1
-		   AIN6 UI2
-		   AIN7 U/I Measure
-		*/
-		ti,adc-channels = <0 1 2 3 4 5 6 7>;
-		ti,chan-step-opendelay = <0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00>;
-		ti,chan-step-sampledelay = <0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00>;
-		ti,chan-step-avg = <16 16 16 16 16 16 16 16>;
-	};
-};
-
-/* AO PWM */
-&epwmss0 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&ao_pins>;
-	status = "okay";
-};
-&ehrpwm0 {
-	status = "okay";
-};
-
-/* UO0/UO1 PWM */
-&epwmss1 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&uo_pins>;
-	status = "okay";
-};
-&ehrpwm1 {
-	status = "okay";
-};
-
-/* Red APP/DS LED PWM */
-&epwmss2 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pwm_led_pins>;
-	status = "okay";
-};
-&ehrpwm2 {
-	status = "okay";
-};
-
-&timer3 { /* X12 / CountIN */
-	status = "okay";
-};
-
-&gpio0 {
-	gpio-line-names = "MDIO_DATA", /* GPIO 0  0 */
-			"MDIO_CLK", /* GPIO 0  1 */
-			"", /* GPIO 0  2 */
-			"", /* GPIO 0  3 */
-			"", /* GPIO 0  4 */
-			"", /* GPIO 0  5 */
-			"", /* GPIO 0  6 */
-			"", /* GPIO 0  7 */
-			"SYSBOOT12", /* GPIO 0  8 */
-			"SYSBOOT13", /* GPIO 0  9 */
-			"SYSBOOT14", /* GPIO 0 10 */
-			"SYSBOOT15", /* GPIO 0 11 */
-			"DO_CPU_HLK1", /* GPIO 0 12 */
-			"DO_CPU_HLK2", /* GPIO 0 13 */
-			"", /* GPIO 0 14 */
-			"", /* GPIO 0 15 */
-			"", /* GPIO 0 16 */
-			"", /* GPIO 0 17 */
-			"", /* GPIO 0 18 */
-			"", /* GPIO 0 19 */
-			"", /* GPIO 0 20 */
-			"KBUS_nRDY", /* GPIO 0 21 */
-			"", /* GPIO 0 22 */
-			"", /* GPIO 0 23 */
-			"", /* GPIO 0 24 */
-			"", /* GPIO 0 25 */
-			"DO_RS", /* GPIO 0 26 */
-			"nRES_MOD", /* GPIO 0 27 */
-			"KBUS_CMDSEL", /* GPIO 0 28 */
-			"", /* GPIO 0 29 */
-			"", /* GPIO 0 30 */
-			""; /* GPIO 0 31 */
-};
-
-&gpio1 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&gpio1_pins>;
-
-	gpio-line-names = "", /* GPIO 1  0 */
-			"", /* GPIO 1  1 */
-			"", /* GPIO 1  2 */
-			"", /* GPIO 1  3 */
-			"", /* GPIO 1  4 */
-			"", /* GPIO 1  5 */
-			"", /* GPIO 1  6 */
-			"", /* GPIO 1  7 */
-			"", /* GPIO 1  8 */
-			"LED_K_BUS_G", /* GPIO 1  9 */
-			"", /* GPIO 1 10 */
-			"", /* GPIO 1 11 */
-			"EN_V_SENSOR", /* GPIO 1 12 */
-			"UART4_DE", /* GPIO 1 13 */
-			"UART1_DE", /* GPIO 1 14 */
-			"Over_Current_Detection", /* GPIO 1 15 */
-			"", /* GPIO 1 16 */
-			"nRST_DALI", /* GPIO 1 17 */
-			"", /* GPIO 1 18 */
-			"", /* GPIO 1 19 */
-			"", /* GPIO 1 20 */
-			"", /* GPIO 1 21 */
-			"", /* GPIO 1 22 */
-			"UART_DIR_MOD", /* GPIO 1 23 */
-			"nINT_MOD", /* GPIO 1 24 */
-			"nINT_EXT", /* GPIO 1 25 */
-			"", /* GPIO 1 26 */
-			"", /* GPIO 1 27 */
-			"nINT_PHY", /* GPIO 1 28 */
-			"", /* GPIO 1 29 */
-			"nBOOT_END", /* GPIO 1 30 */
-			"LED_K_BUS_R"; /* GPIO 1 31 */
-
-	/* Set VOUT/Sensor 24V permanently to high */
-	vout {
-		gpio-hog;
-		gpios = <12 0>;
-		output-high;
-		line-name = "vout";
-	};
-};
-
-&gpio2 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&gpio2_pins>;
-
-	gpio-line-names = "", /* GPIO 2  0 */
-			"nINT_RTC", /* GPIO 2  1 */
-			"", /* GPIO 2  2 */
-			"", /* GPIO 2  3 */
-			"", /* GPIO 2  4 */
-			"", /* GPIO 2  5 */
-			"SYSBOOT0", /* GPIO 2  6 */
-			"SYSBOOT1", /* GPIO 2  7 */
-			"SYSBOOT2", /* GPIO 2  8 */
-			"SYSBOOT3", /* GPIO 2  9 */
-			"SYSBOOT4", /* GPIO 2 10 */
-			"SYSBOOT5", /* GPIO 2 11 */
-			"ERRST6", /* GPIO 2 12 */
-			"ERRST7", /* GPIO 2 13 */
-			"ERRST8", /* GPIO 2 14 */
-			"ERRST9", /* GPIO 2 15 */
-			"", /* GPIO 2 16 */
-			"", /* GPIO 2 17 */
-			"UO_HLK1", /* GPIO 2 18 */
-			"UO_HLK2", /* GPIO 2 19 */
-			"", /* GPIO 2 20 */
-			"KBUS_nIRQ", /* GPIO 2 21 */
-			"", /* GPIO 2 22 */
-			"LED_DS_G", /* GPIO 2 23 */
-			"LED_APP_G", /* GPIO 2 24 */
-			"SWITCH_UI", /* GPIO 2 25 */
-			"", /* GPIO 2 26 */
-			"", /* GPIO 2 27 */
-			"", /* GPIO 2 28 */
-			"", /* GPIO 2 29 */
-			"", /* GPIO 2 30 */
-			""; /* GPIO 2 31 */
-};
-
-&gpio3 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&gpio3_pins>;
-
-	gpio-line-names = "", /* GPIO 3  0 */
-			"", /* GPIO 3  1 */
-			"", /* GPIO 3  2 */
-			"KBUS_nSYNC", /* GPIO 3  3 */
-			"KBUS_nRST", /* GPIO 3  4 */
-			"", /* GPIO 3  5 */
-			"", /* GPIO 3  6 */
-			"", /* GPIO 3  7 */
-			"", /* GPIO 3  8 */
-			"DO_PI", /* GPIO 3  9 */
-			"EN_PHY", /* GPIO 3 10 */
-			"", /* GPIO 3 11 */
-			"", /* GPIO 3 12 */
-			"KNX_SW", /* GPIO 3 13 */
-			"", /* GPIO 3 14 */
-			"", /* GPIO 3 15 */
-			"", /* GPIO 3 16 */
-			"", /* GPIO 3 17 */
-			"MMC0_nCD", /* GPIO 3 18 */
-			"CUST_RES", /* GPIO 3 19 */
-			"nPRESDET", /* GPIO 3 20 */
-			"DO_FAN", /* GPIO 3 21 */
-			"", /* GPIO 3 22 */
-			"", /* GPIO 3 23 */
-			"", /* GPIO 3 24 */
-			"", /* GPIO 3 25 */
-			"", /* GPIO 3 26 */
-			"", /* GPIO 3 27 */
-			"", /* GPIO 3 28 */
-			"", /* GPIO 3 29 */
-			"", /* GPIO 3 30 */
-			""; /* GPIO 3 31 */
-};
-
-&uart0 {
-	/* Debug */
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&uart0_pins>;
-};
-
-&uart1 {
-	/* EXT */
-	status = "okay";
-	compatible = "ti,omap3-uart-rtu";
-	pinctrl-names = "default";
-	pinctrl-0 = <&uart1_pins>;
-	rts-gpio = <&gpio1 14 GPIO_ACTIVE_HIGH>;
-	rs485-rts-active-high;
-	linux,rs485-enabled-at-boot-time;
-};
-
-&uart2 {
-	/* KBUS */
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&uart2_pins>;
-};
-
-&uart3 {
-	/* DALI */
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&uart3_pins>;
-};
-
-&uart4 {
-	/* RCU */
-	status = "okay";
-	compatible = "ti,omap3-uart-rtu";
-	pinctrl-names = "default";
-	pinctrl-0 = <&uart4_pins>;
-	rts-gpio = <&gpio1 13 GPIO_ACTIVE_HIGH>;
-	rs485-rts-active-high;
-	linux,rs485-enabled-at-boot-time;
-};
-
-&usb {
-	status = "disabled";
-	pinctrl-0 = <&usb0_pins>;
-};
-
-&usb_ctrl_mod {
-	status = "disabled";
-};
-
-&usb0_phy {
-	status = "disabled";
-};
-
-&usb0 {
-	status = "disabled";
-	dr_mode = "peripheral";
-};
-
-&cppi41dma {
-	/* USB-DMA */
-	status = "okay";
-};
-
-&sham {
-	status = "okay";
-};
-
-&aes {
-	status = "okay";
-};
-
-&mmc1 {
-	/* SD-Card */
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&mmc1_pins>;
-	vmmc-supply = <&vmmc_reg>;
-	max-frequency = <26000000>;
-	bus-width = <4>;
-	cd-gpios = <&gpio3 18 GPIO_ACTIVE_HIGH>;
-	wp-gpios = <>;
-};
-
-&mac {
-	pinctrl-names = "default";
-	pinctrl-0 = <&cpsw_default_pins>;
-	pinctrl-1 = <&cpsw_sleep_pins>;
-	status = "okay";
-
-	mac_control = <0x18021>; /* force 100MBit full-duplex */
-	active_slave = <1>;
-};
-
-&bitbang_mdio0 {
-       status = "okay";
-       pinctrl-names = "default", "sleep";
-       pinctrl-0 = <&gpio_bitbang_mdio_pins>;
-       pinctrl-1 = <&gpio_bitbang_mdio_sleep_pins>;
-       gpios = <&gpio0 1 0	/* 0: mdc  */
-	        &gpio0 0 0>;   	/* 1: mdio */
-
-       phy1: ethernet-phy@1 {
-		compatible = "ethernet-phy-ieee802.3-c22";
-		reg = <1>;
-       };
-
-       phy2: ethernet-phy@2 {
-		compatible = "ethernet-phy-ieee802.3-c22";
-		reg = <2>;
-       };
-};
-
-/*
- * Use a fixed phy for emac1.
- * that's rgmii2
- */
-&cpsw_emac1 {
-	phy-mode = "rmii";
-	fixed-link {
-		speed = <100>;
-		full-duplex;
-	};
-};
-
-&phy_sel {
-	rmii-clock-ext;
-};
-
-/include/ "pxc-nandparts.dtsi"
-- 
2.7.4

