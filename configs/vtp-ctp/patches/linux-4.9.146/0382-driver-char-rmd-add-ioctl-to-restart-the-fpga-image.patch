From 08e1abd8164d38c25de6cc70b36a0e38c5b839c6 Mon Sep 17 00:00:00 2001
From: Oliver Rohe <Oliver.Rohe@wago.com>
Date: Wed, 15 Jan 2020 09:43:11 +0100
Subject: [PATCH] driver: char: rmd: add ioctl to restart the fpga image

---
 drivers/char/rmd.c       | 44 +++++++++-----------------------------------
 include/uapi/linux/rmd.h |  3 +++
 2 files changed, 12 insertions(+), 35 deletions(-)

diff --git a/drivers/char/rmd.c b/drivers/char/rmd.c
index 2e6d21c..f33702b 100644
--- a/drivers/char/rmd.c
+++ b/drivers/char/rmd.c
@@ -154,27 +154,10 @@ static int rmd_set_fpga_reset(struct rmd *rmd, int val)
 	return 0;
 }
 
-static ssize_t rmd_fpga_reset(struct device *dev,
-			      struct device_attribute *attr,
-			      const char *buf, size_t count)
+static int rmd_fpga_restart(struct rmd *rmd)
 {
-	struct rmd *rmd = dev_get_drvdata(dev);
-
-	if (test_bit(0, &rmd->is_open)) {
-		dev_err(rmd->dev, "FPGA can not be reseted, because RMD device is open\n");
-		return -EINVAL;
-	}
-
-	/* Put FPGA into reset */
-	if (rmd_set_fpga_reset(rmd, 1))
-		return -ENXIO;
-
-	/* Get FPGA out of reset and load the image from flash */
-	if (rmd_set_fpga_reset(rmd, 0))
-		return -ENXIO;
-
 	if (!rmd->nrst) {
-		dev_err(rmd->dev, "FPGA image could not be started\n");
+		dev_err(rmd->dev, "FPGA image could not be restarted\n");
 		return -ENXIO;
 	}
 
@@ -184,13 +167,9 @@ static ssize_t rmd_fpga_reset(struct device *dev,
 	gpiod_set_value_cansleep(rmd->nrst, 1);
 	mdelay(1);
 
-	dev_info(dev, "FPGA resetted\n");
-
-	return count;
+	return 0;
 }
 
-static DEVICE_ATTR(reset, 0200, NULL, rmd_fpga_reset);
-
 static int rmd_disable(struct rmd *rmd, int val)
 {
 	struct pinctrl *pinctrl;
@@ -317,19 +296,11 @@ static int rmd_load_firmware(struct rmd *rmd)
 	u32 datetime;
 	int ret, i;
 
+	/* Load the image into the FPGA if necessary */
 	rmd_set_fpga_reset(rmd, 0);
 
-	if (!rmd->nrst)
-		return -ENXIO;
-
-	/*
-	 * make sure that the fpga is out of reset
-	 * we need a rising edge here
-	 */
-	gpiod_set_value_cansleep(rmd->nrst, 0);
-	udelay(100);
-	gpiod_set_value_cansleep(rmd->nrst, 1);
-	mdelay(1);
+	/* Loading of the image requires a restart afterwards */
+	rmd_fpga_restart(rmd);
 
 	ret = request_firmware(&fw, rmd->fw_name, rmd->dev);
 
@@ -889,6 +860,9 @@ static long rmd_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)
 	case RMD_ACTIVATE_TX_PATH:
 		return rmd_dma_enable_disable_tx(info, arg ? 1 : 0);
 
+	case RMD_RESTART_FPGA_IMAGE:
+		return rmd_fpga_restart(info->rmd);
+
 	case RMD_GET_READ_TRIPPLE_BUF_CTRL_OFFSET:
 		return info->rx_channel.tripple_buf_ctrl_offset;
 
diff --git a/include/uapi/linux/rmd.h b/include/uapi/linux/rmd.h
index 5383465..4818aa4 100644
--- a/include/uapi/linux/rmd.h
+++ b/include/uapi/linux/rmd.h
@@ -119,4 +119,7 @@ struct rmd_cycle {
  */
 #define RMD_GET_TRIPPLE_BUF_CTRL_SIZE		_IO(RMD_DRV_MAGIC, 14)
 
+/* Restarts the FPGA image using the nRST pin */
+#define RMD_RESTART_FPGA_IMAGE			_IO(RMD_DRV_MAGIC, 15)
+
 #endif /* _UAPI_LINUX_RMD_H */
-- 
2.7.4

