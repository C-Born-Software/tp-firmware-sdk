From e4bb8c77a35c97c7f367ce7d040e7de1c220a59e Mon Sep 17 00:00:00 2001
From: Andreas Schmidt <andreas.schmidt@wago.com>
Date: Tue, 3 Jul 2018 12:14:09 +0200
Subject: [PATCH] xsk: Fix umem fill/completion queue mmap on 32-bit
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

With gcc-4.1.2 on 32-bit:

    net/xdp/xsk.c:663: warning: integer constant is too large for ‘long’ type
    net/xdp/xsk.c:665: warning: integer constant is too large for ‘long’ type

Add the missing "ULL" suffixes to the large XDP_UMEM_PGOFF_*_RING values
to fix this.

    net/xdp/xsk.c:663: warning: comparison is always false due to limited range of data type
    net/xdp/xsk.c:665: warning: comparison is always false due to limited range of data type

"unsigned long" is 32-bit on 32-bit systems, hence the offset is
truncated, and can never be equal to any of the XDP_UMEM_PGOFF_*_RING
values.  Use loff_t (and the required cast) to fix this.

Fixes: 423f38329d267969 ("xsk: add umem fill queue support and mmap")
Fixes: fe2308328cd2f26e ("xsk: add umem completion queue support and mmap")
Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
Acked-by: Björn Töpel <bjorn.topel@intel.com>
Signed-off-by: Andreas Schmidt <andreas.schmidt@wago.com>
---
 include/uapi/linux/if_xdp.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/include/uapi/linux/if_xdp.h b/include/uapi/linux/if_xdp.h
index e2ea878..6f74114 100644
--- a/include/uapi/linux/if_xdp.h
+++ b/include/uapi/linux/if_xdp.h
@@ -47,10 +47,10 @@ struct xdp_umem_reg {
 };
 
 /* Pgoff for mmaping the rings */
-#define XDP_PGOFF_RX_RING			  0
-#define XDP_PGOFF_TX_RING		 0x80000000
-#define XDP_UMEM_PGOFF_FILL_RING	0x100000000
-#define XDP_UMEM_PGOFF_COMPLETION_RING	0x180000000
+#define XDP_PGOFF_RX_RING			 0
+#define XDP_PGOFF_TX_RING		0x80000000
+#define XDP_UMEM_PGOFF_FILL_RING	0x10000000
+#define XDP_UMEM_PGOFF_COMPLETION_RING	0x18000000
 
 struct xdp_desc {
 	__u32 idx;
-- 
2.7.4

