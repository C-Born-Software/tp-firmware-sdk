From 0a1fac1ae0fd2cfe9e040d54742ba9d100f25ebc Mon Sep 17 00:00:00 2001
From: Oliver Schildan <oliver.schildan@wago.com>
Date: Thu, 1 Mar 2018 10:17:35 +0100
Subject: [PATCH] debug: Add unicast/multicast filter print out in sysfs

---
 net/core/net-procfs.c |  2 +-
 net/dsa/dsa.c         | 64 ++++++++++++++++++++++++++++++++++++++++++++++++++-
 2 files changed, 64 insertions(+), 2 deletions(-)

diff --git a/net/core/net-procfs.c b/net/core/net-procfs.c
index 14d0934..0279b93 100644
--- a/net/core/net-procfs.c
+++ b/net/core/net-procfs.c
@@ -369,7 +369,7 @@ static int dev_mc_seq_show(struct seq_file *seq, void *v)
 			   dev->name, ha->refcount, ha->global_use);
 
 		for (i = 0; i < dev->addr_len; i++)
-			seq_printf(seq, "%02x", ha->addr[i]);
+			seq_printf(seq, "%02x:", ha->addr[i]);
 
 		seq_putc(seq, '\n');
 	}
diff --git a/net/dsa/dsa.c b/net/dsa/dsa.c
index 8563574..967067e 100644
--- a/net/dsa/dsa.c
+++ b/net/dsa/dsa.c
@@ -15,6 +15,8 @@
 #include <linux/list.h>
 #include <linux/platform_device.h>
 #include <linux/slab.h>
+#include <linux/fs.h>
+#include <asm/uaccess.h>
 #include <linux/module.h>
 #include <net/dsa.h>
 #include <linux/of.h>
@@ -924,7 +926,8 @@ static inline void dsa_of_remove(struct device *dev)
 #endif
 
 static struct dsa_switch_tree *gdst;
-extern struct device* wsysinit_sysfs_device;
+extern struct device *wsysinit_sysfs_device;
+extern struct class *wsysinit_sysfs_class;
 static ssize_t dsa_dump_hw_list_set(struct device *dev,
 				    struct device_attribute *attr,
 				    const char *buf,
@@ -958,8 +961,57 @@ static ssize_t dsa_dump_hw_list_set(struct device *dev,
 
 	return count;
 }
+
 DEVICE_ATTR(dsa_dump_hw_list, 0200, NULL, dsa_dump_hw_list_set);
 
+static dev_t wsysinit_sysfs_dev_eth;
+struct device *wsysinit_sysfs_device_eth;
+ssize_t emac_dump_uc_filter_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	struct net_device *ndev;
+	struct netdev_hw_addr *ha;
+	char *list = "Unicast List: ";
+	char tmp[MAX_ADDR_LEN+IFNAMSIZ+strlen(list)];
+
+	if (gdst == NULL)
+		return -1;
+
+	ndev = gdst->master_netdev;
+
+	if (!netdev_uc_empty(ndev)) {
+		sprintf(tmp, "%s %s (%pM)\n", list, ndev->name, ndev->dev_addr);
+		strcat(buf, tmp);
+		netdev_for_each_uc_addr(ha, ndev) {
+			sprintf(tmp, "\t %s: %pM\n", ndev->name, ha->addr);
+			strcat(buf, tmp);
+		}
+	}
+
+	return strlen(buf);
+}
+DEVICE_ATTR(emac_dump_uc_hw_filter, 0444, emac_dump_uc_filter_show, NULL);
+
+ssize_t emac_dump_mc_filter_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	struct file *f;
+
+	if (gdst == NULL)
+		return -1;
+
+	f = filp_open("/proc/net/dev_mcast", O_RDONLY, 0);
+
+	if (f != NULL) {
+		/* Read the file */
+		f->f_op->read(f, buf, 512, &f->f_pos);
+	}
+
+	return strlen(buf);
+}
+DEVICE_ATTR(emac_dump_mc_hw_filter, 0444, emac_dump_mc_filter_show, NULL);
+
+
+
+
 static int dsa_setup_dst(struct dsa_switch_tree *dst, struct net_device *dev,
 			 struct device *parent, struct dsa_platform_data *pd)
 {
@@ -1067,6 +1119,16 @@ static int dsa_probe(struct platform_device *pdev)
 	if (device_create_file(wsysinit_sysfs_device, &dev_attr_dsa_dump_hw_list))
 		pr_err("%s: failed to create sysfs entry!\n", __func__);
 
+
+	wsysinit_sysfs_device_eth = device_create (wsysinit_sysfs_class, NULL,
+		wsysinit_sysfs_dev_eth, NULL, "eth");
+
+	if (device_create_file(wsysinit_sysfs_device_eth, &dev_attr_emac_dump_uc_hw_filter))
+		pr_err("%s: failed to create sysfs entry (emac_dump_uc_hw_filter)!\n", __func__);
+	if (device_create_file(wsysinit_sysfs_device_eth, &dev_attr_emac_dump_mc_hw_filter))
+		pr_err("%s: failed to create sysfs entry (emac_dump_mc_hw_filter)!\n", __func__);
+
+
 	return 0;
 
 out:
-- 
2.7.4

