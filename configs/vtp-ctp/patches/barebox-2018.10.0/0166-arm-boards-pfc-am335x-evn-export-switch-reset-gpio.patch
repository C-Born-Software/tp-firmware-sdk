From e42da7328af3c6c5b7f19a445d0b9a1dcfd1b73b Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Thu, 28 Mar 2019 13:24:03 +0100
Subject: [PATCH] arm: boards: pfc-am335x: evn: export switch reset gpio

Signed-off-by: Oleg Karfich <oleg.karfich@wago.com>
---
 arch/arm/boards/wago-pfc-am335x/board.c            | 11 ++++++++
 .../defaultenv-pfc-base/init/a-pfc-switch-reset    | 31 +++++-----------------
 2 files changed, 17 insertions(+), 25 deletions(-)

diff --git a/arch/arm/boards/wago-pfc-am335x/board.c b/arch/arm/boards/wago-pfc-am335x/board.c
index f088d72..e4e89a4 100644
--- a/arch/arm/boards/wago-pfc-am335x/board.c
+++ b/arch/arm/boards/wago-pfc-am335x/board.c
@@ -40,10 +40,14 @@
 #include <globalvar.h>
 #include <xsection.h>
 #include <linux/bitmap.h>
+#include <gpio.h>
+#include <of_gpio.h>
 
 #define ETH_DEVICE_0 0
 #define ETH_DEVICE_1 1
 
+static unsigned int pfc_sw_reset_gpio;
+
 static int pfc_coredevice_init(void)
 {
 	if (!of_machine_is_compatible("wago,am335x-pfc"))
@@ -156,6 +160,13 @@ static int pfc_devices_init(void)
 		pr_warn("failed to get board.variant from oftree\n");
 	}
 
+	pfc_sw_reset_gpio = of_get_named_gpio(of_get_root_node(),
+							"switch-reset-gpio", 0);
+	if (!gpio_is_valid(pfc_sw_reset_gpio))
+		pfc_sw_reset_gpio = -1;
+
+	globalvar_add_simple_int("pfc.sw_reset_gpio", &pfc_sw_reset_gpio, "%d");
+
 	node = of_find_node_by_alias(of_get_root_node(), "sd");
 	if (node)
 		if (of_device_is_available(node))
diff --git a/defaultenv/defaultenv-pfc-base/init/a-pfc-switch-reset b/defaultenv/defaultenv-pfc-base/init/a-pfc-switch-reset
index 0d33a3d..ab47598 100644
--- a/defaultenv/defaultenv-pfc-base/init/a-pfc-switch-reset
+++ b/defaultenv/defaultenv-pfc-base/init/a-pfc-switch-reset
@@ -5,33 +5,14 @@ source env/data/print-msg-formats
 # Hint: on am35xx based devices we do not need to get the switch out of reset
 # manually. This is already done by the hardware reset-logic.
 
-pfc100_sw_reset_pin=85
-pfc200v2_sw_reset_pin=106
-pfc200v3_sw_reset_pin=132
-vtpctp_sw_reset_pin=105
-src_sw_reset_pin=${pfc200v2_sw_reset_pin}
-pac100_sw_reset_pin=${pfc200v3_sw_reset_pin}
-
-if [ "${global.board.variant}" = "pfc100" ]; then
-	current_reset_pin="${pfc100_sw_reset_pin}"
-elif [ "${global.board.variant}" = "pfc200v2" ]; then
-	current_reset_pin="${pfc200v2_sw_reset_pin}"
-elif [ "${global.board.variant}" = "pfc200v3" ]; then
-	current_reset_pin="${pfc200v3_sw_reset_pin}"
-elif [ "${global.board.variant}" = "vtpctp" ]; then
-	current_reset_pin="${vtpctp_sw_reset_pin}"
-elif [ "${global.board.variant}" = "src" ]; then
-	current_reset_pin="${src_sw_reset_pin}"
-elif [ "${global.board.variant}" = "pac100" ]; then
-	current_reset_pin="${pac100_sw_reset_pin}"
-else
+if [ ${global.pfc.sw_reset_gpio} -eq -1 ]; then
 	echo -e ${warning} "no switch reset pin defined for board \e[00;32m${global.board.variant}\e[00m"
 	exit 0
+else
+	echo -n -e ${info} "reset switch for board \e[00;32m${global.board.variant}\e[00m with gpio pin "
+	echo "${global.pfc.sw_reset_gpio}"
 fi
 
-echo -n -e ${info} "reset switch for board \e[00;32m${global.board.variant}\e[00m with gpio pin "
-echo "${current_reset_pin}"
-
-gpio_direction_output "${current_reset_pin}" 0
+gpio_direction_output "${global.pfc.sw_reset_gpio}" 0
 msleep 1
-gpio_direction_output "${current_reset_pin}" 1
+gpio_direction_output "${global.pfc.sw_reset_gpio}" 1
-- 
2.7.4

