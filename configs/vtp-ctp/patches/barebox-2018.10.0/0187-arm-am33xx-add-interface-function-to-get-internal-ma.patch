From a073b047ee44d8e234fccfa22a5f423560533ad7 Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Wed, 13 Nov 2019 17:33:07 +0100
Subject: [PATCH] arm: am33xx: add interface function to get internal mac

Signed-off-by: Oleg Karfich <oleg.karfich@wago.com>
---
 arch/arm/mach-omap/am33xx_generic.c              | 12 ++++++++++--
 arch/arm/mach-omap/include/mach/am33xx-generic.h |  1 +
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-omap/am33xx_generic.c b/arch/arm/mach-omap/am33xx_generic.c
index 5137462..0fb9e3de 100644
--- a/arch/arm/mach-omap/am33xx_generic.c
+++ b/arch/arm/mach-omap/am33xx_generic.c
@@ -189,11 +189,10 @@ static void am33xx_detect_reset_reason(void)
 	}
 }
 
-int am33xx_register_ethaddr(int eth_id, int mac_id)
+int am33xx_get_internal_mac_id(uint8_t *mac_addr, int mac_id)
 {
 	void __iomem *mac_id_low = (void *)AM33XX_MAC_ID0_LO + mac_id * 8;
 	void __iomem *mac_id_high = (void *)AM33XX_MAC_ID0_HI + mac_id * 8;
-	uint8_t mac_addr[6];
 	uint32_t mac_hi, mac_lo;
 
 	mac_lo = readl(mac_id_low);
@@ -205,6 +204,15 @@ int am33xx_register_ethaddr(int eth_id, int mac_id)
 	mac_addr[4] = mac_lo & 0xff;
 	mac_addr[5] = (mac_lo & 0xff00) >> 8;
 
+	return 0;
+}
+
+int am33xx_register_ethaddr(int eth_id, int mac_id)
+{
+	uint8_t mac_addr[6];
+
+	am33xx_get_internal_mac_id(mac_addr, mac_id);
+
 	if (is_valid_ether_addr(mac_addr)) {
 		eth_register_ethaddr(eth_id, mac_addr);
 		return 0;
diff --git a/arch/arm/mach-omap/include/mach/am33xx-generic.h b/arch/arm/mach-omap/include/mach/am33xx-generic.h
index 7e64e74..0d2afb8 100644
--- a/arch/arm/mach-omap/include/mach/am33xx-generic.h
+++ b/arch/arm/mach-omap/include/mach/am33xx-generic.h
@@ -6,6 +6,7 @@
 #include <mach/am33xx-silicon.h>
 
 int am33xx_register_ethaddr(int eth_id, int mac_id);
+int am33xx_get_internal_mac_id(uint8_t *mac_addr, int mac_id);
 
 u32 am33xx_get_cpu_rev(void);
 
-- 
2.7.4

